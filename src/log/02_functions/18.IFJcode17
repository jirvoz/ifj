# 2017-12-04 23:21:43.715040
# SECTION: 02_functions
# TEST: 18
# INFO: argument of function is call of function
# REQUIRED EXTENSIONS: FUNEXP
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: ICREATEFRAME at line: 35 with following arguments:
# Executing instruction: IPUSHFRAME at line: 36 with following arguments:
# Executing instruction: IDEFVAR at line: 39 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 44 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=-10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=-10(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 21 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 24 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 25 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 26 with following arguments:
# Executing instruction: IRETURN at line: 27 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 54 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: LF@a=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 21 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 24 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 25 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 26 with following arguments:
# Executing instruction: IRETURN at line: 27 with following arguments:
# Executing instruction: IINT2FLOATS at line: 55 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 56 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 57 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: LF@a=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 21 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 24 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 25 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 26 with following arguments:
# Executing instruction: IRETURN at line: 27 with following arguments:
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 59 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 60 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@a=-10(int)
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: LF@a=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 63 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 64 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 65 with following arguments:
# Executing instruction: IDEFVAR at line: 66 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=16(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 68 with following arguments:
# Arg1: TF@write=16(int)
# Executing instruction: IGROOT at line: 73 with following arguments:
# I am Groot at 73 (369).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 369 (123+246)
# GROOT: 369
# 
#   1: ' argument of function is call of function
#   2: 
#   3: function __HJHLH(a as integer) as integer
#   4: 	
#   5: 	return a * 2
#   6: 
#   7: end function
#   8: 
#   9: 
#  10: SCOPE
#  11: 
#  12: 	dim a as integer = 0 - 10
#  13: 	a = __HJHLH(__HJHLH(__HJHLH(2)))
#  14: 	print a;
#  15: 
#  16: 
#  17: END SCOPE

########################################

.IFJcode17                                                                      #     1/71
DEFVAR GF@$str1                                                                 #     2/71
DEFVAR GF@$str2                                                                 #     3/71
DEFVAR GF@$num1                                                                 #     4/71
DEFVAR GF@$num2                                                                 #     5/71
DEFVAR GF@$num3                                                                 #     6/71
DEFVAR GF@$bool1                                                                #     7/71
DEFVAR GF@$counter                                                              #     8/71
DEFVAR GF@$char                                                                 #     9/71
JUMP $$main                                                                     #    10/71
LABEL $__hjhlh                                                                  #    12/71
CREATEFRAME                                                                     #    13/71
PUSHFRAME                                                                       #    14/71
DEFVAR LF@a                                                                     #    15/71
POPS LF@a                                                                       #    16/71
PUSHS LF@a                                                                      #    20/71
INT2FLOATS                                                                      #    21/71
PUSHS int@2                                                                     #    22/71
INT2FLOATS                                                                      #    23/71
MULS                                                                            #    24/71
FLOAT2R2EINTS                                                                   #    25/71
POPFRAME                                                                        #    26/71
RETURN                                                                          #    27/71
PUSHS int@0                                                                     #    30/71
POPFRAME                                                                        #    31/71
RETURN                                                                          #    32/71
LABEL $$main                                                                    #    34/71
CREATEFRAME                                                                     #    35/71
PUSHFRAME                                                                       #    36/71
DEFVAR LF@a                                                                     #    39/71
PUSHS int@0                                                                     #    40/71
INT2FLOATS                                                                      #    41/71
PUSHS int@10                                                                    #    42/71
INT2FLOATS                                                                      #    43/71
SUBS                                                                            #    44/71
FLOAT2R2EINTS                                                                   #    45/71
POPS LF@a                                                                       #    46/71
PUSHS int@2                                                                     #    48/71
INT2FLOATS                                                                      #    49/71
FLOAT2R2EINTS                                                                   #    50/71
CALL $__hjhlh                                                                   #    51/71
INT2FLOATS                                                                      #    52/71
FLOAT2R2EINTS                                                                   #    53/71
CALL $__hjhlh                                                                   #    54/71
INT2FLOATS                                                                      #    55/71
FLOAT2R2EINTS                                                                   #    56/71
CALL $__hjhlh                                                                   #    57/71
INT2FLOATS                                                                      #    58/71
FLOAT2R2EINTS                                                                   #    59/71
POPS LF@a                                                                       #    60/71
PUSHS LF@a                                                                      #    62/71
INT2FLOATS                                                                      #    63/71
FLOAT2R2EINTS                                                                   #    64/71
CREATEFRAME                                                                     #    65/71
DEFVAR TF@write                                                                 #    66/71
POPS TF@write                                                                   #    67/71
WRITE TF@write                                                                  #    68/71

