# 2017-12-04 23:21:43.933381
# SECTION: 02_functions
# TEST: 28
# INFO: Colision which is OK
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 44 with following arguments:
# Executing instruction: ICREATEFRAME at line: 45 with following arguments:
# Executing instruction: IPUSHFRAME at line: 46 with following arguments:
# Executing instruction: IDEFVAR at line: 48 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 49 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 29 with following arguments:
# Executing instruction: ICREATEFRAME at line: 30 with following arguments:
# Executing instruction: IPUSHFRAME at line: 31 with following arguments:
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 35 with following arguments:
# Arg1: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 36 with following arguments:
# Arg1: Stack@=42(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 37 with following arguments:
# Executing instruction: IRETURN at line: 38 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=42(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@a=0(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=42(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 59 with following arguments:
# Executing instruction: IDEFVAR at line: 60 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 61 with following arguments:
# Arg1: Stack@=42(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 62 with following arguments:
# Arg1: TF@write=42(int)
# Executing instruction: IGROOT at line: 65 with following arguments:
# I am Groot at 65 (143).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 143 (49+94)
# GROOT: 143
# 
#   1: ' Colision which is OK
#   2: function bar(foo1 as integer) as integer
#   3:     return foo1
#   4: end function
#   5: 
#   6: declare function foo1() as integer
#   7: 
#   8: function foo1() as integer
#   9:     return 42
#  10: end function
#  11: 
#  12: scope
#  13:     dim a as integer 
#  14:     a = foo1()
#  15:     print a;
#  16: end scope

########################################

.IFJcode17                                                                      #     1/63
DEFVAR GF@$str1                                                                 #     2/63
DEFVAR GF@$str2                                                                 #     3/63
DEFVAR GF@$num1                                                                 #     4/63
DEFVAR GF@$num2                                                                 #     5/63
DEFVAR GF@$num3                                                                 #     6/63
DEFVAR GF@$bool1                                                                #     7/63
DEFVAR GF@$counter                                                              #     8/63
DEFVAR GF@$char                                                                 #     9/63
JUMP $$main                                                                     #    10/63
LABEL $bar                                                                      #    12/63
CREATEFRAME                                                                     #    13/63
PUSHFRAME                                                                       #    14/63
DEFVAR LF@foo1                                                                  #    15/63
POPS LF@foo1                                                                    #    16/63
PUSHS LF@foo1                                                                   #    19/63
INT2FLOATS                                                                      #    20/63
FLOAT2R2EINTS                                                                   #    21/63
POPFRAME                                                                        #    22/63
RETURN                                                                          #    23/63
PUSHS int@0                                                                     #    25/63
POPFRAME                                                                        #    26/63
RETURN                                                                          #    27/63
LABEL $foo1                                                                     #    29/63
CREATEFRAME                                                                     #    30/63
PUSHFRAME                                                                       #    31/63
PUSHS int@42                                                                    #    34/63
INT2FLOATS                                                                      #    35/63
FLOAT2R2EINTS                                                                   #    36/63
POPFRAME                                                                        #    37/63
RETURN                                                                          #    38/63
PUSHS int@0                                                                     #    40/63
POPFRAME                                                                        #    41/63
RETURN                                                                          #    42/63
LABEL $$main                                                                    #    44/63
CREATEFRAME                                                                     #    45/63
PUSHFRAME                                                                       #    46/63
DEFVAR LF@a                                                                     #    48/63
MOVE LF@a int@0                                                                 #    49/63
CALL $foo1                                                                      #    51/63
INT2FLOATS                                                                      #    52/63
FLOAT2R2EINTS                                                                   #    53/63
POPS LF@a                                                                       #    54/63
PUSHS LF@a                                                                      #    56/63
INT2FLOATS                                                                      #    57/63
FLOAT2R2EINTS                                                                   #    58/63
CREATEFRAME                                                                     #    59/63
DEFVAR TF@write                                                                 #    60/63
POPS TF@write                                                                   #    61/63
WRITE TF@write                                                                  #    62/63

