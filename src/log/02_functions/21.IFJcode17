# 2017-12-04 23:21:43.754094
# SECTION: 02_functions
# TEST: 21
# INFO: Recursion of three functions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 184 with following arguments:
# Executing instruction: ICREATEFRAME at line: 185 with following arguments:
# Executing instruction: IPUSHFRAME at line: 186 with following arguments:
# Executing instruction: IDEFVAR at line: 189 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 190 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: Const@=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 193 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 194 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 195 with following arguments:
# Executing instruction: ILABEL at line: 124 with following arguments:
# Executing instruction: ICREATEFRAME at line: 125 with following arguments:
# Executing instruction: IPUSHFRAME at line: 126 with following arguments:
# Executing instruction: IDEFVAR at line: 127 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 128 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 132 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 133 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 136 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 137 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 138 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 139 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 140 with following arguments:
# Arg1: Stack@=20(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 141 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 142 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 145 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 146 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 147 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 148 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 26 with following arguments:
# Arg1: Stack@=20(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 28 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 44 with following arguments:
# Arg1: Stack@=20(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=19(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=19(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@b=19(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=19(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=19(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 68 with following arguments:
# Executing instruction: ICREATEFRAME at line: 69 with following arguments:
# Executing instruction: IPUSHFRAME at line: 70 with following arguments:
# Executing instruction: IDEFVAR at line: 71 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=19(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 75 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 76 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@a=19(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 79 with following arguments:
# Arg1: Stack@=19(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 81 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 82 with following arguments:
# Arg1: Stack@=19(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 84 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 94 with following arguments:
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=19(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=19(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 99 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 100 with following arguments:
# Arg1: Stack@=19(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 101 with following arguments:
# Arg1: Stack@=18(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 102 with following arguments:
# Arg1: Stack@=18(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@b=18(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=18(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=18(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 107 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=18(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@a=18(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=18(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 26 with following arguments:
# Arg1: Stack@=18(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 28 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=18(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=18(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 44 with following arguments:
# Arg1: Stack@=18(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=17(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=17(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@b=17(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=17(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=17(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 68 with following arguments:
# Executing instruction: ICREATEFRAME at line: 69 with following arguments:
# Executing instruction: IPUSHFRAME at line: 70 with following arguments:
# Executing instruction: IDEFVAR at line: 71 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=17(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 75 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 76 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@a=17(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 79 with following arguments:
# Arg1: Stack@=17(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 81 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 82 with following arguments:
# Arg1: Stack@=17(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 84 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 94 with following arguments:
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=17(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=17(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 99 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 100 with following arguments:
# Arg1: Stack@=17(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 101 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 102 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@b=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 107 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@a=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 26 with following arguments:
# Arg1: Stack@=16(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 28 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 44 with following arguments:
# Arg1: Stack@=16(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=15(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=15(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@b=15(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=15(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=15(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 68 with following arguments:
# Executing instruction: ICREATEFRAME at line: 69 with following arguments:
# Executing instruction: IPUSHFRAME at line: 70 with following arguments:
# Executing instruction: IDEFVAR at line: 71 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=15(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 75 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 76 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@a=15(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 79 with following arguments:
# Arg1: Stack@=15(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 81 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 82 with following arguments:
# Arg1: Stack@=15(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 84 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 94 with following arguments:
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=15(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=15(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 99 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 100 with following arguments:
# Arg1: Stack@=15(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 101 with following arguments:
# Arg1: Stack@=14(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 102 with following arguments:
# Arg1: Stack@=14(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@b=14(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=14(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=14(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 107 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=14(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@a=14(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=14(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 26 with following arguments:
# Arg1: Stack@=14(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 28 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=14(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=14(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 44 with following arguments:
# Arg1: Stack@=14(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=13(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=13(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@b=13(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=13(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=13(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 68 with following arguments:
# Executing instruction: ICREATEFRAME at line: 69 with following arguments:
# Executing instruction: IPUSHFRAME at line: 70 with following arguments:
# Executing instruction: IDEFVAR at line: 71 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=13(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 75 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 76 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@a=13(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 79 with following arguments:
# Arg1: Stack@=13(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 81 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 82 with following arguments:
# Arg1: Stack@=13(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 84 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 94 with following arguments:
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=13(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=13(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 99 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 100 with following arguments:
# Arg1: Stack@=13(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 101 with following arguments:
# Arg1: Stack@=12(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 102 with following arguments:
# Arg1: Stack@=12(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@b=12(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=12(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=12(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 107 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=12(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@a=12(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=12(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 26 with following arguments:
# Arg1: Stack@=12(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 28 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=12(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=12(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 44 with following arguments:
# Arg1: Stack@=12(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=11(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@b=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=11(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 68 with following arguments:
# Executing instruction: ICREATEFRAME at line: 69 with following arguments:
# Executing instruction: IPUSHFRAME at line: 70 with following arguments:
# Executing instruction: IDEFVAR at line: 71 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 75 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 76 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@a=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 79 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 81 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 82 with following arguments:
# Arg1: Stack@=11(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 84 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 94 with following arguments:
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 99 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 100 with following arguments:
# Arg1: Stack@=11(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 101 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 102 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@b=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 107 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@a=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 26 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 28 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 44 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@b=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 68 with following arguments:
# Executing instruction: ICREATEFRAME at line: 69 with following arguments:
# Executing instruction: IPUSHFRAME at line: 70 with following arguments:
# Executing instruction: IDEFVAR at line: 71 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 75 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 76 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@a=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 79 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 81 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 82 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 84 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 94 with following arguments:
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 99 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 100 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 101 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 102 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@b=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 107 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@a=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 26 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 28 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 44 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@b=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 68 with following arguments:
# Executing instruction: ICREATEFRAME at line: 69 with following arguments:
# Executing instruction: IPUSHFRAME at line: 70 with following arguments:
# Executing instruction: IDEFVAR at line: 71 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 75 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 76 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@a=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 79 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 81 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 82 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 84 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 94 with following arguments:
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 99 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 100 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 101 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 102 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@b=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 107 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@a=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 26 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 28 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 44 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@b=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 68 with following arguments:
# Executing instruction: ICREATEFRAME at line: 69 with following arguments:
# Executing instruction: IPUSHFRAME at line: 70 with following arguments:
# Executing instruction: IDEFVAR at line: 71 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 75 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 76 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@a=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 79 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 81 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 82 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 84 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 94 with following arguments:
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 99 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 100 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 101 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 102 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@b=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 107 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@a=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 26 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 28 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 44 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@b=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 68 with following arguments:
# Executing instruction: ICREATEFRAME at line: 69 with following arguments:
# Executing instruction: IPUSHFRAME at line: 70 with following arguments:
# Executing instruction: IDEFVAR at line: 71 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 75 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 76 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@a=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 79 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 81 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 82 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 84 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 94 with following arguments:
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 99 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 100 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 101 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 102 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@b=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 107 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 26 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 28 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 44 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@b=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 68 with following arguments:
# Executing instruction: ICREATEFRAME at line: 69 with following arguments:
# Executing instruction: IPUSHFRAME at line: 70 with following arguments:
# Executing instruction: IDEFVAR at line: 71 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 75 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 76 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 79 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 81 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 82 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 84 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 94 with following arguments:
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 99 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 100 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 101 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 102 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@b=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 107 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 26 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 28 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: Const@=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 32 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 33 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 34 with following arguments:
# Executing instruction: IRETURN at line: 35 with following arguments:
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 109 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 110 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 113 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 114 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 115 with following arguments:
# Executing instruction: IRETURN at line: 116 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=1(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 59 with following arguments:
# Executing instruction: IRETURN at line: 60 with following arguments:
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 109 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 110 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=2(int)
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 113 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 114 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 115 with following arguments:
# Executing instruction: IRETURN at line: 116 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=3(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 59 with following arguments:
# Executing instruction: IRETURN at line: 60 with following arguments:
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 109 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 110 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=4(int)
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 113 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 114 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 115 with following arguments:
# Executing instruction: IRETURN at line: 116 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=5(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 59 with following arguments:
# Executing instruction: IRETURN at line: 60 with following arguments:
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 109 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 110 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=6(int)
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 113 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 114 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 115 with following arguments:
# Executing instruction: IRETURN at line: 116 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=7(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 59 with following arguments:
# Executing instruction: IRETURN at line: 60 with following arguments:
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 109 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 110 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=8(int)
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 113 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 114 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 115 with following arguments:
# Executing instruction: IRETURN at line: 116 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=9(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 59 with following arguments:
# Executing instruction: IRETURN at line: 60 with following arguments:
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 109 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 110 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=10(int)
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 113 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 114 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 115 with following arguments:
# Executing instruction: IRETURN at line: 116 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=11(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 59 with following arguments:
# Executing instruction: IRETURN at line: 60 with following arguments:
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 109 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 110 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=12(int)
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 113 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 114 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 115 with following arguments:
# Executing instruction: IRETURN at line: 116 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=13(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 59 with following arguments:
# Executing instruction: IRETURN at line: 60 with following arguments:
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 109 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 110 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=14(int)
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 113 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 114 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 115 with following arguments:
# Executing instruction: IRETURN at line: 116 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=15(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 59 with following arguments:
# Executing instruction: IRETURN at line: 60 with following arguments:
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 109 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 110 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=16(int)
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 113 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 114 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 115 with following arguments:
# Executing instruction: IRETURN at line: 116 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=17(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 59 with following arguments:
# Executing instruction: IRETURN at line: 60 with following arguments:
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 109 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 110 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=18(int)
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 113 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 114 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 115 with following arguments:
# Executing instruction: IRETURN at line: 116 with following arguments:
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=19(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 59 with following arguments:
# Executing instruction: IRETURN at line: 60 with following arguments:
# Executing instruction: IINT2FLOATS at line: 149 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 150 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 151 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 153 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 154 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 155 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 156 with following arguments:
# Executing instruction: IRETURN at line: 157 with following arguments:
# Executing instruction: IINT2FLOATS at line: 196 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 197 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@a=0(int)
# Executing instruction: IPUSHS at line: 200 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 201 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 202 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 203 with following arguments:
# Executing instruction: IDEFVAR at line: 204 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 205 with following arguments:
# Arg1: Stack@=20(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 206 with following arguments:
# Arg1: TF@write=20(int)
# Executing instruction: IGROOT at line: 211 with following arguments:
# I am Groot at 211 (3768).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 3768 (1043+2725)
# GROOT: 3768
# 
#   1: ' Recursion of three functions
#   2: 
#   3: declare function bar(nn as integer) as integer
#   4: 
#   5: function foo(a as integer) as integer
#   6: 	dim b as integer
#   7: 	if (a = 0) then
#   8: 		return 20
#   9: 	else
#  10: 		b = a - 1
#  11: 		b = bar(b)	
#  12: 		return b
#  13: 	end if
#  14: end function
#  15: 
#  16: function bar(a as integer) as integer
#  17: 	dim b as integer
#  18: 	if (a = 0) then
#  19: 		return 20
#  20: 	else
#  21: 		b = a - 1
#  22: 		b = foo(b)
#  23: 		return b
#  24: 	end if
#  25: end function
#  26: 
#  27: function start(a as integer) as integer
#  28: 
#  29: 	dim b as integer
#  30: 
#  31: 	if (a > 10) then 
#  32: 		b = foo(a)
#  33: 		return b
#  34: 	else
#  35: 		b = bar(a)
#  36: 		return b
#  37: 	end if	
#  38: 
#  39: 	
#  40: end function
#  41: 
#  42: scope
#  43: 	
#  44: 	dim a as integer
#  45: 	a = start(20)
#  46: 	print a;
#  47: 
#  48: 
#  49: end scope

########################################

.IFJcode17                                                                      #     1/209
DEFVAR GF@$str1                                                                 #     2/209
DEFVAR GF@$str2                                                                 #     3/209
DEFVAR GF@$num1                                                                 #     4/209
DEFVAR GF@$num2                                                                 #     5/209
DEFVAR GF@$num3                                                                 #     6/209
DEFVAR GF@$bool1                                                                #     7/209
DEFVAR GF@$counter                                                              #     8/209
DEFVAR GF@$char                                                                 #     9/209
JUMP $$main                                                                     #    10/209
LABEL $foo                                                                      #    12/209
CREATEFRAME                                                                     #    13/209
PUSHFRAME                                                                       #    14/209
DEFVAR LF@a                                                                     #    15/209
POPS LF@a                                                                       #    16/209
DEFVAR LF@b                                                                     #    19/209
MOVE LF@b int@0                                                                 #    20/209
PUSHS LF@a                                                                      #    22/209
INT2FLOATS                                                                      #    23/209
PUSHS int@0                                                                     #    24/209
INT2FLOATS                                                                      #    25/209
EQS                                                                             #    26/209
PUSHS bool@true                                                                 #    27/209
JUMPIFNEQS &else7                                                               #    28/209
PUSHS int@20                                                                    #    31/209
INT2FLOATS                                                                      #    32/209
FLOAT2R2EINTS                                                                   #    33/209
POPFRAME                                                                        #    34/209
RETURN                                                                          #    35/209
JUMP &endif7                                                                    #    37/209
LABEL &else7                                                                    #    38/209
PUSHS LF@a                                                                      #    40/209
INT2FLOATS                                                                      #    41/209
PUSHS int@1                                                                     #    42/209
INT2FLOATS                                                                      #    43/209
SUBS                                                                            #    44/209
FLOAT2R2EINTS                                                                   #    45/209
POPS LF@b                                                                       #    46/209
PUSHS LF@b                                                                      #    48/209
INT2FLOATS                                                                      #    49/209
FLOAT2R2EINTS                                                                   #    50/209
CALL $bar                                                                       #    51/209
INT2FLOATS                                                                      #    52/209
FLOAT2R2EINTS                                                                   #    53/209
POPS LF@b                                                                       #    54/209
PUSHS LF@b                                                                      #    56/209
INT2FLOATS                                                                      #    57/209
FLOAT2R2EINTS                                                                   #    58/209
POPFRAME                                                                        #    59/209
RETURN                                                                          #    60/209
LABEL &endif7                                                                   #    62/209
PUSHS int@0                                                                     #    64/209
POPFRAME                                                                        #    65/209
RETURN                                                                          #    66/209
LABEL $bar                                                                      #    68/209
CREATEFRAME                                                                     #    69/209
PUSHFRAME                                                                       #    70/209
DEFVAR LF@a                                                                     #    71/209
POPS LF@a                                                                       #    72/209
DEFVAR LF@b                                                                     #    75/209
MOVE LF@b int@0                                                                 #    76/209
PUSHS LF@a                                                                      #    78/209
INT2FLOATS                                                                      #    79/209
PUSHS int@0                                                                     #    80/209
INT2FLOATS                                                                      #    81/209
EQS                                                                             #    82/209
PUSHS bool@true                                                                 #    83/209
JUMPIFNEQS &else18                                                              #    84/209
PUSHS int@20                                                                    #    87/209
INT2FLOATS                                                                      #    88/209
FLOAT2R2EINTS                                                                   #    89/209
POPFRAME                                                                        #    90/209
RETURN                                                                          #    91/209
JUMP &endif18                                                                   #    93/209
LABEL &else18                                                                   #    94/209
PUSHS LF@a                                                                      #    96/209
INT2FLOATS                                                                      #    97/209
PUSHS int@1                                                                     #    98/209
INT2FLOATS                                                                      #    99/209
SUBS                                                                            #   100/209
FLOAT2R2EINTS                                                                   #   101/209
POPS LF@b                                                                       #   102/209
PUSHS LF@b                                                                      #   104/209
INT2FLOATS                                                                      #   105/209
FLOAT2R2EINTS                                                                   #   106/209
CALL $foo                                                                       #   107/209
INT2FLOATS                                                                      #   108/209
FLOAT2R2EINTS                                                                   #   109/209
POPS LF@b                                                                       #   110/209
PUSHS LF@b                                                                      #   112/209
INT2FLOATS                                                                      #   113/209
FLOAT2R2EINTS                                                                   #   114/209
POPFRAME                                                                        #   115/209
RETURN                                                                          #   116/209
LABEL &endif18                                                                  #   118/209
PUSHS int@0                                                                     #   120/209
POPFRAME                                                                        #   121/209
RETURN                                                                          #   122/209
LABEL $start                                                                    #   124/209
CREATEFRAME                                                                     #   125/209
PUSHFRAME                                                                       #   126/209
DEFVAR LF@a                                                                     #   127/209
POPS LF@a                                                                       #   128/209
DEFVAR LF@b                                                                     #   132/209
MOVE LF@b int@0                                                                 #   133/209
PUSHS LF@a                                                                      #   136/209
INT2FLOATS                                                                      #   137/209
PUSHS int@10                                                                    #   138/209
INT2FLOATS                                                                      #   139/209
GTS                                                                             #   140/209
PUSHS bool@true                                                                 #   141/209
JUMPIFNEQS &else31                                                              #   142/209
PUSHS LF@a                                                                      #   145/209
INT2FLOATS                                                                      #   146/209
FLOAT2R2EINTS                                                                   #   147/209
CALL $foo                                                                       #   148/209
INT2FLOATS                                                                      #   149/209
FLOAT2R2EINTS                                                                   #   150/209
POPS LF@b                                                                       #   151/209
PUSHS LF@b                                                                      #   153/209
INT2FLOATS                                                                      #   154/209
FLOAT2R2EINTS                                                                   #   155/209
POPFRAME                                                                        #   156/209
RETURN                                                                          #   157/209
JUMP &endif31                                                                   #   159/209
LABEL &else31                                                                   #   160/209
PUSHS LF@a                                                                      #   162/209
INT2FLOATS                                                                      #   163/209
FLOAT2R2EINTS                                                                   #   164/209
CALL $bar                                                                       #   165/209
INT2FLOATS                                                                      #   166/209
FLOAT2R2EINTS                                                                   #   167/209
POPS LF@b                                                                       #   168/209
PUSHS LF@b                                                                      #   170/209
INT2FLOATS                                                                      #   171/209
FLOAT2R2EINTS                                                                   #   172/209
POPFRAME                                                                        #   173/209
RETURN                                                                          #   174/209
LABEL &endif31                                                                  #   176/209
PUSHS int@0                                                                     #   180/209
POPFRAME                                                                        #   181/209
RETURN                                                                          #   182/209
LABEL $$main                                                                    #   184/209
CREATEFRAME                                                                     #   185/209
PUSHFRAME                                                                       #   186/209
DEFVAR LF@a                                                                     #   189/209
MOVE LF@a int@0                                                                 #   190/209
PUSHS int@20                                                                    #   192/209
INT2FLOATS                                                                      #   193/209
FLOAT2R2EINTS                                                                   #   194/209
CALL $start                                                                     #   195/209
INT2FLOATS                                                                      #   196/209
FLOAT2R2EINTS                                                                   #   197/209
POPS LF@a                                                                       #   198/209
PUSHS LF@a                                                                      #   200/209
INT2FLOATS                                                                      #   201/209
FLOAT2R2EINTS                                                                   #   202/209
CREATEFRAME                                                                     #   203/209
DEFVAR TF@write                                                                 #   204/209
POPS TF@write                                                                   #   205/209
WRITE TF@write                                                                  #   206/209

