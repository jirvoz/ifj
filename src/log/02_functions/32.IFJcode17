# 2017-12-04 23:21:43.973322
# SECTION: 02_functions
# TEST: 32
# INFO: Double constant into build-in function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=3(double)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@i
# Executing instruction: IMOVE at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@i()
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: LF@j
# Executing instruction: IMOVE at line: 25 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@j()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=gzgfggffg(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=3(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 29 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 30 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@$num1()
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=3(int)
# Dest: GF@$num2()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=gzgfggffg(string)
# Dest: GF@$str1()
# Executing instruction: ISTRLEN at line: 33 with following arguments:
# Arg1: GF@$str1=gzgfggffg(string)
# Dest: GF@$num3()
# Executing instruction: IGT at line: 34 with following arguments:
# Arg1: GF@$num2=3(int)
# Arg2: GF@$num3=9(int)
# Dest: GF@$bool1()
# Executing instruction: IJUMPIFEQ at line: 35 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILS at line: 36 with following arguments:
# Arg1: GF@$num2=3(int)
# Arg2: Const@=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 37 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ISUB at line: 38 with following arguments:
# Arg1: GF@$num2=3(int)
# Arg2: Const@=1(int)
# Dest: GF@$num2=3(int)
# Executing instruction: ISTRI2INT at line: 39 with following arguments:
# Arg1: GF@$str1=gzgfggffg(string)
# Arg2: GF@$num2=2(int)
# Dest: GF@$num1=0(int)
# Executing instruction: ILABEL at line: 40 with following arguments:
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: GF@$num1=103(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=103(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 43 with following arguments:
# Arg1: Stack@=103(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 44 with following arguments:
# Arg1: Stack@=103(int)
# Dest: LF@i=0(int)
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: Const@=ERTZUG(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=3(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 48 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 49 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@$num1=103(int)
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=3(int)
# Dest: GF@$num2=2(int)
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=ERTZUG(string)
# Dest: GF@$str1=gzgfggffg(string)
# Executing instruction: ISTRLEN at line: 52 with following arguments:
# Arg1: GF@$str1=ERTZUG(string)
# Dest: GF@$num3=9(int)
# Executing instruction: IGT at line: 53 with following arguments:
# Arg1: GF@$num2=3(int)
# Arg2: GF@$num3=6(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 54 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILS at line: 55 with following arguments:
# Arg1: GF@$num2=3(int)
# Arg2: Const@=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 56 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ISUB at line: 57 with following arguments:
# Arg1: GF@$num2=3(int)
# Arg2: Const@=1(int)
# Dest: GF@$num2=3(int)
# Executing instruction: ISTRI2INT at line: 58 with following arguments:
# Arg1: GF@$str1=ERTZUG(string)
# Arg2: GF@$num2=2(int)
# Dest: GF@$num1=0(int)
# Executing instruction: ILABEL at line: 59 with following arguments:
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: GF@$num1=84(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 61 with following arguments:
# Arg1: Stack@=84(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 62 with following arguments:
# Arg1: Stack@=84(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 63 with following arguments:
# Arg1: Stack@=84(int)
# Dest: LF@j=0(int)
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@i=103(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 67 with following arguments:
# Arg1: Stack@=103(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 68 with following arguments:
# Arg1: Stack@=103(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 69 with following arguments:
# Executing instruction: IDEFVAR at line: 70 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 71 with following arguments:
# Arg1: Stack@=103(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 72 with following arguments:
# Arg1: TF@write=103(int)
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@j=84(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=84(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 75 with following arguments:
# Arg1: Stack@=84(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 76 with following arguments:
# Executing instruction: IDEFVAR at line: 77 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 78 with following arguments:
# Arg1: Stack@=84(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 79 with following arguments:
# Arg1: TF@write=84(int)
# Executing instruction: IGROOT at line: 83 with following arguments:
# I am Groot at 83 (443).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 443 (107+336)
# GROOT: 443
# 
#   1: ' Double constant into build-in function
#   2: 
#   3: scope
#   4:     dim a as double = 3.0
#   5:     
#   6:     dim i as integer
#   7:     dim j as integer
#   8:     i = asc(!"gzgfggffg", a)
#   9:     j = asc(!"ERTZUG", 3.0)
#  10: 
#  11:     print i; j;
#  12:     
#  13: end scope

########################################

.IFJcode17                                                                      #     1/81
DEFVAR GF@$str1                                                                 #     2/81
DEFVAR GF@$str2                                                                 #     3/81
DEFVAR GF@$num1                                                                 #     4/81
DEFVAR GF@$num2                                                                 #     5/81
DEFVAR GF@$num3                                                                 #     6/81
DEFVAR GF@$bool1                                                                #     7/81
DEFVAR GF@$counter                                                              #     8/81
DEFVAR GF@$char                                                                 #     9/81
JUMP $$main                                                                     #    10/81
LABEL $$main                                                                    #    12/81
CREATEFRAME                                                                     #    13/81
PUSHFRAME                                                                       #    14/81
DEFVAR LF@a                                                                     #    16/81
PUSHS float@3                                                                   #    17/81
POPS LF@a                                                                       #    18/81
DEFVAR LF@i                                                                     #    21/81
MOVE LF@i int@0                                                                 #    22/81
DEFVAR LF@j                                                                     #    24/81
MOVE LF@j int@0                                                                 #    25/81
PUSHS string@gzgfggffg                                                          #    27/81
PUSHS LF@a                                                                      #    28/81
FLOAT2R2EINTS                                                                   #    29/81
MOVE GF@$num1 int@0                                                             #    30/81
POPS GF@$num2                                                                   #    31/81
POPS GF@$str1                                                                   #    32/81
STRLEN GF@$num3 GF@$str1                                                        #    33/81
GT GF@$bool1 GF@$num2 GF@$num3                                                  #    34/81
JUMPIFEQ &asc_end1 GF@$bool1 bool@true                                          #    35/81
LT GF@$bool1 GF@$num2 int@1                                                     #    36/81
JUMPIFEQ &asc_end1 GF@$bool1 bool@true                                          #    37/81
SUB GF@$num2 GF@$num2 int@1                                                     #    38/81
STRI2INT GF@$num1 GF@$str1 GF@$num2                                             #    39/81
LABEL &asc_end1                                                                 #    40/81
PUSHS GF@$num1                                                                  #    41/81
INT2FLOATS                                                                      #    42/81
FLOAT2R2EINTS                                                                   #    43/81
POPS LF@i                                                                       #    44/81
PUSHS string@ERTZUG                                                             #    46/81
PUSHS float@3                                                                   #    47/81
FLOAT2R2EINTS                                                                   #    48/81
MOVE GF@$num1 int@0                                                             #    49/81
POPS GF@$num2                                                                   #    50/81
POPS GF@$str1                                                                   #    51/81
STRLEN GF@$num3 GF@$str1                                                        #    52/81
GT GF@$bool1 GF@$num2 GF@$num3                                                  #    53/81
JUMPIFEQ &asc_end2 GF@$bool1 bool@true                                          #    54/81
LT GF@$bool1 GF@$num2 int@1                                                     #    55/81
JUMPIFEQ &asc_end2 GF@$bool1 bool@true                                          #    56/81
SUB GF@$num2 GF@$num2 int@1                                                     #    57/81
STRI2INT GF@$num1 GF@$str1 GF@$num2                                             #    58/81
LABEL &asc_end2                                                                 #    59/81
PUSHS GF@$num1                                                                  #    60/81
INT2FLOATS                                                                      #    61/81
FLOAT2R2EINTS                                                                   #    62/81
POPS LF@j                                                                       #    63/81
PUSHS LF@i                                                                      #    66/81
INT2FLOATS                                                                      #    67/81
FLOAT2R2EINTS                                                                   #    68/81
CREATEFRAME                                                                     #    69/81
DEFVAR TF@write                                                                 #    70/81
POPS TF@write                                                                   #    71/81
WRITE TF@write                                                                  #    72/81
PUSHS LF@j                                                                      #    73/81
INT2FLOATS                                                                      #    74/81
FLOAT2R2EINTS                                                                   #    75/81
CREATEFRAME                                                                     #    76/81
DEFVAR TF@write                                                                 #    77/81
POPS TF@write                                                                   #    78/81
WRITE TF@write                                                                  #    79/81

