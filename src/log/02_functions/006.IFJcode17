# 2017-12-04 23:21:44.075689
# SECTION: 02_functions
# TEST: 006
# INFO: function integer implicit return
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 21 with following arguments:
# Executing instruction: ICREATEFRAME at line: 22 with following arguments:
# Executing instruction: IPUSHFRAME at line: 23 with following arguments:
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: ICALL at line: 28 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 18 with following arguments:
# Executing instruction: IRETURN at line: 19 with following arguments:
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 30 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@a=0(int)
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 34 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 35 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 36 with following arguments:
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 39 with following arguments:
# Arg1: TF@write=0(int)
# Executing instruction: IGROOT at line: 42 with following arguments:
# I am Groot at 42 (133).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 133 (47+86)
# GROOT: 133
# 
#   1: function foo() as integer 
#   2:  end function 
#   3:  scope 
#   4:  dim a as integer 
#   5:  a = foo() 
#   6:  print a; 
#   7:  end scope

########################################

.IFJcode17                                                                      #     1/40
DEFVAR GF@$str1                                                                 #     2/40
DEFVAR GF@$str2                                                                 #     3/40
DEFVAR GF@$num1                                                                 #     4/40
DEFVAR GF@$num2                                                                 #     5/40
DEFVAR GF@$num3                                                                 #     6/40
DEFVAR GF@$bool1                                                                #     7/40
DEFVAR GF@$counter                                                              #     8/40
DEFVAR GF@$char                                                                 #     9/40
JUMP $$main                                                                     #    10/40
LABEL $foo                                                                      #    12/40
CREATEFRAME                                                                     #    13/40
PUSHFRAME                                                                       #    14/40
PUSHS int@0                                                                     #    17/40
POPFRAME                                                                        #    18/40
RETURN                                                                          #    19/40
LABEL $$main                                                                    #    21/40
CREATEFRAME                                                                     #    22/40
PUSHFRAME                                                                       #    23/40
DEFVAR LF@a                                                                     #    25/40
MOVE LF@a int@0                                                                 #    26/40
CALL $foo                                                                       #    28/40
INT2FLOATS                                                                      #    29/40
FLOAT2R2EINTS                                                                   #    30/40
POPS LF@a                                                                       #    31/40
PUSHS LF@a                                                                      #    33/40
INT2FLOATS                                                                      #    34/40
FLOAT2R2EINTS                                                                   #    35/40
CREATEFRAME                                                                     #    36/40
DEFVAR TF@write                                                                 #    37/40
POPS TF@write                                                                   #    38/40
WRITE TF@write                                                                  #    39/40

