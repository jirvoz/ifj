# 2017-12-04 23:21:43.961693
# SECTION: 02_functions
# TEST: 30
# INFO: multiple functions call
# REQUIRED EXTENSIONS: FUNEXP
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 140 with following arguments:
# Executing instruction: ICREATEFRAME at line: 141 with following arguments:
# Executing instruction: IPUSHFRAME at line: 142 with following arguments:
# Executing instruction: IDEFVAR at line: 144 with following arguments:
# Dest: LF@complexfunccallexpr
# Executing instruction: IPUSHS at line: 145 with following arguments:
# Arg1: Const@=40(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 146 with following arguments:
# Arg1: Stack@=40(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 147 with following arguments:
# Arg1: Const@=15(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 148 with following arguments:
# Arg1: Stack@=15(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 149 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 150 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 151 with following arguments:
# Arg1: Stack@=15(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 152 with following arguments:
# Arg1: Stack@=40(double)
# Arg2: Stack@=1.875(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 153 with following arguments:
# Arg1: Const@=1(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 154 with following arguments:
# Arg1: Const@=2(string)
# Dest: Stack@()
# Executing instruction: ICALL at line: 155 with following arguments:
# Executing instruction: ILABEL at line: 103 with following arguments:
# Executing instruction: ICREATEFRAME at line: 104 with following arguments:
# Executing instruction: IPUSHFRAME at line: 105 with following arguments:
# Executing instruction: IDEFVAR at line: 106 with following arguments:
# Dest: LF@par2
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=2(string)
# Dest: LF@par2()
# Executing instruction: IDEFVAR at line: 108 with following arguments:
# Dest: LF@par1
# Executing instruction: IPOPS at line: 109 with following arguments:
# Arg1: Stack@=1(string)
# Dest: LF@par1()
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 113 with following arguments:
# Arg1: LF@par1=1(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 114 with following arguments:
# Arg1: Stack@=1(string)
# Dest: GF@$str2()
# Executing instruction: IPOPS at line: 115 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: GF@$str1()
# Executing instruction: ICONCAT at line: 116 with following arguments:
# Arg1: GF@$str1=
# (string)
# Arg2: GF@$str2=1(string)
# Dest: GF@$str1=
# (string)
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: GF@$str1=
# 1(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 118 with following arguments:
# Arg1: Const@=  ---   (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 119 with following arguments:
# Arg1: Stack@=  ---   (string)
# Dest: GF@$str2=1(string)
# Executing instruction: IPOPS at line: 120 with following arguments:
# Arg1: Stack@=
# 1(string)
# Dest: GF@$str1=
# 1(string)
# Executing instruction: ICONCAT at line: 121 with following arguments:
# Arg1: GF@$str1=
# 1(string)
# Arg2: GF@$str2=  ---   (string)
# Dest: GF@$str1=
# 1(string)
# Executing instruction: IPUSHS at line: 122 with following arguments:
# Arg1: GF@$str1=
# 1  ---   (string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@par2=2(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 124 with following arguments:
# Arg1: Stack@=2(string)
# Dest: GF@$str2=  ---   (string)
# Executing instruction: IPOPS at line: 125 with following arguments:
# Arg1: Stack@=
# 1  ---   (string)
# Dest: GF@$str1=
# 1  ---   (string)
# Executing instruction: ICONCAT at line: 126 with following arguments:
# Arg1: GF@$str1=
# 1  ---   (string)
# Arg2: GF@$str2=2(string)
# Dest: GF@$str1=
# 1  ---   (string)
# Executing instruction: IPUSHS at line: 127 with following arguments:
# Arg1: GF@$str1=
# 1  ---   2(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 128 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: GF@$str2=2(string)
# Executing instruction: IPOPS at line: 130 with following arguments:
# Arg1: Stack@=
# 1  ---   2(string)
# Dest: GF@$str1=
# 1  ---   2(string)
# Executing instruction: ICONCAT at line: 131 with following arguments:
# Arg1: GF@$str1=
# 1  ---   2(string)
# Arg2: GF@$str2=
# (string)
# Dest: GF@$str1=
# 1  ---   2(string)
# Executing instruction: IPUSHS at line: 132 with following arguments:
# Arg1: GF@$str1=
# 1  ---   2
# (string)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 133 with following arguments:
# Executing instruction: IRETURN at line: 134 with following arguments:
# Executing instruction: IPUSHS at line: 156 with following arguments:
# Arg1: Const@=str(string)
# Dest: Stack@()
# Executing instruction: ICALL at line: 157 with following arguments:
# Executing instruction: ILABEL at line: 103 with following arguments:
# Executing instruction: ICREATEFRAME at line: 104 with following arguments:
# Executing instruction: IPUSHFRAME at line: 105 with following arguments:
# Executing instruction: IDEFVAR at line: 106 with following arguments:
# Dest: LF@par2
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=str(string)
# Dest: LF@par2()
# Executing instruction: IDEFVAR at line: 108 with following arguments:
# Dest: LF@par1
# Executing instruction: IPOPS at line: 109 with following arguments:
# Arg1: Stack@=
# 1  ---   2
# (string)
# Dest: LF@par1()
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 113 with following arguments:
# Arg1: LF@par1=
# 1  ---   2
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 114 with following arguments:
# Arg1: Stack@=
# 1  ---   2
# (string)
# Dest: GF@$str2=
# (string)
# Executing instruction: IPOPS at line: 115 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: GF@$str1=
# 1  ---   2
# (string)
# Executing instruction: ICONCAT at line: 116 with following arguments:
# Arg1: GF@$str1=
# (string)
# Arg2: GF@$str2=
# 1  ---   2
# (string)
# Dest: GF@$str1=
# (string)
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: GF@$str1=
# 
# 1  ---   2
# (string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 118 with following arguments:
# Arg1: Const@=  ---   (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 119 with following arguments:
# Arg1: Stack@=  ---   (string)
# Dest: GF@$str2=
# 1  ---   2
# (string)
# Executing instruction: IPOPS at line: 120 with following arguments:
# Arg1: Stack@=
# 
# 1  ---   2
# (string)
# Dest: GF@$str1=
# 
# 1  ---   2
# (string)
# Executing instruction: ICONCAT at line: 121 with following arguments:
# Arg1: GF@$str1=
# 
# 1  ---   2
# (string)
# Arg2: GF@$str2=  ---   (string)
# Dest: GF@$str1=
# 
# 1  ---   2
# (string)
# Executing instruction: IPUSHS at line: 122 with following arguments:
# Arg1: GF@$str1=
# 
# 1  ---   2
#   ---   (string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@par2=str(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 124 with following arguments:
# Arg1: Stack@=str(string)
# Dest: GF@$str2=  ---   (string)
# Executing instruction: IPOPS at line: 125 with following arguments:
# Arg1: Stack@=
# 
# 1  ---   2
#   ---   (string)
# Dest: GF@$str1=
# 
# 1  ---   2
#   ---   (string)
# Executing instruction: ICONCAT at line: 126 with following arguments:
# Arg1: GF@$str1=
# 
# 1  ---   2
#   ---   (string)
# Arg2: GF@$str2=str(string)
# Dest: GF@$str1=
# 
# 1  ---   2
#   ---   (string)
# Executing instruction: IPUSHS at line: 127 with following arguments:
# Arg1: GF@$str1=
# 
# 1  ---   2
#   ---   str(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 128 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: GF@$str2=str(string)
# Executing instruction: IPOPS at line: 130 with following arguments:
# Arg1: Stack@=
# 
# 1  ---   2
#   ---   str(string)
# Dest: GF@$str1=
# 
# 1  ---   2
#   ---   str(string)
# Executing instruction: ICONCAT at line: 131 with following arguments:
# Arg1: GF@$str1=
# 
# 1  ---   2
#   ---   str(string)
# Arg2: GF@$str2=
# (string)
# Dest: GF@$str1=
# 
# 1  ---   2
#   ---   str(string)
# Executing instruction: IPUSHS at line: 132 with following arguments:
# Arg1: GF@$str1=
# 
# 1  ---   2
#   ---   str
# (string)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 133 with following arguments:
# Executing instruction: IRETURN at line: 134 with following arguments:
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: Const@=15(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 159 with following arguments:
# Arg1: Stack@=15(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: Const@=jedna(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 161 with following arguments:
# Arg1: Const@=15.1(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 162 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@par2
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=15.1(double)
# Dest: LF@par2()
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@par1
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=jedna(string)
# Dest: LF@par1()
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: LF@par1=jedna(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 22 with following arguments:
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=jedna(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 25 with following arguments:
# Arg1: TF@write=jedna(string)
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@par2=15.1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 28 with following arguments:
# Executing instruction: IDEFVAR at line: 29 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 30 with following arguments:
# Arg1: Stack@=15.1(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 31 with following arguments:
# Arg1: TF@write=15.1(double)
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@par2=15.1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: Const@=100(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 35 with following arguments:
# Arg1: Stack@=15.1(double)
# Arg2: Stack@=100(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=0.39(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 37 with following arguments:
# Arg1: Stack@=1510(double)
# Arg2: Stack@=0.39(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=7.74(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 39 with following arguments:
# Arg1: Stack@=3871.794871794872(double)
# Arg2: Stack@=7.74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@par2=15.1(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 41 with following arguments:
# Arg1: Stack@=3879.534871794871(double)
# Arg2: Stack@=15.1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 42 with following arguments:
# Arg1: Stack@=3864.434871794871(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 43 with following arguments:
# Executing instruction: IRETURN at line: 44 with following arguments:
# Executing instruction: IINT2FLOATS at line: 163 with following arguments:
# Arg1: Stack@=3864(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 164 with following arguments:
# Arg1: Stack@=3864(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 165 with following arguments:
# Arg1: Const@=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 166 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 167 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 168 with following arguments:
# Executing instruction: ILABEL at line: 50 with following arguments:
# Executing instruction: ICREATEFRAME at line: 51 with following arguments:
# Executing instruction: IPUSHFRAME at line: 52 with following arguments:
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@par3
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@par3()
# Executing instruction: IDEFVAR at line: 55 with following arguments:
# Dest: LF@par2
# Executing instruction: IPOPS at line: 56 with following arguments:
# Arg1: Stack@=3864(int)
# Dest: LF@par2()
# Executing instruction: IDEFVAR at line: 57 with following arguments:
# Dest: LF@par1
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=15(double)
# Dest: LF@par1()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 65 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: Const@=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 67 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 68 with following arguments:
# Arg1: Stack@=16(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@par1=15(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: LF@par2=3864(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 71 with following arguments:
# Arg1: Stack@=3864(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 72 with following arguments:
# Arg1: Stack@=15(double)
# Arg2: Stack@=3864(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 73 with following arguments:
# Arg1: Stack@=0.2162162162162162(double)
# Arg2: Stack@=3879(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: Const@=12(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=12(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=838.7027027027027(double)
# Arg2: Stack@=12(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 77 with following arguments:
# Arg1: Const@=54(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 78 with following arguments:
# Arg1: Stack@=54(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: Const@=78(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 80 with following arguments:
# Arg1: Stack@=54(double)
# Arg2: Stack@=78(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=0.12(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@par3=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 84 with following arguments:
# Arg1: Stack@=0.12(double)
# Arg2: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 85 with following arguments:
# Arg1: Stack@=4212(double)
# Arg2: Stack@=0.0075(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 86 with following arguments:
# Arg1: Stack@=850.7027027027027(double)
# Arg2: Stack@=561600(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 87 with following arguments:
# Arg1: Const@=124(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 88 with following arguments:
# Arg1: Stack@=124(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 89 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 90 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 91 with following arguments:
# Arg1: LF@par3=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 92 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 93 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 94 with following arguments:
# Arg1: Stack@=124(double)
# Arg2: Stack@=-16(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 95 with following arguments:
# Arg1: Stack@=562450.7027027027(double)
# Arg2: Stack@=-7.75(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 96 with following arguments:
# Executing instruction: IRETURN at line: 97 with following arguments:
# Executing instruction: ICALL at line: 169 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@par2
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=562442.9527027027(double)
# Dest: LF@par2()
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@par1
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=
# 
# 1  ---   2
#   ---   str
# (string)
# Dest: LF@par1()
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: LF@par1=
# 
# 1  ---   2
#   ---   str
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 22 with following arguments:
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=
# 
# 1  ---   2
#   ---   str
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 25 with following arguments:
# Arg1: TF@write=
# 
# 1  ---   2
#   ---   str
# (string)
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@par2=562442.9527027027(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 28 with following arguments:
# Executing instruction: IDEFVAR at line: 29 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 30 with following arguments:
# Arg1: Stack@=562442.9527027027(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 31 with following arguments:
# Arg1: TF@write=562442.9527027027(double)
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@par2=562442.9527027027(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: Const@=100(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 35 with following arguments:
# Arg1: Stack@=562442.9527027027(double)
# Arg2: Stack@=100(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=0.39(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 37 with following arguments:
# Arg1: Stack@=56244295.27027027(double)
# Arg2: Stack@=0.39(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=7.74(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 39 with following arguments:
# Arg1: Stack@=144216141.7186417(double)
# Arg2: Stack@=7.74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@par2=562442.9527027027(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 41 with following arguments:
# Arg1: Stack@=144216149.4586417(double)
# Arg2: Stack@=562442.9527027027(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 42 with following arguments:
# Arg1: Stack@=143653706.505939(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 43 with following arguments:
# Executing instruction: IRETURN at line: 44 with following arguments:
# Executing instruction: IINT2FLOATS at line: 170 with following arguments:
# Arg1: Stack@=143653707(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 171 with following arguments:
# Arg1: Stack@=41.875(double)
# Arg2: Stack@=143653707(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 172 with following arguments:
# Arg1: Stack@=143653748.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 173 with following arguments:
# Arg1: Stack@=143653749(int)
# Dest: LF@complexfunccallexpr()
# Executing instruction: IPUSHS at line: 175 with following arguments:
# Arg1: Const@=
# Result is (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 176 with following arguments:
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 178 with following arguments:
# Arg1: Stack@=
# Result is (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 179 with following arguments:
# Arg1: TF@write=
# Result is (string)
# Executing instruction: IPUSHS at line: 180 with following arguments:
# Arg1: LF@complexfunccallexpr=143653749(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 181 with following arguments:
# Arg1: Stack@=143653749(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 182 with following arguments:
# Arg1: Stack@=143653749(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 183 with following arguments:
# Executing instruction: IDEFVAR at line: 184 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 185 with following arguments:
# Arg1: Stack@=143653749(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 186 with following arguments:
# Arg1: TF@write=143653749(int)
# Executing instruction: IGROOT at line: 189 with following arguments:
# I am Groot at 189 (1272).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1272 (364+908)
# GROOT: 1272
# 
#   1: ' multiple functions call
#   2: function ComplexIntFunc(par1 as string, par2 as double) as integer
#   3:     print par1;
#   4:     print par2;
#   5:     return par2 * 10e1 / 0.39 + 7.74 - par2
#   6: end function
#   7: 
#   8: function ComplexDblFunc(par1 as double, par2 as integer, par3 as integer) as double
#   9:     return 2 * 8 / 74 * (par1 + par2) + 12 + 54 * 0.78e2 / (12e-2 / par3) + 124 / (0 - par3)
#  10: end function
#  11: 
#  12: function ComplexStrFunc(par1 as string, par2 as string) as string
#  13:     return !"\n" + par1 + !"  ---   "+ par2 + !"\n"
#  14: end function
#  15: 
#  16: scope
#  17:     dim complexFuncCallExpr as integer = 40 + 15/8 + ComplexIntFunc(ComplexStrFunc(ComplexStrFunc(!"1", !"2"), !"str"), ComplexDblFunc(15, ComplexIntFunc(!"jedna", 15.1), 16))
#  18:     print !"\nResult is "; complexFuncCallExpr;
#  19: end scope

########################################

.IFJcode17                                                                      #     1/187
DEFVAR GF@$str1                                                                 #     2/187
DEFVAR GF@$str2                                                                 #     3/187
DEFVAR GF@$num1                                                                 #     4/187
DEFVAR GF@$num2                                                                 #     5/187
DEFVAR GF@$num3                                                                 #     6/187
DEFVAR GF@$bool1                                                                #     7/187
DEFVAR GF@$counter                                                              #     8/187
DEFVAR GF@$char                                                                 #     9/187
JUMP $$main                                                                     #    10/187
LABEL $complexintfunc                                                           #    12/187
CREATEFRAME                                                                     #    13/187
PUSHFRAME                                                                       #    14/187
DEFVAR LF@par2                                                                  #    15/187
POPS LF@par2                                                                    #    16/187
DEFVAR LF@par1                                                                  #    17/187
POPS LF@par1                                                                    #    18/187
PUSHS LF@par1                                                                   #    21/187
CREATEFRAME                                                                     #    22/187
DEFVAR TF@write                                                                 #    23/187
POPS TF@write                                                                   #    24/187
WRITE TF@write                                                                  #    25/187
PUSHS LF@par2                                                                   #    27/187
CREATEFRAME                                                                     #    28/187
DEFVAR TF@write                                                                 #    29/187
POPS TF@write                                                                   #    30/187
WRITE TF@write                                                                  #    31/187
PUSHS LF@par2                                                                   #    33/187
PUSHS float@100                                                                 #    34/187
MULS                                                                            #    35/187
PUSHS float@0.39                                                                #    36/187
DIVS                                                                            #    37/187
PUSHS float@7.74                                                                #    38/187
ADDS                                                                            #    39/187
PUSHS LF@par2                                                                   #    40/187
SUBS                                                                            #    41/187
FLOAT2R2EINTS                                                                   #    42/187
POPFRAME                                                                        #    43/187
RETURN                                                                          #    44/187
PUSHS int@0                                                                     #    46/187
POPFRAME                                                                        #    47/187
RETURN                                                                          #    48/187
LABEL $complexdblfunc                                                           #    50/187
CREATEFRAME                                                                     #    51/187
PUSHFRAME                                                                       #    52/187
DEFVAR LF@par3                                                                  #    53/187
POPS LF@par3                                                                    #    54/187
DEFVAR LF@par2                                                                  #    55/187
POPS LF@par2                                                                    #    56/187
DEFVAR LF@par1                                                                  #    57/187
POPS LF@par1                                                                    #    58/187
PUSHS int@2                                                                     #    61/187
INT2FLOATS                                                                      #    62/187
PUSHS int@8                                                                     #    63/187
INT2FLOATS                                                                      #    64/187
MULS                                                                            #    65/187
PUSHS int@74                                                                    #    66/187
INT2FLOATS                                                                      #    67/187
DIVS                                                                            #    68/187
PUSHS LF@par1                                                                   #    69/187
PUSHS LF@par2                                                                   #    70/187
INT2FLOATS                                                                      #    71/187
ADDS                                                                            #    72/187
MULS                                                                            #    73/187
PUSHS int@12                                                                    #    74/187
INT2FLOATS                                                                      #    75/187
ADDS                                                                            #    76/187
PUSHS int@54                                                                    #    77/187
INT2FLOATS                                                                      #    78/187
PUSHS float@78                                                                  #    79/187
MULS                                                                            #    80/187
PUSHS float@0.12                                                                #    81/187
PUSHS LF@par3                                                                   #    82/187
INT2FLOATS                                                                      #    83/187
DIVS                                                                            #    84/187
DIVS                                                                            #    85/187
ADDS                                                                            #    86/187
PUSHS int@124                                                                   #    87/187
INT2FLOATS                                                                      #    88/187
PUSHS int@0                                                                     #    89/187
INT2FLOATS                                                                      #    90/187
PUSHS LF@par3                                                                   #    91/187
INT2FLOATS                                                                      #    92/187
SUBS                                                                            #    93/187
DIVS                                                                            #    94/187
ADDS                                                                            #    95/187
POPFRAME                                                                        #    96/187
RETURN                                                                          #    97/187
PUSHS float@0                                                                   #    99/187
POPFRAME                                                                        #   100/187
RETURN                                                                          #   101/187
LABEL $complexstrfunc                                                           #   103/187
CREATEFRAME                                                                     #   104/187
PUSHFRAME                                                                       #   105/187
DEFVAR LF@par2                                                                  #   106/187
POPS LF@par2                                                                    #   107/187
DEFVAR LF@par1                                                                  #   108/187
POPS LF@par1                                                                    #   109/187
PUSHS string@\010                                                               #   112/187
PUSHS LF@par1                                                                   #   113/187
POPS GF@$str2                                                                   #   114/187
POPS GF@$str1                                                                   #   115/187
CONCAT GF@$str1 GF@$str1 GF@$str2                                               #   116/187
PUSHS GF@$str1                                                                  #   117/187
PUSHS string@\032\032---\032\032\032                                            #   118/187
POPS GF@$str2                                                                   #   119/187
POPS GF@$str1                                                                   #   120/187
CONCAT GF@$str1 GF@$str1 GF@$str2                                               #   121/187
PUSHS GF@$str1                                                                  #   122/187
PUSHS LF@par2                                                                   #   123/187
POPS GF@$str2                                                                   #   124/187
POPS GF@$str1                                                                   #   125/187
CONCAT GF@$str1 GF@$str1 GF@$str2                                               #   126/187
PUSHS GF@$str1                                                                  #   127/187
PUSHS string@\010                                                               #   128/187
POPS GF@$str2                                                                   #   129/187
POPS GF@$str1                                                                   #   130/187
CONCAT GF@$str1 GF@$str1 GF@$str2                                               #   131/187
PUSHS GF@$str1                                                                  #   132/187
POPFRAME                                                                        #   133/187
RETURN                                                                          #   134/187
PUSHS string@                                                                   #   136/187
POPFRAME                                                                        #   137/187
RETURN                                                                          #   138/187
LABEL $$main                                                                    #   140/187
CREATEFRAME                                                                     #   141/187
PUSHFRAME                                                                       #   142/187
DEFVAR LF@complexfunccallexpr                                                   #   144/187
PUSHS int@40                                                                    #   145/187
INT2FLOATS                                                                      #   146/187
PUSHS int@15                                                                    #   147/187
INT2FLOATS                                                                      #   148/187
PUSHS int@8                                                                     #   149/187
INT2FLOATS                                                                      #   150/187
DIVS                                                                            #   151/187
ADDS                                                                            #   152/187
PUSHS string@1                                                                  #   153/187
PUSHS string@2                                                                  #   154/187
CALL $complexstrfunc                                                            #   155/187
PUSHS string@str                                                                #   156/187
CALL $complexstrfunc                                                            #   157/187
PUSHS int@15                                                                    #   158/187
INT2FLOATS                                                                      #   159/187
PUSHS string@jedna                                                              #   160/187
PUSHS float@15.1                                                                #   161/187
CALL $complexintfunc                                                            #   162/187
INT2FLOATS                                                                      #   163/187
FLOAT2R2EINTS                                                                   #   164/187
PUSHS int@16                                                                    #   165/187
INT2FLOATS                                                                      #   166/187
FLOAT2R2EINTS                                                                   #   167/187
CALL $complexdblfunc                                                            #   168/187
CALL $complexintfunc                                                            #   169/187
INT2FLOATS                                                                      #   170/187
ADDS                                                                            #   171/187
FLOAT2R2EINTS                                                                   #   172/187
POPS LF@complexfunccallexpr                                                     #   173/187
PUSHS string@\010Result\032is\032                                               #   175/187
CREATEFRAME                                                                     #   176/187
DEFVAR TF@write                                                                 #   177/187
POPS TF@write                                                                   #   178/187
WRITE TF@write                                                                  #   179/187
PUSHS LF@complexfunccallexpr                                                    #   180/187
INT2FLOATS                                                                      #   181/187
FLOAT2R2EINTS                                                                   #   182/187
CREATEFRAME                                                                     #   183/187
DEFVAR TF@write                                                                 #   184/187
POPS TF@write                                                                   #   185/187
WRITE TF@write                                                                  #   186/187

