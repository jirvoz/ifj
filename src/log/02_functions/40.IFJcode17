# 2017-12-04 23:21:44.030192
# SECTION: 02_functions
# TEST: 40
# INFO: Functions with implicit conversions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 63 with following arguments:
# Executing instruction: ICREATEFRAME at line: 64 with following arguments:
# Executing instruction: IPUSHFRAME at line: 65 with following arguments:
# Executing instruction: IDEFVAR at line: 67 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: Const@=5.6(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 69 with following arguments:
# Arg1: Stack@=5.6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 70 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 72 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 73 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: Const@=2.9(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 76 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=2.9(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: LF@a=2.9(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 20 with following arguments:
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 22 with following arguments:
# Arg1: Stack@=2.9(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 23 with following arguments:
# Arg1: TF@write=2.9(double)
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 26 with following arguments:
# Executing instruction: IRETURN at line: 27 with following arguments:
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 79 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@b=0(int)
# Executing instruction: IDEFVAR at line: 81 with following arguments:
# Dest: LF@c
# Executing instruction: IMOVE at line: 82 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: Const@=2.4(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 85 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=2.4(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: LF@a=2.4(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 20 with following arguments:
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 22 with following arguments:
# Arg1: Stack@=2.4(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 23 with following arguments:
# Arg1: TF@write=2.4(double)
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 26 with following arguments:
# Executing instruction: IRETURN at line: 27 with following arguments:
# Executing instruction: IINT2FLOATS at line: 86 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 87 with following arguments:
# Arg1: Stack@=0(double)
# Dest: LF@c=0(double)
# Executing instruction: IDEFVAR at line: 89 with following arguments:
# Dest: LF@d
# Executing instruction: IMOVE at line: 90 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@d()
# Executing instruction: IPUSHS at line: 92 with following arguments:
# Arg1: Const@=2.4(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 93 with following arguments:
# Executing instruction: ILABEL at line: 29 with following arguments:
# Executing instruction: ICREATEFRAME at line: 30 with following arguments:
# Executing instruction: IPUSHFRAME at line: 31 with following arguments:
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 33 with following arguments:
# Arg1: Stack@=2.4(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@a=2.4(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 37 with following arguments:
# Executing instruction: IDEFVAR at line: 38 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 39 with following arguments:
# Arg1: Stack@=2.4(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 40 with following arguments:
# Arg1: TF@write=2.4(double)
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 43 with following arguments:
# Executing instruction: IRETURN at line: 44 with following arguments:
# Executing instruction: IPOPS at line: 94 with following arguments:
# Arg1: Stack@=0(double)
# Dest: LF@d=0(double)
# Executing instruction: IDEFVAR at line: 96 with following arguments:
# Dest: LF@e
# Executing instruction: IMOVE at line: 97 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@e()
# Executing instruction: IPUSHS at line: 99 with following arguments:
# Arg1: Const@=2.6(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 100 with following arguments:
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 47 with following arguments:
# Executing instruction: IPUSHFRAME at line: 48 with following arguments:
# Executing instruction: IDEFVAR at line: 49 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=2.6(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: Const@=oy(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IDEFVAR at line: 55 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 56 with following arguments:
# Arg1: Stack@=oy(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 57 with following arguments:
# Arg1: TF@write=oy(string)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=(string)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 60 with following arguments:
# Executing instruction: IRETURN at line: 61 with following arguments:
# Executing instruction: IPOPS at line: 101 with following arguments:
# Arg1: Stack@=(string)
# Dest: LF@e=(string)
# Executing instruction: IDEFVAR at line: 103 with following arguments:
# Dest: LF@f
# Executing instruction: IMOVE at line: 104 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@f()
# Executing instruction: IPUSHS at line: 106 with following arguments:
# Arg1: LF@a=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 107 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: ICALL at line: 108 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=6(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: LF@a=6(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 20 with following arguments:
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 22 with following arguments:
# Arg1: Stack@=6(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 23 with following arguments:
# Arg1: TF@write=6(double)
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 26 with following arguments:
# Executing instruction: IRETURN at line: 27 with following arguments:
# Executing instruction: IINT2FLOATS at line: 109 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 110 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 111 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@f=0(int)
# Executing instruction: IPUSHS at line: 114 with following arguments:
# Arg1: LF@a=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 115 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 116 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 117 with following arguments:
# Executing instruction: IDEFVAR at line: 118 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 119 with following arguments:
# Arg1: Stack@=6(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 120 with following arguments:
# Arg1: TF@write=6(int)
# Executing instruction: IPUSHS at line: 121 with following arguments:
# Arg1: LF@b=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 122 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 123 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 124 with following arguments:
# Executing instruction: IDEFVAR at line: 125 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 126 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 127 with following arguments:
# Arg1: TF@write=0(int)
# Executing instruction: IPUSHS at line: 128 with following arguments:
# Arg1: LF@c=0(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 129 with following arguments:
# Executing instruction: IDEFVAR at line: 130 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 131 with following arguments:
# Arg1: Stack@=0(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 132 with following arguments:
# Arg1: TF@write=0(double)
# Executing instruction: IPUSHS at line: 133 with following arguments:
# Arg1: LF@d=0(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 134 with following arguments:
# Executing instruction: IDEFVAR at line: 135 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 136 with following arguments:
# Arg1: Stack@=0(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 137 with following arguments:
# Arg1: TF@write=0(double)
# Executing instruction: IPUSHS at line: 138 with following arguments:
# Arg1: LF@e=(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 139 with following arguments:
# Executing instruction: IDEFVAR at line: 140 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 141 with following arguments:
# Arg1: Stack@=(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 142 with following arguments:
# Arg1: TF@write=(string)
# Executing instruction: IPUSHS at line: 143 with following arguments:
# Arg1: LF@f=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 144 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 145 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 146 with following arguments:
# Executing instruction: IDEFVAR at line: 147 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 148 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 149 with following arguments:
# Arg1: TF@write=0(int)
# Executing instruction: IGROOT at line: 152 with following arguments:
# I am Groot at 152 (716).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 716 (244+472)
# GROOT: 716
# 
#   1: ' Functions with implicit conversions
#   2: 
#   3: function foo1(a as double) as integer
#   4:     print a;
#   5: end function
#   6: 
#   7: function foo2(a as double) as double
#   8:     print a;
#   9: end function
#  10: 
#  11: function foo3(a as double) as string
#  12:     print !"oy";
#  13: end function
#  14: 
#  15: scope
#  16:     dim a as integer = 5.6
#  17:     dim b as integer
#  18:     b = foo1(2.9)
#  19:     dim c as double
#  20:     c = foo1(2.4)
#  21:     dim d as double
#  22:     d = foo2(2.4)
#  23:     dim e as string
#  24:     e = foo3(2.6)
#  25:     dim f as integer
#  26:     f = foo1(a)
#  27: 
#  28:     print a;b;c;d;e;f;
#  29: end scope

########################################

.IFJcode17                                                                      #     1/150
DEFVAR GF@$str1                                                                 #     2/150
DEFVAR GF@$str2                                                                 #     3/150
DEFVAR GF@$num1                                                                 #     4/150
DEFVAR GF@$num2                                                                 #     5/150
DEFVAR GF@$num3                                                                 #     6/150
DEFVAR GF@$bool1                                                                #     7/150
DEFVAR GF@$counter                                                              #     8/150
DEFVAR GF@$char                                                                 #     9/150
JUMP $$main                                                                     #    10/150
LABEL $foo1                                                                     #    12/150
CREATEFRAME                                                                     #    13/150
PUSHFRAME                                                                       #    14/150
DEFVAR LF@a                                                                     #    15/150
POPS LF@a                                                                       #    16/150
PUSHS LF@a                                                                      #    19/150
CREATEFRAME                                                                     #    20/150
DEFVAR TF@write                                                                 #    21/150
POPS TF@write                                                                   #    22/150
WRITE TF@write                                                                  #    23/150
PUSHS int@0                                                                     #    25/150
POPFRAME                                                                        #    26/150
RETURN                                                                          #    27/150
LABEL $foo2                                                                     #    29/150
CREATEFRAME                                                                     #    30/150
PUSHFRAME                                                                       #    31/150
DEFVAR LF@a                                                                     #    32/150
POPS LF@a                                                                       #    33/150
PUSHS LF@a                                                                      #    36/150
CREATEFRAME                                                                     #    37/150
DEFVAR TF@write                                                                 #    38/150
POPS TF@write                                                                   #    39/150
WRITE TF@write                                                                  #    40/150
PUSHS float@0                                                                   #    42/150
POPFRAME                                                                        #    43/150
RETURN                                                                          #    44/150
LABEL $foo3                                                                     #    46/150
CREATEFRAME                                                                     #    47/150
PUSHFRAME                                                                       #    48/150
DEFVAR LF@a                                                                     #    49/150
POPS LF@a                                                                       #    50/150
PUSHS string@oy                                                                 #    53/150
CREATEFRAME                                                                     #    54/150
DEFVAR TF@write                                                                 #    55/150
POPS TF@write                                                                   #    56/150
WRITE TF@write                                                                  #    57/150
PUSHS string@                                                                   #    59/150
POPFRAME                                                                        #    60/150
RETURN                                                                          #    61/150
LABEL $$main                                                                    #    63/150
CREATEFRAME                                                                     #    64/150
PUSHFRAME                                                                       #    65/150
DEFVAR LF@a                                                                     #    67/150
PUSHS float@5.6                                                                 #    68/150
FLOAT2R2EINTS                                                                   #    69/150
POPS LF@a                                                                       #    70/150
DEFVAR LF@b                                                                     #    72/150
MOVE LF@b int@0                                                                 #    73/150
PUSHS float@2.9                                                                 #    75/150
CALL $foo1                                                                      #    76/150
INT2FLOATS                                                                      #    77/150
FLOAT2R2EINTS                                                                   #    78/150
POPS LF@b                                                                       #    79/150
DEFVAR LF@c                                                                     #    81/150
MOVE LF@c float@0                                                               #    82/150
PUSHS float@2.4                                                                 #    84/150
CALL $foo1                                                                      #    85/150
INT2FLOATS                                                                      #    86/150
POPS LF@c                                                                       #    87/150
DEFVAR LF@d                                                                     #    89/150
MOVE LF@d float@0                                                               #    90/150
PUSHS float@2.4                                                                 #    92/150
CALL $foo2                                                                      #    93/150
POPS LF@d                                                                       #    94/150
DEFVAR LF@e                                                                     #    96/150
MOVE LF@e string@                                                               #    97/150
PUSHS float@2.6                                                                 #    99/150
CALL $foo3                                                                      #   100/150
POPS LF@e                                                                       #   101/150
DEFVAR LF@f                                                                     #   103/150
MOVE LF@f int@0                                                                 #   104/150
PUSHS LF@a                                                                      #   106/150
INT2FLOATS                                                                      #   107/150
CALL $foo1                                                                      #   108/150
INT2FLOATS                                                                      #   109/150
FLOAT2R2EINTS                                                                   #   110/150
POPS LF@f                                                                       #   111/150
PUSHS LF@a                                                                      #   114/150
INT2FLOATS                                                                      #   115/150
FLOAT2R2EINTS                                                                   #   116/150
CREATEFRAME                                                                     #   117/150
DEFVAR TF@write                                                                 #   118/150
POPS TF@write                                                                   #   119/150
WRITE TF@write                                                                  #   120/150
PUSHS LF@b                                                                      #   121/150
INT2FLOATS                                                                      #   122/150
FLOAT2R2EINTS                                                                   #   123/150
CREATEFRAME                                                                     #   124/150
DEFVAR TF@write                                                                 #   125/150
POPS TF@write                                                                   #   126/150
WRITE TF@write                                                                  #   127/150
PUSHS LF@c                                                                      #   128/150
CREATEFRAME                                                                     #   129/150
DEFVAR TF@write                                                                 #   130/150
POPS TF@write                                                                   #   131/150
WRITE TF@write                                                                  #   132/150
PUSHS LF@d                                                                      #   133/150
CREATEFRAME                                                                     #   134/150
DEFVAR TF@write                                                                 #   135/150
POPS TF@write                                                                   #   136/150
WRITE TF@write                                                                  #   137/150
PUSHS LF@e                                                                      #   138/150
CREATEFRAME                                                                     #   139/150
DEFVAR TF@write                                                                 #   140/150
POPS TF@write                                                                   #   141/150
WRITE TF@write                                                                  #   142/150
PUSHS LF@f                                                                      #   143/150
INT2FLOATS                                                                      #   144/150
FLOAT2R2EINTS                                                                   #   145/150
CREATEFRAME                                                                     #   146/150
DEFVAR TF@write                                                                 #   147/150
POPS TF@write                                                                   #   148/150
WRITE TF@write                                                                  #   149/150

