# 2017-12-04 23:21:43.764349
# SECTION: 02_functions
# TEST: 23
# INFO: invalid types without supported implicit conversion I
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# Line 9: Type incompatibility semantic error: Bad operation or operand in expression
# Line 9: Syntax error: Expected end of line after assignment.
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:



# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 4
# CURRENT COMPILER EXIT CODE: 4
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' invalid types without supported implicit conversion I
#   2: 
#   3: function get_integer(a as integer) as integer
#   4: 	return a
#   5: end function
#   6: 
#   7: scope
#   8: 	dim b as integer
#   9: 	b = get_integer(!"foo")
#  10: 	print b;
#  11: end scope

########################################

.IFJcode17                                                                      #     1/37
DEFVAR GF@$str1                                                                 #     2/37
DEFVAR GF@$str2                                                                 #     3/37
DEFVAR GF@$num1                                                                 #     4/37
DEFVAR GF@$num2                                                                 #     5/37
DEFVAR GF@$num3                                                                 #     6/37
DEFVAR GF@$bool1                                                                #     7/37
DEFVAR GF@$counter                                                              #     8/37
DEFVAR GF@$char                                                                 #     9/37
JUMP $$main                                                                     #    10/37
LABEL $get_integer                                                              #    12/37
CREATEFRAME                                                                     #    13/37
PUSHFRAME                                                                       #    14/37
DEFVAR LF@a                                                                     #    15/37
POPS LF@a                                                                       #    16/37
PUSHS LF@a                                                                      #    19/37
INT2FLOATS                                                                      #    20/37
FLOAT2R2EINTS                                                                   #    21/37
POPFRAME                                                                        #    22/37
RETURN                                                                          #    23/37
PUSHS int@0                                                                     #    25/37
POPFRAME                                                                        #    26/37
RETURN                                                                          #    27/37
LABEL $$main                                                                    #    29/37
CREATEFRAME                                                                     #    30/37
PUSHFRAME                                                                       #    31/37
DEFVAR LF@b                                                                     #    33/37
MOVE LF@b int@0                                                                 #    34/37
FLOAT2R2EINTS                                                                   #    36/37
POPS LF@b                                                                       #    37/37

