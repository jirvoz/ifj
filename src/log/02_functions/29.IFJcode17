# 2017-12-04 23:21:43.945905
# SECTION: 02_functions
# TEST: 29
# INFO: nested function calls with multiple data types
# REQUIRED EXTENSIONS: FUNEXP
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 144 with following arguments:
# Executing instruction: ICREATEFRAME at line: 145 with following arguments:
# Executing instruction: IPUSHFRAME at line: 146 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@var_
# Executing instruction: ICALL at line: 149 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=blank(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 20 with following arguments:
# Arg1: Stack@=blank(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 21 with following arguments:
# Arg1: TF@write=blank(string)
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 24 with following arguments:
# Arg1: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 26 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 27 with following arguments:
# Arg1: Stack@=42(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 30 with following arguments:
# Arg1: Stack@=420(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 31 with following arguments:
# Arg1: Stack@=52.5(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 32 with following arguments:
# Executing instruction: IRETURN at line: 33 with following arguments:
# Executing instruction: IINT2FLOATS at line: 150 with following arguments:
# Arg1: Stack@=52(int)
# Dest: Stack@()
# Executing instruction: ICALL at line: 151 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=blank(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 20 with following arguments:
# Arg1: Stack@=blank(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 21 with following arguments:
# Arg1: TF@write=blank(string)
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 24 with following arguments:
# Arg1: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 26 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 27 with following arguments:
# Arg1: Stack@=42(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 30 with following arguments:
# Arg1: Stack@=420(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 31 with following arguments:
# Arg1: Stack@=52.5(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 32 with following arguments:
# Executing instruction: IRETURN at line: 33 with following arguments:
# Executing instruction: IINT2FLOATS at line: 152 with following arguments:
# Arg1: Stack@=52(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 153 with following arguments:
# Arg1: Stack@=52(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 154 with following arguments:
# Executing instruction: ILABEL at line: 39 with following arguments:
# Executing instruction: ICREATEFRAME at line: 40 with following arguments:
# Executing instruction: IPUSHFRAME at line: 41 with following arguments:
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: LF@par2
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=52(int)
# Dest: LF@par2()
# Executing instruction: IDEFVAR at line: 44 with following arguments:
# Dest: LF@par
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=52(double)
# Dest: LF@par()
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@par=52(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IDEFVAR at line: 50 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=52(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 52 with following arguments:
# Arg1: TF@write=52(double)
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=dbl(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 55 with following arguments:
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=dbl(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 58 with following arguments:
# Arg1: TF@write=dbl(string)
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: LF@par2=52(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 61 with following arguments:
# Arg1: Stack@=52(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 62 with following arguments:
# Arg1: Stack@=52(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 63 with following arguments:
# Executing instruction: IDEFVAR at line: 64 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 65 with following arguments:
# Arg1: Stack@=52(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 66 with following arguments:
# Arg1: TF@write=52(int)
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: Const@=2.78(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@par=52(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 70 with following arguments:
# Arg1: Stack@=2.78(double)
# Arg2: Stack@=52(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@par2=52(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=52(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: Const@=0.3(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 74 with following arguments:
# Arg1: Stack@=52(double)
# Arg2: Stack@=0.3(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 75 with following arguments:
# Arg1: Stack@=0.05346153846153846(double)
# Arg2: Stack@=15.6(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 76 with following arguments:
# Executing instruction: IRETURN at line: 77 with following arguments:
# Executing instruction: IFLOAT2R2EINTS at line: 155 with following arguments:
# Arg1: Stack@=15.65346153846154(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 156 with following arguments:
# Executing instruction: ILABEL at line: 83 with following arguments:
# Executing instruction: ICREATEFRAME at line: 84 with following arguments:
# Executing instruction: IPUSHFRAME at line: 85 with following arguments:
# Executing instruction: IDEFVAR at line: 86 with following arguments:
# Dest: LF@par
# Executing instruction: IPOPS at line: 87 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@par()
# Executing instruction: IPUSHS at line: 90 with following arguments:
# Arg1: Const@=int(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 91 with following arguments:
# Executing instruction: IDEFVAR at line: 92 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 93 with following arguments:
# Arg1: Stack@=int(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 94 with following arguments:
# Arg1: TF@write=int(string)
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@par=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 98 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 99 with following arguments:
# Executing instruction: IDEFVAR at line: 100 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 101 with following arguments:
# Arg1: Stack@=16(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 102 with following arguments:
# Arg1: TF@write=16(int)
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: Const@=barman(string)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 105 with following arguments:
# Executing instruction: IRETURN at line: 106 with following arguments:
# Executing instruction: ICALL at line: 157 with following arguments:
# Executing instruction: ILABEL at line: 112 with following arguments:
# Executing instruction: ICREATEFRAME at line: 113 with following arguments:
# Executing instruction: IPUSHFRAME at line: 114 with following arguments:
# Executing instruction: IDEFVAR at line: 115 with following arguments:
# Dest: LF@par
# Executing instruction: IPOPS at line: 116 with following arguments:
# Arg1: Stack@=barman(string)
# Dest: LF@par()
# Executing instruction: IPUSHS at line: 119 with following arguments:
# Arg1: Const@=str(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 120 with following arguments:
# Executing instruction: IDEFVAR at line: 121 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 122 with following arguments:
# Arg1: Stack@=str(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 123 with following arguments:
# Arg1: TF@write=str(string)
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: LF@par=barman(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 126 with following arguments:
# Executing instruction: IDEFVAR at line: 127 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 128 with following arguments:
# Arg1: Stack@=barman(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 129 with following arguments:
# Arg1: TF@write=barman(string)
# Executing instruction: IPUSHS at line: 131 with following arguments:
# Arg1: Const@=75(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 132 with following arguments:
# Arg1: Stack@=75(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 133 with following arguments:
# Arg1: Const@=78.73999999999999(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 134 with following arguments:
# Arg1: Stack@=75(double)
# Arg2: Stack@=78.73999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 135 with following arguments:
# Arg1: Const@=0.12345(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 136 with following arguments:
# Arg1: Stack@=5905.5(double)
# Arg2: Stack@=0.12345(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 137 with following arguments:
# Executing instruction: IRETURN at line: 138 with following arguments:
# Executing instruction: IFLOAT2R2EINTS at line: 158 with following arguments:
# Arg1: Stack@=47837.18104495747(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 159 with following arguments:
# Arg1: Stack@=47837(int)
# Dest: LF@var_()
# Executing instruction: IPUSHS at line: 161 with following arguments:
# Arg1: LF@var_=47837(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 162 with following arguments:
# Arg1: Stack@=47837(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 163 with following arguments:
# Arg1: Stack@=47837(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 164 with following arguments:
# Executing instruction: IDEFVAR at line: 165 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=47837(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 167 with following arguments:
# Arg1: TF@write=47837(int)
# Executing instruction: IGROOT at line: 170 with following arguments:
# I am Groot at 170 (709).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 709 (256+453)
# GROOT: 709
# 
#   1: ' nested function calls with multiple data types
#   2: function blank() as integer
#   3:     print !"blank";
#   4:     return 42 * 10 / 8
#   5: end function
#   6: 
#   7: function dbl(par as double, par2 as integer) as double
#   8:     print par;
#   9:     print !"dbl";
#  10:     print par2;
#  11:     return 2.78 / par + par2 * 0.3
#  12: end function
#  13: 
#  14: function int_(par as integer) as string
#  15:     print !"int";
#  16:     print par;
#  17:     return !"barman"
#  18: end function
#  19: 
#  20: function str_(par as string) as double
#  21:     print !"str";
#  22:     print par;
#  23:     return 75 * 78.74 / 0.12345
#  24: end function
#  25: 
#  26: scope
#  27:     dim var_ as integer = str_(int_(dbl(blank(), blank())))
#  28:     print var_;
#  29: end scope

########################################

.IFJcode17                                                                      #     1/168
DEFVAR GF@$str1                                                                 #     2/168
DEFVAR GF@$str2                                                                 #     3/168
DEFVAR GF@$num1                                                                 #     4/168
DEFVAR GF@$num2                                                                 #     5/168
DEFVAR GF@$num3                                                                 #     6/168
DEFVAR GF@$bool1                                                                #     7/168
DEFVAR GF@$counter                                                              #     8/168
DEFVAR GF@$char                                                                 #     9/168
JUMP $$main                                                                     #    10/168
LABEL $blank                                                                    #    12/168
CREATEFRAME                                                                     #    13/168
PUSHFRAME                                                                       #    14/168
PUSHS string@blank                                                              #    17/168
CREATEFRAME                                                                     #    18/168
DEFVAR TF@write                                                                 #    19/168
POPS TF@write                                                                   #    20/168
WRITE TF@write                                                                  #    21/168
PUSHS int@42                                                                    #    23/168
INT2FLOATS                                                                      #    24/168
PUSHS int@10                                                                    #    25/168
INT2FLOATS                                                                      #    26/168
MULS                                                                            #    27/168
PUSHS int@8                                                                     #    28/168
INT2FLOATS                                                                      #    29/168
DIVS                                                                            #    30/168
FLOAT2R2EINTS                                                                   #    31/168
POPFRAME                                                                        #    32/168
RETURN                                                                          #    33/168
PUSHS int@0                                                                     #    35/168
POPFRAME                                                                        #    36/168
RETURN                                                                          #    37/168
LABEL $dbl                                                                      #    39/168
CREATEFRAME                                                                     #    40/168
PUSHFRAME                                                                       #    41/168
DEFVAR LF@par2                                                                  #    42/168
POPS LF@par2                                                                    #    43/168
DEFVAR LF@par                                                                   #    44/168
POPS LF@par                                                                     #    45/168
PUSHS LF@par                                                                    #    48/168
CREATEFRAME                                                                     #    49/168
DEFVAR TF@write                                                                 #    50/168
POPS TF@write                                                                   #    51/168
WRITE TF@write                                                                  #    52/168
PUSHS string@dbl                                                                #    54/168
CREATEFRAME                                                                     #    55/168
DEFVAR TF@write                                                                 #    56/168
POPS TF@write                                                                   #    57/168
WRITE TF@write                                                                  #    58/168
PUSHS LF@par2                                                                   #    60/168
INT2FLOATS                                                                      #    61/168
FLOAT2R2EINTS                                                                   #    62/168
CREATEFRAME                                                                     #    63/168
DEFVAR TF@write                                                                 #    64/168
POPS TF@write                                                                   #    65/168
WRITE TF@write                                                                  #    66/168
PUSHS float@2.78                                                                #    68/168
PUSHS LF@par                                                                    #    69/168
DIVS                                                                            #    70/168
PUSHS LF@par2                                                                   #    71/168
INT2FLOATS                                                                      #    72/168
PUSHS float@0.3                                                                 #    73/168
MULS                                                                            #    74/168
ADDS                                                                            #    75/168
POPFRAME                                                                        #    76/168
RETURN                                                                          #    77/168
PUSHS float@0                                                                   #    79/168
POPFRAME                                                                        #    80/168
RETURN                                                                          #    81/168
LABEL $int_                                                                     #    83/168
CREATEFRAME                                                                     #    84/168
PUSHFRAME                                                                       #    85/168
DEFVAR LF@par                                                                   #    86/168
POPS LF@par                                                                     #    87/168
PUSHS string@int                                                                #    90/168
CREATEFRAME                                                                     #    91/168
DEFVAR TF@write                                                                 #    92/168
POPS TF@write                                                                   #    93/168
WRITE TF@write                                                                  #    94/168
PUSHS LF@par                                                                    #    96/168
INT2FLOATS                                                                      #    97/168
FLOAT2R2EINTS                                                                   #    98/168
CREATEFRAME                                                                     #    99/168
DEFVAR TF@write                                                                 #   100/168
POPS TF@write                                                                   #   101/168
WRITE TF@write                                                                  #   102/168
PUSHS string@barman                                                             #   104/168
POPFRAME                                                                        #   105/168
RETURN                                                                          #   106/168
PUSHS string@                                                                   #   108/168
POPFRAME                                                                        #   109/168
RETURN                                                                          #   110/168
LABEL $str_                                                                     #   112/168
CREATEFRAME                                                                     #   113/168
PUSHFRAME                                                                       #   114/168
DEFVAR LF@par                                                                   #   115/168
POPS LF@par                                                                     #   116/168
PUSHS string@str                                                                #   119/168
CREATEFRAME                                                                     #   120/168
DEFVAR TF@write                                                                 #   121/168
POPS TF@write                                                                   #   122/168
WRITE TF@write                                                                  #   123/168
PUSHS LF@par                                                                    #   125/168
CREATEFRAME                                                                     #   126/168
DEFVAR TF@write                                                                 #   127/168
POPS TF@write                                                                   #   128/168
WRITE TF@write                                                                  #   129/168
PUSHS int@75                                                                    #   131/168
INT2FLOATS                                                                      #   132/168
PUSHS float@78.74                                                               #   133/168
MULS                                                                            #   134/168
PUSHS float@0.12345                                                             #   135/168
DIVS                                                                            #   136/168
POPFRAME                                                                        #   137/168
RETURN                                                                          #   138/168
PUSHS float@0                                                                   #   140/168
POPFRAME                                                                        #   141/168
RETURN                                                                          #   142/168
LABEL $$main                                                                    #   144/168
CREATEFRAME                                                                     #   145/168
PUSHFRAME                                                                       #   146/168
DEFVAR LF@var_                                                                  #   148/168
CALL $blank                                                                     #   149/168
INT2FLOATS                                                                      #   150/168
CALL $blank                                                                     #   151/168
INT2FLOATS                                                                      #   152/168
FLOAT2R2EINTS                                                                   #   153/168
CALL $dbl                                                                       #   154/168
FLOAT2R2EINTS                                                                   #   155/168
CALL $int_                                                                      #   156/168
CALL $str_                                                                      #   157/168
FLOAT2R2EINTS                                                                   #   158/168
POPS LF@var_                                                                    #   159/168
PUSHS LF@var_                                                                   #   161/168
INT2FLOATS                                                                      #   162/168
FLOAT2R2EINTS                                                                   #   163/168
CREATEFRAME                                                                     #   164/168
DEFVAR TF@write                                                                 #   165/168
POPS TF@write                                                                   #   166/168
WRITE TF@write                                                                  #   167/168

