# 2017-12-04 23:21:46.865223
# SECTION: 96_programs
# TEST: 06
# INFO: Program to Count Number of Digits in an Integer
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 17 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IWRITE at line: 19 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 20 with following arguments:
# Dest: LF@a=0(int)
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: LF@soucet
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@soucet()
# Executing instruction: ILABEL at line: 26 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@a=1456534(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=1456534(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 31 with following arguments:
# Arg1: Stack@=1456534(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 32 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@a=1456534(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=1456534(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 39 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=10(double)
# Dest: GF@$num1()
# Executing instruction: IFLOAT2R2EINTS at line: 41 with following arguments:
# Arg1: Stack@=1456534(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=1456534(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: GF@$num1=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 44 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 45 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 46 with following arguments:
# Arg1: Stack@=1456534(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 47 with following arguments:
# Arg1: Stack@=145653.4(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=145653(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 49 with following arguments:
# Arg1: Stack@=145653(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=145653(int)
# Dest: LF@a=1456534(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@soucet=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 55 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 56 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 57 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@soucet=0(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 26 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@a=145653(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=145653(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 31 with following arguments:
# Arg1: Stack@=145653(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 32 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@a=145653(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=145653(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 39 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=10(double)
# Dest: GF@$num1=10(double)
# Executing instruction: IFLOAT2R2EINTS at line: 41 with following arguments:
# Arg1: Stack@=145653(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=145653(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: GF@$num1=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 44 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 45 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 46 with following arguments:
# Arg1: Stack@=145653(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 47 with following arguments:
# Arg1: Stack@=14565.3(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=14565(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 49 with following arguments:
# Arg1: Stack@=14565(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=14565(int)
# Dest: LF@a=145653(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@soucet=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 55 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 56 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 57 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@soucet=1(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 26 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@a=14565(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=14565(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 31 with following arguments:
# Arg1: Stack@=14565(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 32 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@a=14565(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=14565(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 39 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=10(double)
# Dest: GF@$num1=10(double)
# Executing instruction: IFLOAT2R2EINTS at line: 41 with following arguments:
# Arg1: Stack@=14565(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=14565(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: GF@$num1=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 44 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 45 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 46 with following arguments:
# Arg1: Stack@=14565(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 47 with following arguments:
# Arg1: Stack@=1456.5(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=1456(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 49 with following arguments:
# Arg1: Stack@=1456(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=1456(int)
# Dest: LF@a=14565(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@soucet=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 55 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 56 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 57 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@soucet=2(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 26 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@a=1456(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=1456(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 31 with following arguments:
# Arg1: Stack@=1456(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 32 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@a=1456(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=1456(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 39 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=10(double)
# Dest: GF@$num1=10(double)
# Executing instruction: IFLOAT2R2EINTS at line: 41 with following arguments:
# Arg1: Stack@=1456(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=1456(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: GF@$num1=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 44 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 45 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 46 with following arguments:
# Arg1: Stack@=1456(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 47 with following arguments:
# Arg1: Stack@=145.6(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=145(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 49 with following arguments:
# Arg1: Stack@=145(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=145(int)
# Dest: LF@a=1456(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@soucet=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 55 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 56 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 57 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@soucet=3(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 26 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@a=145(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=145(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 31 with following arguments:
# Arg1: Stack@=145(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 32 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@a=145(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=145(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 39 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=10(double)
# Dest: GF@$num1=10(double)
# Executing instruction: IFLOAT2R2EINTS at line: 41 with following arguments:
# Arg1: Stack@=145(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=145(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: GF@$num1=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 44 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 45 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 46 with following arguments:
# Arg1: Stack@=145(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 47 with following arguments:
# Arg1: Stack@=14.5(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=14(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 49 with following arguments:
# Arg1: Stack@=14(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=14(int)
# Dest: LF@a=145(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@soucet=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 55 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 56 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 57 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@soucet=4(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 26 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@a=14(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=14(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 31 with following arguments:
# Arg1: Stack@=14(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 32 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@a=14(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=14(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 39 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=10(double)
# Dest: GF@$num1=10(double)
# Executing instruction: IFLOAT2R2EINTS at line: 41 with following arguments:
# Arg1: Stack@=14(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=14(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: GF@$num1=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 44 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 45 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 46 with following arguments:
# Arg1: Stack@=14(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 47 with following arguments:
# Arg1: Stack@=1.4(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 49 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@a=14(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@soucet=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 55 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 56 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 57 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@soucet=5(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 26 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 31 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 32 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 39 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=10(double)
# Dest: GF@$num1=10(double)
# Executing instruction: IFLOAT2R2EINTS at line: 41 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: GF@$num1=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 44 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 45 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 46 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 47 with following arguments:
# Arg1: Stack@=0.1(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 49 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@a=1(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@soucet=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 55 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 56 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 57 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@soucet=6(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 26 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 31 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 32 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 61 with following arguments:
# Executing instruction: IPUSHS at line: 64 with following arguments:
# Arg1: LF@soucet=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 65 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 66 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 67 with following arguments:
# Executing instruction: IDEFVAR at line: 68 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 69 with following arguments:
# Arg1: Stack@=7(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 70 with following arguments:
# Arg1: TF@write=7(int)
# Executing instruction: IGROOT at line: 73 with following arguments:
# I am Groot at 73 (1398).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 1456534
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1398 (329+1069)
# GROOT: 1398
# 
#   1: ' Program to Count Number of Digits in an Integer
#   2: scope
#   3:     dim a as integer
#   4:     input a
#   5:     
#   6:     dim soucet as integer
#   7:     do while a <> 0
#   8:         a = a \ 10
#   9:         soucet = soucet + 1
#  10:     loop
#  11:     
#  12:     print soucet;
#  13: end scope

########################################

.IFJcode17                                                                      #     1/71
DEFVAR GF@$str1                                                                 #     2/71
DEFVAR GF@$str2                                                                 #     3/71
DEFVAR GF@$num1                                                                 #     4/71
DEFVAR GF@$num2                                                                 #     5/71
DEFVAR GF@$num3                                                                 #     6/71
DEFVAR GF@$bool1                                                                #     7/71
DEFVAR GF@$counter                                                              #     8/71
DEFVAR GF@$char                                                                 #     9/71
JUMP $$main                                                                     #    10/71
LABEL $$main                                                                    #    12/71
CREATEFRAME                                                                     #    13/71
PUSHFRAME                                                                       #    14/71
DEFVAR LF@a                                                                     #    16/71
MOVE LF@a int@0                                                                 #    17/71
WRITE string@?\032                                                              #    19/71
READ LF@a int                                                                   #    20/71
DEFVAR LF@soucet                                                                #    23/71
MOVE LF@soucet int@0                                                            #    24/71
LABEL &while7                                                                   #    26/71
PUSHS LF@a                                                                      #    27/71
INT2FLOATS                                                                      #    28/71
PUSHS int@0                                                                     #    29/71
INT2FLOATS                                                                      #    30/71
EQS                                                                             #    31/71
NOTS                                                                            #    32/71
PUSHS bool@true                                                                 #    33/71
JUMPIFNEQS &loop7                                                               #    34/71
PUSHS LF@a                                                                      #    36/71
INT2FLOATS                                                                      #    37/71
PUSHS int@10                                                                    #    38/71
INT2FLOATS                                                                      #    39/71
POPS GF@$num1                                                                   #    40/71
FLOAT2R2EINTS                                                                   #    41/71
INT2FLOATS                                                                      #    42/71
PUSHS GF@$num1                                                                  #    43/71
FLOAT2R2EINTS                                                                   #    44/71
INT2FLOATS                                                                      #    45/71
DIVS                                                                            #    46/71
FLOAT2INTS                                                                      #    47/71
INT2FLOATS                                                                      #    48/71
FLOAT2R2EINTS                                                                   #    49/71
POPS LF@a                                                                       #    50/71
PUSHS LF@soucet                                                                 #    52/71
INT2FLOATS                                                                      #    53/71
PUSHS int@1                                                                     #    54/71
INT2FLOATS                                                                      #    55/71
ADDS                                                                            #    56/71
FLOAT2R2EINTS                                                                   #    57/71
POPS LF@soucet                                                                  #    58/71
JUMP &while7                                                                    #    60/71
LABEL &loop7                                                                    #    61/71
PUSHS LF@soucet                                                                 #    64/71
INT2FLOATS                                                                      #    65/71
FLOAT2R2EINTS                                                                   #    66/71
CREATEFRAME                                                                     #    67/71
DEFVAR TF@write                                                                 #    68/71
POPS TF@write                                                                   #    69/71
WRITE TF@write                                                                  #    70/71

