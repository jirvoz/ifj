# 2017-12-04 23:21:46.940431
# SECTION: 96_programs
# TEST: 12
# INFO: Leap year
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 83 with following arguments:
# Executing instruction: ICREATEFRAME at line: 84 with following arguments:
# Executing instruction: IPUSHFRAME at line: 85 with following arguments:
# Executing instruction: IDEFVAR at line: 87 with following arguments:
# Dest: LF@year
# Executing instruction: IMOVE at line: 88 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@year()
# Executing instruction: ICALL at line: 90 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=Enter a year: (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 20 with following arguments:
# Arg1: Stack@=Enter a year: (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 21 with following arguments:
# Arg1: TF@write=Enter a year: (string)
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: LF@year
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@year()
# Executing instruction: IWRITE at line: 26 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 27 with following arguments:
# Dest: LF@year=0(int)
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@year=2016(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 31 with following arguments:
# Arg1: Stack@=2016(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 32 with following arguments:
# Executing instruction: IRETURN at line: 33 with following arguments:
# Executing instruction: IINT2FLOATS at line: 91 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 92 with following arguments:
# Arg1: Stack@=2016(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 93 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: LF@year=0(int)
# Executing instruction: IDEFVAR at line: 95 with following arguments:
# Dest: LF@res
# Executing instruction: IMOVE at line: 96 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@res()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: LF@year=2016(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 99 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 100 with following arguments:
# Arg1: Stack@=2016(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 103 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 104 with following arguments:
# Executing instruction: ILABEL at line: 39 with following arguments:
# Executing instruction: ICREATEFRAME at line: 40 with following arguments:
# Executing instruction: IPUSHFRAME at line: 41 with following arguments:
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: LF@divider
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@divider()
# Executing instruction: IDEFVAR at line: 44 with following arguments:
# Dest: LF@divident
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: LF@divident()
# Executing instruction: IDEFVAR at line: 48 with following arguments:
# Dest: LF@res
# Executing instruction: IMOVE at line: 49 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@res()
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@divident=2016(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@divident=2016(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@divider=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 56 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=4(double)
# Dest: GF@$num1()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=2016(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 59 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: GF@$num1=4(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 63 with following arguments:
# Arg1: Stack@=2016(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 64 with following arguments:
# Arg1: Stack@=504(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 65 with following arguments:
# Arg1: Stack@=504(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@divider=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 67 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=504(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 69 with following arguments:
# Arg1: Stack@=2016(double)
# Arg2: Stack@=2016(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 70 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 71 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@res=0(int)
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@res=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 75 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 76 with following arguments:
# Executing instruction: IRETURN at line: 77 with following arguments:
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@res=0(int)
# Executing instruction: IPUSHS at line: 109 with following arguments:
# Arg1: LF@res=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 110 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 112 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 113 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 114 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 115 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 118 with following arguments:
# Arg1: LF@year=2016(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 119 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 120 with following arguments:
# Arg1: Stack@=2016(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 121 with following arguments:
# Arg1: Const@=100(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 122 with following arguments:
# Arg1: Stack@=100(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 123 with following arguments:
# Arg1: Stack@=100(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 124 with following arguments:
# Executing instruction: ILABEL at line: 39 with following arguments:
# Executing instruction: ICREATEFRAME at line: 40 with following arguments:
# Executing instruction: IPUSHFRAME at line: 41 with following arguments:
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: LF@divider
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=100(int)
# Dest: LF@divider()
# Executing instruction: IDEFVAR at line: 44 with following arguments:
# Dest: LF@divident
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: LF@divident()
# Executing instruction: IDEFVAR at line: 48 with following arguments:
# Dest: LF@res
# Executing instruction: IMOVE at line: 49 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@res()
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@divident=2016(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@divident=2016(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@divider=100(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 56 with following arguments:
# Arg1: Stack@=100(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=100(double)
# Dest: GF@$num1=4(double)
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=2016(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 59 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: GF@$num1=100(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=100(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=100(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 63 with following arguments:
# Arg1: Stack@=2016(double)
# Arg2: Stack@=100(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 64 with following arguments:
# Arg1: Stack@=20.16(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 65 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@divider=100(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 67 with following arguments:
# Arg1: Stack@=100(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=20(double)
# Arg2: Stack@=100(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 69 with following arguments:
# Arg1: Stack@=2016(double)
# Arg2: Stack@=2000(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 70 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 71 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@res=0(int)
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@res=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 75 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 76 with following arguments:
# Executing instruction: IRETURN at line: 77 with following arguments:
# Executing instruction: IINT2FLOATS at line: 125 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 126 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 127 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@res=0(int)
# Executing instruction: IPUSHS at line: 129 with following arguments:
# Arg1: LF@res=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 130 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 131 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 132 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 133 with following arguments:
# Arg1: Stack@=16(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 134 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 135 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 191 with following arguments:
# Executing instruction: IPUSHS at line: 193 with following arguments:
# Arg1: LF@year=2016(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 194 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 195 with following arguments:
# Arg1: Stack@=2016(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 196 with following arguments:
# Executing instruction: IDEFVAR at line: 197 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=2016(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 199 with following arguments:
# Arg1: TF@write=2016(int)
# Executing instruction: IPUSHS at line: 200 with following arguments:
# Arg1: Const@= is a leap year(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 201 with following arguments:
# Executing instruction: IDEFVAR at line: 202 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 203 with following arguments:
# Arg1: Stack@= is a leap year(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 204 with following arguments:
# Arg1: TF@write= is a leap year(string)
# Executing instruction: ILABEL at line: 206 with following arguments:
# Executing instruction: IJUMP at line: 209 with following arguments:
# Executing instruction: ILABEL at line: 225 with following arguments:
# Executing instruction: IGROOT at line: 228 with following arguments:
# I am Groot at 228 (807).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 2016
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 807 (221+586)
# GROOT: 807
# 
#   1: ' Leap year
#   2: 
#   3: declare function modulo(divident as integer, divider as integer) as integer
#   4: 
#   5: function get_year() as integer
#   6:     print !"Enter a year: ";
#   7:     dim year as integer
#   8:     input year
#   9:     return year
#  10: end function
#  11: 
#  12: function modulo(divident as integer, divider as integer) as integer
#  13:     dim res as integer
#  14:     res = divident - (divident \ divider) * divider
#  15:     return res
#  16: end function
#  17: 
#  18: scope
#  19:     dim year as integer
#  20:     year = get_year()
#  21:     dim res as integer
#  22:     res = modulo(year, 4)
#  23:     if(res = 0) then
#  24:         res = modulo(year, 100)
#  25:         if(res = 0) then
#  26:             ' year is divisible by 400, hence the year is a leap year
#  27:             res = modulo(year, 400)
#  28:             if (res = 0) then
#  29:                 print year; !" is a leap year";
#  30:             else
#  31:                 print year; !" is not a leap year";
#  32:             end if
#  33:         else
#  34:             print year; !" is a leap year";
#  35:         end if
#  36:     
#  37:     else
#  38:          print year; !" is not a leap year";
#  39:     end if
#  40: end scope

########################################

.IFJcode17                                                                      #     1/226
DEFVAR GF@$str1                                                                 #     2/226
DEFVAR GF@$str2                                                                 #     3/226
DEFVAR GF@$num1                                                                 #     4/226
DEFVAR GF@$num2                                                                 #     5/226
DEFVAR GF@$num3                                                                 #     6/226
DEFVAR GF@$bool1                                                                #     7/226
DEFVAR GF@$counter                                                              #     8/226
DEFVAR GF@$char                                                                 #     9/226
JUMP $$main                                                                     #    10/226
LABEL $get_year                                                                 #    12/226
CREATEFRAME                                                                     #    13/226
PUSHFRAME                                                                       #    14/226
PUSHS string@Enter\032a\032year:\032                                            #    17/226
CREATEFRAME                                                                     #    18/226
DEFVAR TF@write                                                                 #    19/226
POPS TF@write                                                                   #    20/226
WRITE TF@write                                                                  #    21/226
DEFVAR LF@year                                                                  #    23/226
MOVE LF@year int@0                                                              #    24/226
WRITE string@?\032                                                              #    26/226
READ LF@year int                                                                #    27/226
PUSHS LF@year                                                                   #    29/226
INT2FLOATS                                                                      #    30/226
FLOAT2R2EINTS                                                                   #    31/226
POPFRAME                                                                        #    32/226
RETURN                                                                          #    33/226
PUSHS int@0                                                                     #    35/226
POPFRAME                                                                        #    36/226
RETURN                                                                          #    37/226
LABEL $modulo                                                                   #    39/226
CREATEFRAME                                                                     #    40/226
PUSHFRAME                                                                       #    41/226
DEFVAR LF@divider                                                               #    42/226
POPS LF@divider                                                                 #    43/226
DEFVAR LF@divident                                                              #    44/226
POPS LF@divident                                                                #    45/226
DEFVAR LF@res                                                                   #    48/226
MOVE LF@res int@0                                                               #    49/226
PUSHS LF@divident                                                               #    51/226
INT2FLOATS                                                                      #    52/226
PUSHS LF@divident                                                               #    53/226
INT2FLOATS                                                                      #    54/226
PUSHS LF@divider                                                                #    55/226
INT2FLOATS                                                                      #    56/226
POPS GF@$num1                                                                   #    57/226
FLOAT2R2EINTS                                                                   #    58/226
INT2FLOATS                                                                      #    59/226
PUSHS GF@$num1                                                                  #    60/226
FLOAT2R2EINTS                                                                   #    61/226
INT2FLOATS                                                                      #    62/226
DIVS                                                                            #    63/226
FLOAT2INTS                                                                      #    64/226
INT2FLOATS                                                                      #    65/226
PUSHS LF@divider                                                                #    66/226
INT2FLOATS                                                                      #    67/226
MULS                                                                            #    68/226
SUBS                                                                            #    69/226
FLOAT2R2EINTS                                                                   #    70/226
POPS LF@res                                                                     #    71/226
PUSHS LF@res                                                                    #    73/226
INT2FLOATS                                                                      #    74/226
FLOAT2R2EINTS                                                                   #    75/226
POPFRAME                                                                        #    76/226
RETURN                                                                          #    77/226
PUSHS int@0                                                                     #    79/226
POPFRAME                                                                        #    80/226
RETURN                                                                          #    81/226
LABEL $$main                                                                    #    83/226
CREATEFRAME                                                                     #    84/226
PUSHFRAME                                                                       #    85/226
DEFVAR LF@year                                                                  #    87/226
MOVE LF@year int@0                                                              #    88/226
CALL $get_year                                                                  #    90/226
INT2FLOATS                                                                      #    91/226
FLOAT2R2EINTS                                                                   #    92/226
POPS LF@year                                                                    #    93/226
DEFVAR LF@res                                                                   #    95/226
MOVE LF@res int@0                                                               #    96/226
PUSHS LF@year                                                                   #    98/226
INT2FLOATS                                                                      #    99/226
FLOAT2R2EINTS                                                                   #   100/226
PUSHS int@4                                                                     #   101/226
INT2FLOATS                                                                      #   102/226
FLOAT2R2EINTS                                                                   #   103/226
CALL $modulo                                                                    #   104/226
INT2FLOATS                                                                      #   105/226
FLOAT2R2EINTS                                                                   #   106/226
POPS LF@res                                                                     #   107/226
PUSHS LF@res                                                                    #   109/226
INT2FLOATS                                                                      #   110/226
PUSHS int@0                                                                     #   111/226
INT2FLOATS                                                                      #   112/226
EQS                                                                             #   113/226
PUSHS bool@true                                                                 #   114/226
JUMPIFNEQS &else23                                                              #   115/226
PUSHS LF@year                                                                   #   118/226
INT2FLOATS                                                                      #   119/226
FLOAT2R2EINTS                                                                   #   120/226
PUSHS int@100                                                                   #   121/226
INT2FLOATS                                                                      #   122/226
FLOAT2R2EINTS                                                                   #   123/226
CALL $modulo                                                                    #   124/226
INT2FLOATS                                                                      #   125/226
FLOAT2R2EINTS                                                                   #   126/226
POPS LF@res                                                                     #   127/226
PUSHS LF@res                                                                    #   129/226
INT2FLOATS                                                                      #   130/226
PUSHS int@0                                                                     #   131/226
INT2FLOATS                                                                      #   132/226
EQS                                                                             #   133/226
PUSHS bool@true                                                                 #   134/226
JUMPIFNEQS &else25                                                              #   135/226
PUSHS LF@year                                                                   #   139/226
INT2FLOATS                                                                      #   140/226
FLOAT2R2EINTS                                                                   #   141/226
PUSHS int@400                                                                   #   142/226
INT2FLOATS                                                                      #   143/226
FLOAT2R2EINTS                                                                   #   144/226
CALL $modulo                                                                    #   145/226
INT2FLOATS                                                                      #   146/226
FLOAT2R2EINTS                                                                   #   147/226
POPS LF@res                                                                     #   148/226
PUSHS LF@res                                                                    #   150/226
INT2FLOATS                                                                      #   151/226
PUSHS int@0                                                                     #   152/226
INT2FLOATS                                                                      #   153/226
EQS                                                                             #   154/226
PUSHS bool@true                                                                 #   155/226
JUMPIFNEQS &else28                                                              #   156/226
PUSHS LF@year                                                                   #   159/226
INT2FLOATS                                                                      #   160/226
FLOAT2R2EINTS                                                                   #   161/226
CREATEFRAME                                                                     #   162/226
DEFVAR TF@write                                                                 #   163/226
POPS TF@write                                                                   #   164/226
WRITE TF@write                                                                  #   165/226
PUSHS string@\032is\032a\032leap\032year                                        #   166/226
CREATEFRAME                                                                     #   167/226
DEFVAR TF@write                                                                 #   168/226
POPS TF@write                                                                   #   169/226
WRITE TF@write                                                                  #   170/226
JUMP &endif28                                                                   #   172/226
LABEL &else28                                                                   #   173/226
PUSHS LF@year                                                                   #   175/226
INT2FLOATS                                                                      #   176/226
FLOAT2R2EINTS                                                                   #   177/226
CREATEFRAME                                                                     #   178/226
DEFVAR TF@write                                                                 #   179/226
POPS TF@write                                                                   #   180/226
WRITE TF@write                                                                  #   181/226
PUSHS string@\032is\032not\032a\032leap\032year                                 #   182/226
CREATEFRAME                                                                     #   183/226
DEFVAR TF@write                                                                 #   184/226
POPS TF@write                                                                   #   185/226
WRITE TF@write                                                                  #   186/226
LABEL &endif28                                                                  #   188/226
JUMP &endif25                                                                   #   190/226
LABEL &else25                                                                   #   191/226
PUSHS LF@year                                                                   #   193/226
INT2FLOATS                                                                      #   194/226
FLOAT2R2EINTS                                                                   #   195/226
CREATEFRAME                                                                     #   196/226
DEFVAR TF@write                                                                 #   197/226
POPS TF@write                                                                   #   198/226
WRITE TF@write                                                                  #   199/226
PUSHS string@\032is\032a\032leap\032year                                        #   200/226
CREATEFRAME                                                                     #   201/226
DEFVAR TF@write                                                                 #   202/226
POPS TF@write                                                                   #   203/226
WRITE TF@write                                                                  #   204/226
LABEL &endif25                                                                  #   206/226
JUMP &endif23                                                                   #   209/226
LABEL &else23                                                                   #   210/226
PUSHS LF@year                                                                   #   212/226
INT2FLOATS                                                                      #   213/226
FLOAT2R2EINTS                                                                   #   214/226
CREATEFRAME                                                                     #   215/226
DEFVAR TF@write                                                                 #   216/226
POPS TF@write                                                                   #   217/226
WRITE TF@write                                                                  #   218/226
PUSHS string@\032is\032not\032a\032leap\032year                                 #   219/226
CREATEFRAME                                                                     #   220/226
DEFVAR TF@write                                                                 #   221/226
POPS TF@write                                                                   #   222/226
WRITE TF@write                                                                  #   223/226
LABEL &endif23                                                                  #   225/226

