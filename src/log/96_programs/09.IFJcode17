# 2017-12-04 23:21:46.924132
# SECTION: 96_programs
# TEST: 09
# INFO: Count modulo
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: ICREATEFRAME at line: 57 with following arguments:
# Executing instruction: IPUSHFRAME at line: 58 with following arguments:
# Executing instruction: IDEFVAR at line: 60 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 61 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 65 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 67 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 68 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 69 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@delenec
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@delenec()
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@delitel
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@delitel()
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@vysledek
# Executing instruction: IMOVE at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@vysledek()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@delitel=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: LF@delitel=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 27 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@delenec=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 30 with following arguments:
# Arg1: Stack@=4(double)
# Dest: GF@$num1()
# Executing instruction: IFLOAT2R2EINTS at line: 31 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 32 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: GF@$num1=4(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 34 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 35 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 36 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 37 with following arguments:
# Arg1: Stack@=2.5(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 38 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: LF@delenec=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 40 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 41 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 42 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 43 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 44 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@vysledek=0(int)
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@vysledek=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 47 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 48 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 49 with following arguments:
# Executing instruction: IRETURN at line: 50 with following arguments:
# Executing instruction: IINT2FLOATS at line: 70 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 71 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@a=0(int)
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 76 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 77 with following arguments:
# Executing instruction: IDEFVAR at line: 78 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 79 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 80 with following arguments:
# Arg1: TF@write=2(int)
# Executing instruction: IGROOT at line: 83 with following arguments:
# I am Groot at 83 (340).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 340 (88+252)
# GROOT: 340
# 
#   1: ' Count modulo
#   2: function modulo(delitel as integer, delenec as integer) as integer
#   3:     dim vysledek as integer
#   4:     vysledek = delitel - (delitel\delenec)*delenec
#   5:     return vysledek
#   6: end function
#   7: 
#   8: scope
#   9: 	dim a as integer
#  10: 	a = modulo (10, 4)
#  11: 	print a;
#  12: end scope

########################################

.IFJcode17                                                                      #     1/81
DEFVAR GF@$str1                                                                 #     2/81
DEFVAR GF@$str2                                                                 #     3/81
DEFVAR GF@$num1                                                                 #     4/81
DEFVAR GF@$num2                                                                 #     5/81
DEFVAR GF@$num3                                                                 #     6/81
DEFVAR GF@$bool1                                                                #     7/81
DEFVAR GF@$counter                                                              #     8/81
DEFVAR GF@$char                                                                 #     9/81
JUMP $$main                                                                     #    10/81
LABEL $modulo                                                                   #    12/81
CREATEFRAME                                                                     #    13/81
PUSHFRAME                                                                       #    14/81
DEFVAR LF@delenec                                                               #    15/81
POPS LF@delenec                                                                 #    16/81
DEFVAR LF@delitel                                                               #    17/81
POPS LF@delitel                                                                 #    18/81
DEFVAR LF@vysledek                                                              #    21/81
MOVE LF@vysledek int@0                                                          #    22/81
PUSHS LF@delitel                                                                #    24/81
INT2FLOATS                                                                      #    25/81
PUSHS LF@delitel                                                                #    26/81
INT2FLOATS                                                                      #    27/81
PUSHS LF@delenec                                                                #    28/81
INT2FLOATS                                                                      #    29/81
POPS GF@$num1                                                                   #    30/81
FLOAT2R2EINTS                                                                   #    31/81
INT2FLOATS                                                                      #    32/81
PUSHS GF@$num1                                                                  #    33/81
FLOAT2R2EINTS                                                                   #    34/81
INT2FLOATS                                                                      #    35/81
DIVS                                                                            #    36/81
FLOAT2INTS                                                                      #    37/81
INT2FLOATS                                                                      #    38/81
PUSHS LF@delenec                                                                #    39/81
INT2FLOATS                                                                      #    40/81
MULS                                                                            #    41/81
SUBS                                                                            #    42/81
FLOAT2R2EINTS                                                                   #    43/81
POPS LF@vysledek                                                                #    44/81
PUSHS LF@vysledek                                                               #    46/81
INT2FLOATS                                                                      #    47/81
FLOAT2R2EINTS                                                                   #    48/81
POPFRAME                                                                        #    49/81
RETURN                                                                          #    50/81
PUSHS int@0                                                                     #    52/81
POPFRAME                                                                        #    53/81
RETURN                                                                          #    54/81
LABEL $$main                                                                    #    56/81
CREATEFRAME                                                                     #    57/81
PUSHFRAME                                                                       #    58/81
DEFVAR LF@a                                                                     #    60/81
MOVE LF@a int@0                                                                 #    61/81
PUSHS int@10                                                                    #    63/81
INT2FLOATS                                                                      #    64/81
FLOAT2R2EINTS                                                                   #    65/81
PUSHS int@4                                                                     #    66/81
INT2FLOATS                                                                      #    67/81
FLOAT2R2EINTS                                                                   #    68/81
CALL $modulo                                                                    #    69/81
INT2FLOATS                                                                      #    70/81
FLOAT2R2EINTS                                                                   #    71/81
POPS LF@a                                                                       #    72/81
PUSHS LF@a                                                                      #    74/81
INT2FLOATS                                                                      #    75/81
FLOAT2R2EINTS                                                                   #    76/81
CREATEFRAME                                                                     #    77/81
DEFVAR TF@write                                                                 #    78/81
POPS TF@write                                                                   #    79/81
WRITE TF@write                                                                  #    80/81

