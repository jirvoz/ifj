# 2017-12-04 23:21:47.019283
# SECTION: 96_programs
# TEST: 15
# INFO: Taylor polynom for log
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 144 with following arguments:
# Executing instruction: ICREATEFRAME at line: 145 with following arguments:
# Executing instruction: IPUSHFRAME at line: 146 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@d
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@d()
# Executing instruction: IWRITE at line: 152 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 153 with following arguments:
# Dest: LF@d=0(double)
# Executing instruction: IPUSHS at line: 155 with following arguments:
# Arg1: LF@d=12.25(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 156 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 157 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 158 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 159 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@x
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=12.25(double)
# Dest: LF@x()
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 22 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@result()
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: LF@x_exp
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 26 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=1(double)
# Dest: LF@x_exp()
# Executing instruction: IDEFVAR at line: 29 with following arguments:
# Dest: LF@numerator_fraction
# Executing instruction: IMOVE at line: 30 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@numerator_fraction()
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: LF@i
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 34 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 35 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 36 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@i()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: LF@x=12.25(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 42 with following arguments:
# Arg1: Stack@=12.25(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 44 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: LF@x=12.25(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 50 with following arguments:
# Arg1: Stack@=12.25(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@x=12.25(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 52 with following arguments:
# Arg1: Stack@=11.25(double)
# Arg2: Stack@=12.25(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=0.9183673469387755(double)
# Dest: LF@numerator_fraction=0(double)
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@i=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 61 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 64 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@x_exp=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@numerator_fraction=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 69 with following arguments:
# Arg1: Stack@=0.9183673469387755(double)
# Dest: LF@x_exp=1(double)
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@x_exp=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@i=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 75 with following arguments:
# Arg1: Stack@=0.9183673469387755(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=0.9183673469387755(double)
# Dest: LF@result=0(double)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@i=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 82 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 83 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 84 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 85 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@i=1(int)
# Executing instruction: IJUMP at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@i=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 61 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 64 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@x_exp=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@numerator_fraction=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=0.9183673469387755(double)
# Arg2: Stack@=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 69 with following arguments:
# Arg1: Stack@=0.8433985839233653(double)
# Dest: LF@x_exp=0.9183673469387755(double)
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@x_exp=0.8433985839233653(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@i=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 75 with following arguments:
# Arg1: Stack@=0.8433985839233653(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=0.9183673469387755(double)
# Arg2: Stack@=0.4216992919616827(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=1.340066638900458(double)
# Dest: LF@result=0.9183673469387755(double)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@i=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 82 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 83 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 84 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 85 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@i=2(int)
# Executing instruction: IJUMP at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 61 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 64 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@x_exp=0.8433985839233653(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@numerator_fraction=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=0.8433985839233653(double)
# Arg2: Stack@=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 69 with following arguments:
# Arg1: Stack@=0.7745497199296212(double)
# Dest: LF@x_exp=0.8433985839233653(double)
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=1.340066638900458(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@x_exp=0.7745497199296212(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 75 with following arguments:
# Arg1: Stack@=0.7745497199296212(double)
# Arg2: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=1.340066638900458(double)
# Arg2: Stack@=0.2581832399765404(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=1.598249878876999(double)
# Dest: LF@result=1.340066638900458(double)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 82 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 83 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 84 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 85 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@i=3(int)
# Executing instruction: IJUMP at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 61 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 64 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@x_exp=0.7745497199296212(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@numerator_fraction=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=0.7745497199296212(double)
# Arg2: Stack@=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 69 with following arguments:
# Arg1: Stack@=0.7113211713639378(double)
# Dest: LF@x_exp=0.7745497199296212(double)
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=1.598249878876999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@x_exp=0.7113211713639378(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 75 with following arguments:
# Arg1: Stack@=0.7113211713639378(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=1.598249878876999(double)
# Arg2: Stack@=0.1778302928409844(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=1.776080171717983(double)
# Dest: LF@result=1.598249878876999(double)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 82 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 83 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 84 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 85 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@i=4(int)
# Executing instruction: IJUMP at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 61 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 64 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@x_exp=0.7113211713639378(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@numerator_fraction=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=0.7113211713639378(double)
# Arg2: Stack@=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 69 with following arguments:
# Arg1: Stack@=0.6532541369668816(double)
# Dest: LF@x_exp=0.7113211713639378(double)
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=1.776080171717983(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@x_exp=0.6532541369668816(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 75 with following arguments:
# Arg1: Stack@=0.6532541369668816(double)
# Arg2: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=1.776080171717983(double)
# Arg2: Stack@=0.1306508273933763(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=1.906730999111359(double)
# Dest: LF@result=1.776080171717983(double)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 82 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 83 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 84 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 85 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@i=5(int)
# Executing instruction: IJUMP at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 61 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 64 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@x_exp=0.6532541369668816(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@numerator_fraction=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=0.6532541369668816(double)
# Arg2: Stack@=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 69 with following arguments:
# Arg1: Stack@=0.5999272686430546(double)
# Dest: LF@x_exp=0.6532541369668816(double)
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=1.906730999111359(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@x_exp=0.5999272686430546(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 75 with following arguments:
# Arg1: Stack@=0.5999272686430546(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=1.906730999111359(double)
# Arg2: Stack@=0.09998787810717576(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=2.006718877218535(double)
# Dest: LF@result=1.906730999111359(double)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 82 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 83 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 84 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 85 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@i=6(int)
# Executing instruction: IJUMP at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 61 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 64 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@x_exp=0.5999272686430546(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@numerator_fraction=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=0.5999272686430546(double)
# Arg2: Stack@=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 69 with following arguments:
# Arg1: Stack@=0.5509536140599481(double)
# Dest: LF@x_exp=0.5999272686430546(double)
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=2.006718877218535(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@x_exp=0.5509536140599481(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 75 with following arguments:
# Arg1: Stack@=0.5509536140599481(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=2.006718877218535(double)
# Arg2: Stack@=0.07870765915142117(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=2.085426536369956(double)
# Dest: LF@result=2.006718877218535(double)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 82 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 83 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 84 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 85 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@i=7(int)
# Executing instruction: IJUMP at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 61 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 64 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@x_exp=0.5509536140599481(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@numerator_fraction=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=0.5509536140599481(double)
# Arg2: Stack@=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 69 with following arguments:
# Arg1: Stack@=0.5059778088305646(double)
# Dest: LF@x_exp=0.5509536140599481(double)
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=2.085426536369956(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@x_exp=0.5059778088305646(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 75 with following arguments:
# Arg1: Stack@=0.5059778088305646(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=2.085426536369956(double)
# Arg2: Stack@=0.06324722610382058(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=2.148673762473777(double)
# Dest: LF@result=2.085426536369956(double)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 82 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 83 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 84 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 85 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@i=8(int)
# Executing instruction: IJUMP at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 61 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 64 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@x_exp=0.5059778088305646(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@numerator_fraction=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=0.5059778088305646(double)
# Arg2: Stack@=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 69 with following arguments:
# Arg1: Stack@=0.4646734979056206(double)
# Dest: LF@x_exp=0.5059778088305646(double)
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=2.148673762473777(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@x_exp=0.4646734979056206(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 75 with following arguments:
# Arg1: Stack@=0.4646734979056206(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=2.148673762473777(double)
# Arg2: Stack@=0.05163038865618007(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=2.200304151129957(double)
# Dest: LF@result=2.148673762473777(double)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 82 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 83 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 84 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 85 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@i=9(int)
# Executing instruction: IJUMP at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 61 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 64 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@x_exp=0.4646734979056206(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@numerator_fraction=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=0.4646734979056206(double)
# Arg2: Stack@=0.9183673469387755(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 69 with following arguments:
# Arg1: Stack@=0.4267409674643455(double)
# Dest: LF@x_exp=0.4646734979056206(double)
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=2.200304151129957(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@x_exp=0.4267409674643455(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 75 with following arguments:
# Arg1: Stack@=0.4267409674643455(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=2.200304151129957(double)
# Arg2: Stack@=0.04267409674643455(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=2.242978247876392(double)
# Dest: LF@result=2.200304151129957(double)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 82 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 83 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 84 with following arguments:
# Arg1: Stack@=11(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 85 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@i=10(int)
# Executing instruction: IJUMP at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@i=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 61 with following arguments:
# Arg1: Stack@=11(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 62 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 64 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 88 with following arguments:
# Executing instruction: IJUMP at line: 90 with following arguments:
# Executing instruction: ILABEL at line: 134 with following arguments:
# Executing instruction: IPUSHS at line: 136 with following arguments:
# Arg1: LF@result=2.242978247876392(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 137 with following arguments:
# Executing instruction: IRETURN at line: 138 with following arguments:
# Executing instruction: IPOPS at line: 160 with following arguments:
# Arg1: Stack@=2.242978247876392(double)
# Dest: LF@d=12.25(double)
# Executing instruction: IPUSHS at line: 162 with following arguments:
# Arg1: LF@d=2.242978247876392(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 163 with following arguments:
# Executing instruction: IDEFVAR at line: 164 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 165 with following arguments:
# Arg1: Stack@=2.242978247876392(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 166 with following arguments:
# Arg1: TF@write=2.242978247876392(double)
# Executing instruction: IPUSHS at line: 167 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 168 with following arguments:
# Executing instruction: IDEFVAR at line: 169 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 170 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 171 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IWRITE at line: 174 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 175 with following arguments:
# Dest: LF@d=2.242978247876392(double)
# Executing instruction: IPUSHS at line: 177 with following arguments:
# Arg1: LF@d=0.125(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 178 with following arguments:
# Arg1: Const@=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 179 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 180 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 181 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@x
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=0.125(double)
# Dest: LF@x()
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 22 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@result()
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: LF@x_exp
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 26 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=1(double)
# Dest: LF@x_exp()
# Executing instruction: IDEFVAR at line: 29 with following arguments:
# Dest: LF@numerator_fraction
# Executing instruction: IMOVE at line: 30 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@numerator_fraction()
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: LF@i
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 34 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 35 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 36 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@i()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: LF@x=0.125(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 42 with following arguments:
# Arg1: Stack@=0.125(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 44 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 91 with following arguments:
# Executing instruction: IPUSHS at line: 93 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 94 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: LF@x=0.125(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 96 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=0.125(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 97 with following arguments:
# Arg1: Stack@=0.875(double)
# Dest: LF@x=0.125(double)
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.875(double)
# Dest: LF@x_exp=1(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.875(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.875(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-0.875(double)
# Dest: LF@result=0(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@i=1(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.875(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.875(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.765625(double)
# Dest: LF@x_exp=0.875(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-0.875(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.765625(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.765625(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-0.875(double)
# Arg2: Stack@=0.3828125(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-1.2578125(double)
# Dest: LF@result=-0.875(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@i=2(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.765625(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.765625(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.669921875(double)
# Dest: LF@x_exp=0.765625(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-1.2578125(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.669921875(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.669921875(double)
# Arg2: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-1.2578125(double)
# Arg2: Stack@=0.2233072916666667(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-1.481119791666667(double)
# Dest: LF@result=-1.2578125(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@i=3(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.669921875(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.669921875(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.586181640625(double)
# Dest: LF@x_exp=0.669921875(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-1.481119791666667(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.586181640625(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.586181640625(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-1.481119791666667(double)
# Arg2: Stack@=0.14654541015625(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-1.627665201822917(double)
# Dest: LF@result=-1.481119791666667(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@i=4(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.586181640625(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.586181640625(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.512908935546875(double)
# Dest: LF@x_exp=0.586181640625(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-1.627665201822917(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.512908935546875(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.512908935546875(double)
# Arg2: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-1.627665201822917(double)
# Arg2: Stack@=0.102581787109375(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-1.730246988932292(double)
# Dest: LF@result=-1.627665201822917(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@i=5(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.512908935546875(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.512908935546875(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.4487953186035156(double)
# Dest: LF@x_exp=0.512908935546875(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-1.730246988932292(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.4487953186035156(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.4487953186035156(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-1.730246988932292(double)
# Arg2: Stack@=0.07479921976725261(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-1.805046208699544(double)
# Dest: LF@result=-1.730246988932292(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@i=6(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.4487953186035156(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.4487953186035156(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.3926959037780762(double)
# Dest: LF@x_exp=0.4487953186035156(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-1.805046208699544(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.3926959037780762(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.3926959037780762(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-1.805046208699544(double)
# Arg2: Stack@=0.05609941482543945(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-1.861145623524984(double)
# Dest: LF@result=-1.805046208699544(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@i=7(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.3926959037780762(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.3926959037780762(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.3436089158058167(double)
# Dest: LF@x_exp=0.3926959037780762(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-1.861145623524984(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.3436089158058167(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.3436089158058167(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-1.861145623524984(double)
# Arg2: Stack@=0.04295111447572708(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-1.904096738000711(double)
# Dest: LF@result=-1.861145623524984(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@i=8(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.3436089158058167(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.3436089158058167(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.3006578013300896(double)
# Dest: LF@x_exp=0.3436089158058167(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-1.904096738000711(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.3006578013300896(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.3006578013300896(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-1.904096738000711(double)
# Arg2: Stack@=0.03340642237000995(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-1.937503160370721(double)
# Dest: LF@result=-1.904096738000711(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@i=9(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.3006578013300896(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.3006578013300896(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.2630755761638284(double)
# Dest: LF@x_exp=0.3006578013300896(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-1.937503160370721(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.2630755761638284(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.2630755761638284(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-1.937503160370721(double)
# Arg2: Stack@=0.02630755761638284(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-1.963810717987104(double)
# Dest: LF@result=-1.937503160370721(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=11(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@i=10(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=11(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.2630755761638284(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.2630755761638284(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.2301911291433498(double)
# Dest: LF@x_exp=0.2630755761638284(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-1.963810717987104(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.2301911291433498(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.2301911291433498(double)
# Arg2: Stack@=11(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-1.963810717987104(double)
# Arg2: Stack@=0.02092646628575907(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-1.984737184272863(double)
# Dest: LF@result=-1.963810717987104(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=11(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=12(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=12(int)
# Dest: LF@i=11(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=12(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=12(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=12(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.2301911291433498(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.2301911291433498(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.2014172380004311(double)
# Dest: LF@x_exp=0.2301911291433498(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-1.984737184272863(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.2014172380004311(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=12(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=12(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.2014172380004311(double)
# Arg2: Stack@=12(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-1.984737184272863(double)
# Arg2: Stack@=0.01678476983336926(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-2.001521954106232(double)
# Dest: LF@result=-1.984737184272863(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=12(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=12(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=12(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=13(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=13(int)
# Dest: LF@i=12(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=13(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=13(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=13(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.2014172380004311(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.2014172380004311(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.1762400832503772(double)
# Dest: LF@x_exp=0.2014172380004311(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-2.001521954106232(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.1762400832503772(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=13(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=13(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.1762400832503772(double)
# Arg2: Stack@=13(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-2.001521954106232(double)
# Arg2: Stack@=0.01355692948079825(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-2.015078883587031(double)
# Dest: LF@result=-2.001521954106232(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=13(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=13(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=13(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=14(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=14(int)
# Dest: LF@i=13(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=14(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=14(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=14(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.1762400832503772(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.1762400832503772(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.1542100728440801(double)
# Dest: LF@x_exp=0.1762400832503772(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-2.015078883587031(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.1542100728440801(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=14(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=14(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.1542100728440801(double)
# Arg2: Stack@=14(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-2.015078883587031(double)
# Arg2: Stack@=0.01101500520314858(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-2.026093888790179(double)
# Dest: LF@result=-2.015078883587031(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=14(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=14(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=14(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=15(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=15(int)
# Dest: LF@i=14(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=15(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=15(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=15(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.1542100728440801(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.1542100728440801(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.1349338137385701(double)
# Dest: LF@x_exp=0.1542100728440801(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-2.026093888790179(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.1349338137385701(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=15(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=15(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.1349338137385701(double)
# Arg2: Stack@=15(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-2.026093888790179(double)
# Arg2: Stack@=0.008995587582571336(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-2.03508947637275(double)
# Dest: LF@result=-2.026093888790179(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=15(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=15(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=15(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@i=15(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=16(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.1349338137385701(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.1349338137385701(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.1180670870212488(double)
# Dest: LF@x_exp=0.1349338137385701(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-2.03508947637275(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.1180670870212488(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.1180670870212488(double)
# Arg2: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-2.03508947637275(double)
# Arg2: Stack@=0.00737919293882805(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-2.042468669311578(double)
# Dest: LF@result=-2.03508947637275(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=16(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=17(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=17(int)
# Dest: LF@i=16(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=17(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=17(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=17(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.1180670870212488(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.1180670870212488(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.1033087011435927(double)
# Dest: LF@x_exp=0.1180670870212488(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-2.042468669311578(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.1033087011435927(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=17(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=17(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.1033087011435927(double)
# Arg2: Stack@=17(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-2.042468669311578(double)
# Arg2: Stack@=0.006076982420211335(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-2.048545651731789(double)
# Dest: LF@result=-2.042468669311578(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=17(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=17(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=17(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=18(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=18(int)
# Dest: LF@i=17(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=18(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=18(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=18(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.1033087011435927(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.1033087011435927(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.09039511350064361(double)
# Dest: LF@x_exp=0.1033087011435927(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-2.048545651731789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.09039511350064361(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=18(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=18(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.09039511350064361(double)
# Arg2: Stack@=18(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-2.048545651731789(double)
# Arg2: Stack@=0.005021950750035756(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-2.053567602481825(double)
# Dest: LF@result=-2.048545651731789(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=18(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=18(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=18(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=19(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=19(int)
# Dest: LF@i=18(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=19(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=19(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=19(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.09039511350064361(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.09039511350064361(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.07909572431306316(double)
# Dest: LF@x_exp=0.09039511350064361(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-2.053567602481825(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.07909572431306316(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=19(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=19(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.07909572431306316(double)
# Arg2: Stack@=19(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-2.053567602481825(double)
# Arg2: Stack@=0.004162932858582272(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-2.057730535340407(double)
# Dest: LF@result=-2.053567602481825(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=19(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=19(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=19(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@i=19(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=20(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@x_exp=0.07909572431306316(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@x=0.875(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=0.07909572431306316(double)
# Arg2: Stack@=0.875(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=0.06920875877393026(double)
# Dest: LF@x_exp=0.07909572431306316(double)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@result=-2.057730535340407(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: LF@x_exp=0.06920875877393026(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@i=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 119 with following arguments:
# Arg1: Stack@=0.06920875877393026(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 120 with following arguments:
# Arg1: Stack@=-2.057730535340407(double)
# Arg2: Stack@=0.003460437938696513(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=-2.061190973279104(double)
# Dest: LF@result=-2.057730535340407(double)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@i=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 127 with following arguments:
# Arg1: Stack@=20(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 128 with following arguments:
# Arg1: Stack@=21(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=21(int)
# Dest: LF@i=20(int)
# Executing instruction: IJUMP at line: 131 with following arguments:
# Executing instruction: ILABEL at line: 100 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=21(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=21(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@n=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 105 with following arguments:
# Arg1: Stack@=21(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 106 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 108 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 132 with following arguments:
# Executing instruction: ILABEL at line: 134 with following arguments:
# Executing instruction: IPUSHS at line: 136 with following arguments:
# Arg1: LF@result=-2.061190973279104(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 137 with following arguments:
# Executing instruction: IRETURN at line: 138 with following arguments:
# Executing instruction: IPOPS at line: 182 with following arguments:
# Arg1: Stack@=-2.061190973279104(double)
# Dest: LF@d=0.125(double)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@d=-2.061190973279104(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 185 with following arguments:
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=-2.061190973279104(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 188 with following arguments:
# Arg1: TF@write=-2.061190973279104(double)
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 190 with following arguments:
# Executing instruction: IDEFVAR at line: 191 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 192 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 193 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IGROOT at line: 196 with following arguments:
# I am Groot at 196 (5949).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 12.25
# 0.125
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 5949 (1406+4543)
# GROOT: 5949
# 
#   1: 'Taylor polynom for log
#   2: 
#   3: function taylor_log(x as double, n as integer) as double
#   4: 	dim result as double
#   5: 	dim x_exp as double = 1
#   6: 	dim numerator_fraction as double
#   7: 	dim i as integer = 1
#   8: 
#   9: 	if x > 1 then
#  10: 		numerator_fraction = (x - 1) / x
#  11: 
#  12: 		do while i <= n
#  13: 			x_exp = x_exp * numerator_fraction
#  14: 			result = result + x_exp / i
#  15: 			i = i + 1
#  16: 		loop
#  17: 	else
#  18: 		x = 1 - x
#  19: 
#  20: 		do while i <= n
#  21: 			x_exp = x_exp * x
#  22: 			result = result - (x_exp / i)
#  23: 			i = i + 1
#  24: 		loop
#  25: 	end if
#  26: 	return result
#  27: end function
#  28: 
#  29: scope
#  30: 	dim d as double
#  31: 
#  32: 	input d
#  33: 	d = taylor_log(d, 10)
#  34: 	print d; !"\n";
#  35: 
#  36: 	input d
#  37: 	d = taylor_log(d, 20)
#  38: 	print d; !"\n";
#  39: end scope

########################################

.IFJcode17                                                                      #     1/194
DEFVAR GF@$str1                                                                 #     2/194
DEFVAR GF@$str2                                                                 #     3/194
DEFVAR GF@$num1                                                                 #     4/194
DEFVAR GF@$num2                                                                 #     5/194
DEFVAR GF@$num3                                                                 #     6/194
DEFVAR GF@$bool1                                                                #     7/194
DEFVAR GF@$counter                                                              #     8/194
DEFVAR GF@$char                                                                 #     9/194
JUMP $$main                                                                     #    10/194
LABEL $taylor_log                                                               #    12/194
CREATEFRAME                                                                     #    13/194
PUSHFRAME                                                                       #    14/194
DEFVAR LF@n                                                                     #    15/194
POPS LF@n                                                                       #    16/194
DEFVAR LF@x                                                                     #    17/194
POPS LF@x                                                                       #    18/194
DEFVAR LF@result                                                                #    21/194
MOVE LF@result float@0                                                          #    22/194
DEFVAR LF@x_exp                                                                 #    24/194
PUSHS int@1                                                                     #    25/194
INT2FLOATS                                                                      #    26/194
POPS LF@x_exp                                                                   #    27/194
DEFVAR LF@numerator_fraction                                                    #    29/194
MOVE LF@numerator_fraction float@0                                              #    30/194
DEFVAR LF@i                                                                     #    32/194
PUSHS int@1                                                                     #    33/194
INT2FLOATS                                                                      #    34/194
FLOAT2R2EINTS                                                                   #    35/194
POPS LF@i                                                                       #    36/194
PUSHS LF@x                                                                      #    39/194
PUSHS int@1                                                                     #    40/194
INT2FLOATS                                                                      #    41/194
GTS                                                                             #    42/194
PUSHS bool@true                                                                 #    43/194
JUMPIFNEQS &else9                                                               #    44/194
PUSHS LF@x                                                                      #    47/194
PUSHS int@1                                                                     #    48/194
INT2FLOATS                                                                      #    49/194
SUBS                                                                            #    50/194
PUSHS LF@x                                                                      #    51/194
DIVS                                                                            #    52/194
POPS LF@numerator_fraction                                                      #    53/194
LABEL &while12                                                                  #    56/194
PUSHS LF@i                                                                      #    57/194
INT2FLOATS                                                                      #    58/194
PUSHS LF@n                                                                      #    59/194
INT2FLOATS                                                                      #    60/194
GTS                                                                             #    61/194
NOTS                                                                            #    62/194
PUSHS bool@true                                                                 #    63/194
JUMPIFNEQS &loop12                                                              #    64/194
PUSHS LF@x_exp                                                                  #    66/194
PUSHS LF@numerator_fraction                                                     #    67/194
MULS                                                                            #    68/194
POPS LF@x_exp                                                                   #    69/194
PUSHS LF@result                                                                 #    71/194
PUSHS LF@x_exp                                                                  #    72/194
PUSHS LF@i                                                                      #    73/194
INT2FLOATS                                                                      #    74/194
DIVS                                                                            #    75/194
ADDS                                                                            #    76/194
POPS LF@result                                                                  #    77/194
PUSHS LF@i                                                                      #    79/194
INT2FLOATS                                                                      #    80/194
PUSHS int@1                                                                     #    81/194
INT2FLOATS                                                                      #    82/194
ADDS                                                                            #    83/194
FLOAT2R2EINTS                                                                   #    84/194
POPS LF@i                                                                       #    85/194
JUMP &while12                                                                   #    87/194
LABEL &loop12                                                                   #    88/194
JUMP &endif9                                                                    #    90/194
LABEL &else9                                                                    #    91/194
PUSHS int@1                                                                     #    93/194
INT2FLOATS                                                                      #    94/194
PUSHS LF@x                                                                      #    95/194
SUBS                                                                            #    96/194
POPS LF@x                                                                       #    97/194
LABEL &while20                                                                  #   100/194
PUSHS LF@i                                                                      #   101/194
INT2FLOATS                                                                      #   102/194
PUSHS LF@n                                                                      #   103/194
INT2FLOATS                                                                      #   104/194
GTS                                                                             #   105/194
NOTS                                                                            #   106/194
PUSHS bool@true                                                                 #   107/194
JUMPIFNEQS &loop20                                                              #   108/194
PUSHS LF@x_exp                                                                  #   110/194
PUSHS LF@x                                                                      #   111/194
MULS                                                                            #   112/194
POPS LF@x_exp                                                                   #   113/194
PUSHS LF@result                                                                 #   115/194
PUSHS LF@x_exp                                                                  #   116/194
PUSHS LF@i                                                                      #   117/194
INT2FLOATS                                                                      #   118/194
DIVS                                                                            #   119/194
SUBS                                                                            #   120/194
POPS LF@result                                                                  #   121/194
PUSHS LF@i                                                                      #   123/194
INT2FLOATS                                                                      #   124/194
PUSHS int@1                                                                     #   125/194
INT2FLOATS                                                                      #   126/194
ADDS                                                                            #   127/194
FLOAT2R2EINTS                                                                   #   128/194
POPS LF@i                                                                       #   129/194
JUMP &while20                                                                   #   131/194
LABEL &loop20                                                                   #   132/194
LABEL &endif9                                                                   #   134/194
PUSHS LF@result                                                                 #   136/194
POPFRAME                                                                        #   137/194
RETURN                                                                          #   138/194
PUSHS float@0                                                                   #   140/194
POPFRAME                                                                        #   141/194
RETURN                                                                          #   142/194
LABEL $$main                                                                    #   144/194
CREATEFRAME                                                                     #   145/194
PUSHFRAME                                                                       #   146/194
DEFVAR LF@d                                                                     #   148/194
MOVE LF@d float@0                                                               #   149/194
WRITE string@?\032                                                              #   152/194
READ LF@d float                                                                 #   153/194
PUSHS LF@d                                                                      #   155/194
PUSHS int@10                                                                    #   156/194
INT2FLOATS                                                                      #   157/194
FLOAT2R2EINTS                                                                   #   158/194
CALL $taylor_log                                                                #   159/194
POPS LF@d                                                                       #   160/194
PUSHS LF@d                                                                      #   162/194
CREATEFRAME                                                                     #   163/194
DEFVAR TF@write                                                                 #   164/194
POPS TF@write                                                                   #   165/194
WRITE TF@write                                                                  #   166/194
PUSHS string@\010                                                               #   167/194
CREATEFRAME                                                                     #   168/194
DEFVAR TF@write                                                                 #   169/194
POPS TF@write                                                                   #   170/194
WRITE TF@write                                                                  #   171/194
WRITE string@?\032                                                              #   174/194
READ LF@d float                                                                 #   175/194
PUSHS LF@d                                                                      #   177/194
PUSHS int@20                                                                    #   178/194
INT2FLOATS                                                                      #   179/194
FLOAT2R2EINTS                                                                   #   180/194
CALL $taylor_log                                                                #   181/194
POPS LF@d                                                                       #   182/194
PUSHS LF@d                                                                      #   184/194
CREATEFRAME                                                                     #   185/194
DEFVAR TF@write                                                                 #   186/194
POPS TF@write                                                                   #   187/194
WRITE TF@write                                                                  #   188/194
PUSHS string@\010                                                               #   189/194
CREATEFRAME                                                                     #   190/194
DEFVAR TF@write                                                                 #   191/194
POPS TF@write                                                                   #   192/194
WRITE TF@write                                                                  #   193/194

