# 2017-12-04 23:21:46.850399
# SECTION: 96_programs
# TEST: 05
# INFO: Print biggest number from three numbers
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 21 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: LF@c
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@c()
# Executing instruction: IWRITE at line: 27 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 28 with following arguments:
# Dest: LF@a=0(int)
# Executing instruction: IWRITE at line: 30 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 31 with following arguments:
# Dest: LF@b=0(int)
# Executing instruction: IWRITE at line: 33 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 34 with following arguments:
# Dest: LF@c=0(int)
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@c=125(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 38 with following arguments:
# Arg1: Stack@=125(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: LF@b=150(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 40 with following arguments:
# Arg1: Stack@=150(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 41 with following arguments:
# Arg1: Stack@=125(double)
# Arg2: Stack@=150(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 43 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 77 with following arguments:
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@b=150(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=150(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 81 with following arguments:
# Arg1: Stack@=150(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 82 with following arguments:
# Executing instruction: IDEFVAR at line: 83 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 84 with following arguments:
# Arg1: Stack@=150(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 85 with following arguments:
# Arg1: TF@write=150(int)
# Executing instruction: ILABEL at line: 87 with following arguments:
# Executing instruction: IGROOT at line: 91 with following arguments:
# I am Groot at 91 (199).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 100
# 150
# 125
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 199 (64+135)
# GROOT: 199
# 
#   1: ' Print biggest number from three numbers
#   2: scope
#   3:     
#   4:    dim a as integer
#   5:    dim b as integer
#   6:    dim c as integer
#   7:    
#   8:    input a
#   9:    input b
#  10:    input c
#  11:    
#  12:    if c > b then
#  13:         if c > a then
#  14:             print c;
#  15:         else
#  16:             print a;
#  17:         end if
#  18:    else
#  19:         print b;
#  20:    end if
#  21:     
#  22: end scope

########################################

.IFJcode17                                                                      #     1/89
DEFVAR GF@$str1                                                                 #     2/89
DEFVAR GF@$str2                                                                 #     3/89
DEFVAR GF@$num1                                                                 #     4/89
DEFVAR GF@$num2                                                                 #     5/89
DEFVAR GF@$num3                                                                 #     6/89
DEFVAR GF@$bool1                                                                #     7/89
DEFVAR GF@$counter                                                              #     8/89
DEFVAR GF@$char                                                                 #     9/89
JUMP $$main                                                                     #    10/89
LABEL $$main                                                                    #    12/89
CREATEFRAME                                                                     #    13/89
PUSHFRAME                                                                       #    14/89
DEFVAR LF@a                                                                     #    17/89
MOVE LF@a int@0                                                                 #    18/89
DEFVAR LF@b                                                                     #    20/89
MOVE LF@b int@0                                                                 #    21/89
DEFVAR LF@c                                                                     #    23/89
MOVE LF@c int@0                                                                 #    24/89
WRITE string@?\032                                                              #    27/89
READ LF@a int                                                                   #    28/89
WRITE string@?\032                                                              #    30/89
READ LF@b int                                                                   #    31/89
WRITE string@?\032                                                              #    33/89
READ LF@c int                                                                   #    34/89
PUSHS LF@c                                                                      #    37/89
INT2FLOATS                                                                      #    38/89
PUSHS LF@b                                                                      #    39/89
INT2FLOATS                                                                      #    40/89
GTS                                                                             #    41/89
PUSHS bool@true                                                                 #    42/89
JUMPIFNEQS &else12                                                              #    43/89
PUSHS LF@c                                                                      #    46/89
INT2FLOATS                                                                      #    47/89
PUSHS LF@a                                                                      #    48/89
INT2FLOATS                                                                      #    49/89
GTS                                                                             #    50/89
PUSHS bool@true                                                                 #    51/89
JUMPIFNEQS &else13                                                              #    52/89
PUSHS LF@c                                                                      #    55/89
INT2FLOATS                                                                      #    56/89
FLOAT2R2EINTS                                                                   #    57/89
CREATEFRAME                                                                     #    58/89
DEFVAR TF@write                                                                 #    59/89
POPS TF@write                                                                   #    60/89
WRITE TF@write                                                                  #    61/89
JUMP &endif13                                                                   #    63/89
LABEL &else13                                                                   #    64/89
PUSHS LF@a                                                                      #    66/89
INT2FLOATS                                                                      #    67/89
FLOAT2R2EINTS                                                                   #    68/89
CREATEFRAME                                                                     #    69/89
DEFVAR TF@write                                                                 #    70/89
POPS TF@write                                                                   #    71/89
WRITE TF@write                                                                  #    72/89
LABEL &endif13                                                                  #    74/89
JUMP &endif12                                                                   #    76/89
LABEL &else12                                                                   #    77/89
PUSHS LF@b                                                                      #    79/89
INT2FLOATS                                                                      #    80/89
FLOAT2R2EINTS                                                                   #    81/89
CREATEFRAME                                                                     #    82/89
DEFVAR TF@write                                                                 #    83/89
POPS TF@write                                                                   #    84/89
WRITE TF@write                                                                  #    85/89
LABEL &endif12                                                                  #    87/89

