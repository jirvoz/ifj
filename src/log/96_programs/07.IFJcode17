# 2017-12-04 23:21:46.913200
# SECTION: 96_programs
# TEST: 07
# INFO: Draw a pyramide
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=Enter number of rows
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 17 with following arguments:
# Executing instruction: IDEFVAR at line: 18 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 19 with following arguments:
# Arg1: Stack@=Enter number of rows
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 20 with following arguments:
# Arg1: TF@write=Enter number of rows
# (string)
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@rows
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@rows()
# Executing instruction: IWRITE at line: 25 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 26 with following arguments:
# Dest: LF@rows=0(int)
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 30 with following arguments:
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 33 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: LF@i
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 38 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 39 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@i()
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: LF@j
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 44 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@j()
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@i=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 54 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@j=1(int)
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 93 with following arguments:
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 96 with following arguments:
# Executing instruction: IDEFVAR at line: 97 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 98 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 99 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 105 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@i=1(int)
# Executing instruction: IJUMP at line: 109 with following arguments:
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@i=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 54 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@j=2(int)
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=2(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 93 with following arguments:
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 96 with following arguments:
# Executing instruction: IDEFVAR at line: 97 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 98 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 99 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 105 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@i=2(int)
# Executing instruction: IJUMP at line: 109 with following arguments:
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 54 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@j=3(int)
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=2(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=3(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 93 with following arguments:
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 96 with following arguments:
# Executing instruction: IDEFVAR at line: 97 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 98 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 99 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 105 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@i=3(int)
# Executing instruction: IJUMP at line: 109 with following arguments:
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 54 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@j=4(int)
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=2(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=3(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=4(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 93 with following arguments:
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 96 with following arguments:
# Executing instruction: IDEFVAR at line: 97 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 98 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 99 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 105 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@i=4(int)
# Executing instruction: IJUMP at line: 109 with following arguments:
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 54 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@j=5(int)
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=2(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=3(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=4(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=5(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 93 with following arguments:
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 96 with following arguments:
# Executing instruction: IDEFVAR at line: 97 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 98 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 99 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 105 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@i=5(int)
# Executing instruction: IJUMP at line: 109 with following arguments:
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 54 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@j=6(int)
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=2(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=3(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=4(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=5(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=6(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=6(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 93 with following arguments:
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 96 with following arguments:
# Executing instruction: IDEFVAR at line: 97 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 98 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 99 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 105 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@i=6(int)
# Executing instruction: IJUMP at line: 109 with following arguments:
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 54 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@j=7(int)
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=2(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=3(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=4(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=5(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=6(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=6(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=7(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=7(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 93 with following arguments:
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 96 with following arguments:
# Executing instruction: IDEFVAR at line: 97 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 98 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 99 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 105 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@i=7(int)
# Executing instruction: IJUMP at line: 109 with following arguments:
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 54 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@j=8(int)
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=2(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=3(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=4(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=5(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=6(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=6(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=7(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=7(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=8(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=8(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@j=8(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 93 with following arguments:
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 96 with following arguments:
# Executing instruction: IDEFVAR at line: 97 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 98 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 99 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 105 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@i=8(int)
# Executing instruction: IJUMP at line: 109 with following arguments:
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 54 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@j=9(int)
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=2(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=3(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=4(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=5(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=6(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=6(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=7(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=7(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=8(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=8(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@j=8(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=9(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=9(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@j=9(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 93 with following arguments:
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 96 with following arguments:
# Executing instruction: IDEFVAR at line: 97 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 98 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 99 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 105 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@i=9(int)
# Executing instruction: IJUMP at line: 109 with following arguments:
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 54 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@j=10(int)
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=2(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=3(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=4(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=5(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=6(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=6(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=7(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=7(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=8(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=8(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@j=8(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=9(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=9(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@j=9(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@j=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 78 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 79 with following arguments:
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 81 with following arguments:
# Arg1: Stack@=10(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 82 with following arguments:
# Arg1: TF@write=10(int)
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@j=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 87 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 89 with following arguments:
# Arg1: Stack@=11(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 90 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@j=10(int)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@j=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=11(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 70 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 72 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 93 with following arguments:
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 96 with following arguments:
# Executing instruction: IDEFVAR at line: 97 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 98 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 99 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@i=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 102 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 105 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 106 with following arguments:
# Arg1: Stack@=11(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 107 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@i=10(int)
# Executing instruction: IJUMP at line: 109 with following arguments:
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@i=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 54 with following arguments:
# Arg1: Stack@=11(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 110 with following arguments:
# Executing instruction: IGROOT at line: 114 with following arguments:
# I am Groot at 114 (9373).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 10
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 9373 (2414+6959)
# GROOT: 9373
# 
#   1: ' Draw a pyramide
#   2: scope 
#   3:     print !"Enter number of rows\n";
#   4:     dim rows as integer
#   5:     input rows
#   6:     
#   7:     print !"\n";
#   8:     
#   9:     dim i as integer = 1
#  10:     dim j as integer = 1
#  11:     
#  12:     do while i <= rows
#  13:         j = 1
#  14:         do while j <= i
#  15:         
#  16:         
#  17:             print j;
#  18:             j = j + 1
#  19:         loop
#  20:         print !"\n";
#  21:         i = i + 1
#  22:     loop
#  23:     
#  24: end scope
#  25:     

########################################

.IFJcode17                                                                      #     1/112
DEFVAR GF@$str1                                                                 #     2/112
DEFVAR GF@$str2                                                                 #     3/112
DEFVAR GF@$num1                                                                 #     4/112
DEFVAR GF@$num2                                                                 #     5/112
DEFVAR GF@$num3                                                                 #     6/112
DEFVAR GF@$bool1                                                                #     7/112
DEFVAR GF@$counter                                                              #     8/112
DEFVAR GF@$char                                                                 #     9/112
JUMP $$main                                                                     #    10/112
LABEL $$main                                                                    #    12/112
CREATEFRAME                                                                     #    13/112
PUSHFRAME                                                                       #    14/112
PUSHS string@Enter\032number\032of\032rows\010                                  #    16/112
CREATEFRAME                                                                     #    17/112
DEFVAR TF@write                                                                 #    18/112
POPS TF@write                                                                   #    19/112
WRITE TF@write                                                                  #    20/112
DEFVAR LF@rows                                                                  #    22/112
MOVE LF@rows int@0                                                              #    23/112
WRITE string@?\032                                                              #    25/112
READ LF@rows int                                                                #    26/112
PUSHS string@\010                                                               #    29/112
CREATEFRAME                                                                     #    30/112
DEFVAR TF@write                                                                 #    31/112
POPS TF@write                                                                   #    32/112
WRITE TF@write                                                                  #    33/112
DEFVAR LF@i                                                                     #    36/112
PUSHS int@1                                                                     #    37/112
INT2FLOATS                                                                      #    38/112
FLOAT2R2EINTS                                                                   #    39/112
POPS LF@i                                                                       #    40/112
DEFVAR LF@j                                                                     #    42/112
PUSHS int@1                                                                     #    43/112
INT2FLOATS                                                                      #    44/112
FLOAT2R2EINTS                                                                   #    45/112
POPS LF@j                                                                       #    46/112
LABEL &while12                                                                  #    49/112
PUSHS LF@i                                                                      #    50/112
INT2FLOATS                                                                      #    51/112
PUSHS LF@rows                                                                   #    52/112
INT2FLOATS                                                                      #    53/112
GTS                                                                             #    54/112
NOTS                                                                            #    55/112
PUSHS bool@true                                                                 #    56/112
JUMPIFNEQS &loop12                                                              #    57/112
PUSHS int@1                                                                     #    59/112
INT2FLOATS                                                                      #    60/112
FLOAT2R2EINTS                                                                   #    61/112
POPS LF@j                                                                       #    62/112
LABEL &while14                                                                  #    64/112
PUSHS LF@j                                                                      #    65/112
INT2FLOATS                                                                      #    66/112
PUSHS LF@i                                                                      #    67/112
INT2FLOATS                                                                      #    68/112
GTS                                                                             #    69/112
NOTS                                                                            #    70/112
PUSHS bool@true                                                                 #    71/112
JUMPIFNEQS &loop14                                                              #    72/112
PUSHS LF@j                                                                      #    76/112
INT2FLOATS                                                                      #    77/112
FLOAT2R2EINTS                                                                   #    78/112
CREATEFRAME                                                                     #    79/112
DEFVAR TF@write                                                                 #    80/112
POPS TF@write                                                                   #    81/112
WRITE TF@write                                                                  #    82/112
PUSHS LF@j                                                                      #    84/112
INT2FLOATS                                                                      #    85/112
PUSHS int@1                                                                     #    86/112
INT2FLOATS                                                                      #    87/112
ADDS                                                                            #    88/112
FLOAT2R2EINTS                                                                   #    89/112
POPS LF@j                                                                       #    90/112
JUMP &while14                                                                   #    92/112
LABEL &loop14                                                                   #    93/112
PUSHS string@\010                                                               #    95/112
CREATEFRAME                                                                     #    96/112
DEFVAR TF@write                                                                 #    97/112
POPS TF@write                                                                   #    98/112
WRITE TF@write                                                                  #    99/112
PUSHS LF@i                                                                      #   101/112
INT2FLOATS                                                                      #   102/112
PUSHS int@1                                                                     #   103/112
INT2FLOATS                                                                      #   104/112
ADDS                                                                            #   105/112
FLOAT2R2EINTS                                                                   #   106/112
POPS LF@i                                                                       #   107/112
JUMP &while12                                                                   #   109/112
LABEL &loop12                                                                   #   110/112

