# 2017-12-04 23:21:44.253466
# SECTION: 04_expressions
# TEST: 14
# INFO: Test for implicit conversion
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=123.457(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=123.457(double)
# Dest: LF@a=0(double)
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 25 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 29 with following arguments:
# Arg1: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 30 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: LF@b=0(int)
# Executing instruction: IDEFVAR at line: 33 with following arguments:
# Dest: LF@c
# Executing instruction: IMOVE at line: 34 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@a=123.457(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 38 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 39 with following arguments:
# Arg1: Stack@=123.457(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 42 with following arguments:
# Arg1: Stack@=56353799.505(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 44 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 45 with following arguments:
# Arg1: Stack@=123.457(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 47 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 48 with following arguments:
# Arg1: Stack@=56353799.505(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=123.457(double)
# Dest: LF@c=0(double)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@c=123.457(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 53 with following arguments:
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=123.457(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 56 with following arguments:
# Arg1: TF@write=123.457(double)
# Executing instruction: IGROOT at line: 60 with following arguments:
# I am Groot at 60 (238).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 238 (57+181)
# GROOT: 238
# 
#   1: ' Test for implicit conversion
#   2: SCOPE
#   3: 
#   4: 	dim a as double
#   5: 	a = 123.4565
#   6: 
#   7: 	dim b as integer
#   8: 	b = 456465
#   9: 
#  10: 	dim c as double
#  11: 	c = (((a * b) / b) * b) / b 
#  12: 
#  13: 	print c;
#  14: 
#  15: END SCOPE

########################################

.IFJcode17                                                                      #     1/58
DEFVAR GF@$str1                                                                 #     2/58
DEFVAR GF@$str2                                                                 #     3/58
DEFVAR GF@$num1                                                                 #     4/58
DEFVAR GF@$num2                                                                 #     5/58
DEFVAR GF@$num3                                                                 #     6/58
DEFVAR GF@$bool1                                                                #     7/58
DEFVAR GF@$counter                                                              #     8/58
DEFVAR GF@$char                                                                 #     9/58
JUMP $$main                                                                     #    10/58
LABEL $$main                                                                    #    12/58
CREATEFRAME                                                                     #    13/58
PUSHFRAME                                                                       #    14/58
DEFVAR LF@a                                                                     #    17/58
MOVE LF@a float@0                                                               #    18/58
PUSHS float@123.457                                                             #    20/58
POPS LF@a                                                                       #    21/58
DEFVAR LF@b                                                                     #    24/58
MOVE LF@b int@0                                                                 #    25/58
PUSHS int@456465                                                                #    27/58
INT2FLOATS                                                                      #    28/58
FLOAT2R2EINTS                                                                   #    29/58
POPS LF@b                                                                       #    30/58
DEFVAR LF@c                                                                     #    33/58
MOVE LF@c float@0                                                               #    34/58
PUSHS LF@a                                                                      #    36/58
PUSHS LF@b                                                                      #    37/58
INT2FLOATS                                                                      #    38/58
MULS                                                                            #    39/58
PUSHS LF@b                                                                      #    40/58
INT2FLOATS                                                                      #    41/58
DIVS                                                                            #    42/58
PUSHS LF@b                                                                      #    43/58
INT2FLOATS                                                                      #    44/58
MULS                                                                            #    45/58
PUSHS LF@b                                                                      #    46/58
INT2FLOATS                                                                      #    47/58
DIVS                                                                            #    48/58
POPS LF@c                                                                       #    49/58
PUSHS LF@c                                                                      #    52/58
CREATEFRAME                                                                     #    53/58
DEFVAR TF@write                                                                 #    54/58
POPS TF@write                                                                   #    55/58
WRITE TF@write                                                                  #    56/58

