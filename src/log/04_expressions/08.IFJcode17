# 2017-12-04 23:21:44.223195
# SECTION: 04_expressions
# TEST: 08
# INFO: divide integer and doubles
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 18 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 19 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 20 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 24 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 25 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@b()
# Executing instruction: IDEFVAR at line: 28 with following arguments:
# Dest: LF@c
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=8(double)
# Dest: LF@c()
# Executing instruction: IDEFVAR at line: 33 with following arguments:
# Dest: LF@d
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 35 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 36 with following arguments:
# Arg1: Stack@=2(double)
# Dest: LF@d()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: LF@c=8(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@d=2(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 41 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 42 with following arguments:
# Executing instruction: IDEFVAR at line: 43 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 44 with following arguments:
# Arg1: Stack@=4(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 45 with following arguments:
# Arg1: TF@write=4(double)
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 47 with following arguments:
# Executing instruction: IDEFVAR at line: 48 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 50 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@a=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=2(double)
# Dest: GF@$num1()
# Executing instruction: IFLOAT2R2EINTS at line: 56 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: GF@$num1=2(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 59 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 61 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 62 with following arguments:
# Arg1: Stack@=4.5(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 63 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 64 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 65 with following arguments:
# Executing instruction: IDEFVAR at line: 66 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 68 with following arguments:
# Arg1: TF@write=4(int)
# Executing instruction: IGROOT at line: 71 with following arguments:
# I am Groot at 71 (315).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 315 (78+237)
# GROOT: 315
# 
#   1: ' divide integer and doubles
#   2: scope
#   3:     dim a as integer = 9
#   4:     dim b as integer = 2
#   5:     dim c as double = 8
#   6:     dim d as double = 2
#   7: 
#   8:     print c / d; !"\n"; a \ b;
#   9: end scope

########################################

.IFJcode17                                                                      #     1/69
DEFVAR GF@$str1                                                                 #     2/69
DEFVAR GF@$str2                                                                 #     3/69
DEFVAR GF@$num1                                                                 #     4/69
DEFVAR GF@$num2                                                                 #     5/69
DEFVAR GF@$num3                                                                 #     6/69
DEFVAR GF@$bool1                                                                #     7/69
DEFVAR GF@$counter                                                              #     8/69
DEFVAR GF@$char                                                                 #     9/69
JUMP $$main                                                                     #    10/69
LABEL $$main                                                                    #    12/69
CREATEFRAME                                                                     #    13/69
PUSHFRAME                                                                       #    14/69
DEFVAR LF@a                                                                     #    16/69
PUSHS int@9                                                                     #    17/69
INT2FLOATS                                                                      #    18/69
FLOAT2R2EINTS                                                                   #    19/69
POPS LF@a                                                                       #    20/69
DEFVAR LF@b                                                                     #    22/69
PUSHS int@2                                                                     #    23/69
INT2FLOATS                                                                      #    24/69
FLOAT2R2EINTS                                                                   #    25/69
POPS LF@b                                                                       #    26/69
DEFVAR LF@c                                                                     #    28/69
PUSHS int@8                                                                     #    29/69
INT2FLOATS                                                                      #    30/69
POPS LF@c                                                                       #    31/69
DEFVAR LF@d                                                                     #    33/69
PUSHS int@2                                                                     #    34/69
INT2FLOATS                                                                      #    35/69
POPS LF@d                                                                       #    36/69
PUSHS LF@c                                                                      #    39/69
PUSHS LF@d                                                                      #    40/69
DIVS                                                                            #    41/69
CREATEFRAME                                                                     #    42/69
DEFVAR TF@write                                                                 #    43/69
POPS TF@write                                                                   #    44/69
WRITE TF@write                                                                  #    45/69
PUSHS string@\010                                                               #    46/69
CREATEFRAME                                                                     #    47/69
DEFVAR TF@write                                                                 #    48/69
POPS TF@write                                                                   #    49/69
WRITE TF@write                                                                  #    50/69
PUSHS LF@a                                                                      #    51/69
INT2FLOATS                                                                      #    52/69
PUSHS LF@b                                                                      #    53/69
INT2FLOATS                                                                      #    54/69
POPS GF@$num1                                                                   #    55/69
FLOAT2R2EINTS                                                                   #    56/69
INT2FLOATS                                                                      #    57/69
PUSHS GF@$num1                                                                  #    58/69
FLOAT2R2EINTS                                                                   #    59/69
INT2FLOATS                                                                      #    60/69
DIVS                                                                            #    61/69
FLOAT2INTS                                                                      #    62/69
INT2FLOATS                                                                      #    63/69
FLOAT2R2EINTS                                                                   #    64/69
CREATEFRAME                                                                     #    65/69
DEFVAR TF@write                                                                 #    66/69
POPS TF@write                                                                   #    67/69
WRITE TF@write                                                                  #    68/69

