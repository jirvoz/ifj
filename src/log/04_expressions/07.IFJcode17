# 2017-12-04 23:21:44.214309
# SECTION: 04_expressions
# TEST: 07
# INFO: multiple operations with different priorities II
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 18 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 19 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 20 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 24 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 25 with following arguments:
# Arg1: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@b=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 32 with following arguments:
# Arg1: Stack@=16(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 34 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 35 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@b=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 38 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: Const@=100(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 40 with following arguments:
# Arg1: Stack@=100(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 41 with following arguments:
# Arg1: Stack@=-6(double)
# Arg2: Stack@=100(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 42 with following arguments:
# Arg1: Stack@=94(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=94(int)
# Dest: LF@a=2(int)
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@a=94(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=94(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 47 with following arguments:
# Arg1: Stack@=94(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IDEFVAR at line: 49 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=94(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 51 with following arguments:
# Arg1: TF@write=94(int)
# Executing instruction: IGROOT at line: 54 with following arguments:
# I am Groot at 54 (242).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 242 (59+183)
# GROOT: 242
# 
#   1: ' multiple operations with different priorities II
#   2: scope
#   3:     dim a as integer = 2
#   4:     dim b as integer = 16
#   5:     a = b / a + a - b + 100
#   6:     print a;
#   7: end scope

########################################

.IFJcode17                                                                      #     1/52
DEFVAR GF@$str1                                                                 #     2/52
DEFVAR GF@$str2                                                                 #     3/52
DEFVAR GF@$num1                                                                 #     4/52
DEFVAR GF@$num2                                                                 #     5/52
DEFVAR GF@$num3                                                                 #     6/52
DEFVAR GF@$bool1                                                                #     7/52
DEFVAR GF@$counter                                                              #     8/52
DEFVAR GF@$char                                                                 #     9/52
JUMP $$main                                                                     #    10/52
LABEL $$main                                                                    #    12/52
CREATEFRAME                                                                     #    13/52
PUSHFRAME                                                                       #    14/52
DEFVAR LF@a                                                                     #    16/52
PUSHS int@2                                                                     #    17/52
INT2FLOATS                                                                      #    18/52
FLOAT2R2EINTS                                                                   #    19/52
POPS LF@a                                                                       #    20/52
DEFVAR LF@b                                                                     #    22/52
PUSHS int@16                                                                    #    23/52
INT2FLOATS                                                                      #    24/52
FLOAT2R2EINTS                                                                   #    25/52
POPS LF@b                                                                       #    26/52
PUSHS LF@b                                                                      #    28/52
INT2FLOATS                                                                      #    29/52
PUSHS LF@a                                                                      #    30/52
INT2FLOATS                                                                      #    31/52
DIVS                                                                            #    32/52
PUSHS LF@a                                                                      #    33/52
INT2FLOATS                                                                      #    34/52
ADDS                                                                            #    35/52
PUSHS LF@b                                                                      #    36/52
INT2FLOATS                                                                      #    37/52
SUBS                                                                            #    38/52
PUSHS int@100                                                                   #    39/52
INT2FLOATS                                                                      #    40/52
ADDS                                                                            #    41/52
FLOAT2R2EINTS                                                                   #    42/52
POPS LF@a                                                                       #    43/52
PUSHS LF@a                                                                      #    45/52
INT2FLOATS                                                                      #    46/52
FLOAT2R2EINTS                                                                   #    47/52
CREATEFRAME                                                                     #    48/52
DEFVAR TF@write                                                                 #    49/52
POPS TF@write                                                                   #    50/52
WRITE TF@write                                                                  #    51/52

