# 2017-12-04 23:21:44.288651
# SECTION: 04_expressions
# TEST: 17
# INFO: Comment inside expression
# REQUIRED EXTENSIONS: FUNEXP
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: ICREATEFRAME at line: 28 with following arguments:
# Executing instruction: IPUSHFRAME at line: 29 with following arguments:
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 33 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 36 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: ICALL at line: 37 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=39(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 18 with following arguments:
# Arg1: Stack@=39(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 19 with following arguments:
# Arg1: Stack@=39(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 20 with following arguments:
# Executing instruction: IRETURN at line: 21 with following arguments:
# Executing instruction: IINT2FLOATS at line: 38 with following arguments:
# Arg1: Stack@=39(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 39 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=39(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 40 with following arguments:
# Arg1: Stack@=42(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@a=0(int)
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 44 with following arguments:
# Arg1: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 45 with following arguments:
# Arg1: Stack@=42(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 46 with following arguments:
# Executing instruction: IDEFVAR at line: 47 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 48 with following arguments:
# Arg1: Stack@=42(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 49 with following arguments:
# Arg1: TF@write=42(int)
# Executing instruction: IGROOT at line: 53 with following arguments:
# I am Groot at 53 (161).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 161 (54+107)
# GROOT: 161
# 
#   1: ' Comment inside expression
#   2: 
#   3: function foo() as integer
#   4: 	return 39
#   5: end function
#   6: 
#   7: scope
#   8: 	
#   9: 	dim a as integer
#  10: 	a = 3 + /'toto je sčítání'/ foo()
#  11: 	print a;
#  12: 
#  13: end scope

########################################

.IFJcode17                                                                      #     1/51
DEFVAR GF@$str1                                                                 #     2/51
DEFVAR GF@$str2                                                                 #     3/51
DEFVAR GF@$num1                                                                 #     4/51
DEFVAR GF@$num2                                                                 #     5/51
DEFVAR GF@$num3                                                                 #     6/51
DEFVAR GF@$bool1                                                                #     7/51
DEFVAR GF@$counter                                                              #     8/51
DEFVAR GF@$char                                                                 #     9/51
JUMP $$main                                                                     #    10/51
LABEL $foo                                                                      #    12/51
CREATEFRAME                                                                     #    13/51
PUSHFRAME                                                                       #    14/51
PUSHS int@39                                                                    #    17/51
INT2FLOATS                                                                      #    18/51
FLOAT2R2EINTS                                                                   #    19/51
POPFRAME                                                                        #    20/51
RETURN                                                                          #    21/51
PUSHS int@0                                                                     #    23/51
POPFRAME                                                                        #    24/51
RETURN                                                                          #    25/51
LABEL $$main                                                                    #    27/51
CREATEFRAME                                                                     #    28/51
PUSHFRAME                                                                       #    29/51
DEFVAR LF@a                                                                     #    32/51
MOVE LF@a int@0                                                                 #    33/51
PUSHS int@3                                                                     #    35/51
INT2FLOATS                                                                      #    36/51
CALL $foo                                                                       #    37/51
INT2FLOATS                                                                      #    38/51
ADDS                                                                            #    39/51
FLOAT2R2EINTS                                                                   #    40/51
POPS LF@a                                                                       #    41/51
PUSHS LF@a                                                                      #    43/51
INT2FLOATS                                                                      #    44/51
FLOAT2R2EINTS                                                                   #    45/51
CREATEFRAME                                                                     #    46/51
DEFVAR TF@write                                                                 #    47/51
POPS TF@write                                                                   #    48/51
WRITE TF@write                                                                  #    49/51

