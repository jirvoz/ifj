# 2017-12-04 23:21:44.320242
# SECTION: 04_expressions
# TEST: 22
# INFO: Doubles with another format
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=10.8(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 19 with following arguments:
# Arg1: Stack@=10.8(double)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=0.67432(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 23 with following arguments:
# Arg1: Stack@=0.67432(double)
# Dest: LF@b()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@c
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=6743.2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=6743.2(double)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@a=10.8(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: LF@b=0.67432(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 32 with following arguments:
# Arg1: Stack@=10.8(double)
# Arg2: Stack@=0.67432(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@c=6743.2(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 34 with following arguments:
# Arg1: Stack@=11.47432(double)
# Arg2: Stack@=6743.2(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 35 with following arguments:
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=-6731.72568(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 38 with following arguments:
# Arg1: TF@write=-6731.72568(double)
# Executing instruction: IGROOT at line: 42 with following arguments:
# I am Groot at 42 (155).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 155 (40+115)
# GROOT: 155
# 
#   1: ' Doubles with another format
#   2: scope
#   3: 
#   4: dim a as double = 10.8
#   5: dim b as double = 67.432e-2
#   6: dim c as double = 67.432e2
#   7: 
#   8: print a + b - c;
#   9: 
#  10: end scope

########################################

.IFJcode17                                                                      #     1/40
DEFVAR GF@$str1                                                                 #     2/40
DEFVAR GF@$str2                                                                 #     3/40
DEFVAR GF@$num1                                                                 #     4/40
DEFVAR GF@$num2                                                                 #     5/40
DEFVAR GF@$num3                                                                 #     6/40
DEFVAR GF@$bool1                                                                #     7/40
DEFVAR GF@$counter                                                              #     8/40
DEFVAR GF@$char                                                                 #     9/40
JUMP $$main                                                                     #    10/40
LABEL $$main                                                                    #    12/40
CREATEFRAME                                                                     #    13/40
PUSHFRAME                                                                       #    14/40
DEFVAR LF@a                                                                     #    17/40
PUSHS float@10.8                                                                #    18/40
POPS LF@a                                                                       #    19/40
DEFVAR LF@b                                                                     #    21/40
PUSHS float@0.67432                                                             #    22/40
POPS LF@b                                                                       #    23/40
DEFVAR LF@c                                                                     #    25/40
PUSHS float@6743.2                                                              #    26/40
POPS LF@c                                                                       #    27/40
PUSHS LF@a                                                                      #    30/40
PUSHS LF@b                                                                      #    31/40
ADDS                                                                            #    32/40
PUSHS LF@c                                                                      #    33/40
SUBS                                                                            #    34/40
CREATEFRAME                                                                     #    35/40
DEFVAR TF@write                                                                 #    36/40
POPS TF@write                                                                   #    37/40
WRITE TF@write                                                                  #    38/40

