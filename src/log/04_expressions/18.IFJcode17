# 2017-12-04 23:21:44.296810
# SECTION: 04_expressions
# TEST: 18
# INFO: comments inside expressions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: ICREATEFRAME at line: 28 with following arguments:
# Executing instruction: IPUSHFRAME at line: 29 with following arguments:
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 33 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: ICALL at line: 35 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=39(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 18 with following arguments:
# Arg1: Stack@=39(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 19 with following arguments:
# Arg1: Stack@=39(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 20 with following arguments:
# Executing instruction: IRETURN at line: 21 with following arguments:
# Executing instruction: IINT2FLOATS at line: 36 with following arguments:
# Arg1: Stack@=39(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 37 with following arguments:
# Arg1: Stack@=39(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=39(int)
# Dest: LF@a=0(int)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=39(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=39(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 43 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 44 with following arguments:
# Arg1: Stack@=39(double)
# Arg2: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 47 with following arguments:
# Arg1: Stack@=42(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 48 with following arguments:
# Arg1: Stack@=48(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=48(int)
# Dest: LF@a=39(int)
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@a=48(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=48(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 55 with following arguments:
# Arg1: Stack@=48(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 56 with following arguments:
# Arg1: Stack@=96(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=96(int)
# Dest: LF@a=48(int)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@a=96(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=96(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 61 with following arguments:
# Arg1: Stack@=96(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 62 with following arguments:
# Executing instruction: IDEFVAR at line: 63 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 64 with following arguments:
# Arg1: Stack@=96(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 65 with following arguments:
# Arg1: TF@write=96(int)
# Executing instruction: IGROOT at line: 69 with following arguments:
# I am Groot at 69 (245).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 245 (72+173)
# GROOT: 245
# 
#   1: ' comments inside expressions
#   2: 
#   3: function foo() as integer
#   4: 	return 39
#   5: end function
#   6: 
#   7: scope
#   8: 	
#   9: 	dim a as integer
#  10: 	a = foo()
#  11: 	a = a + 3 + 6' comment
#  12: 	a = a /' '/ * /' '/ 2 ' + 8
#  13: 	print a;
#  14: 
#  15: end scope

########################################

.IFJcode17                                                                      #     1/67
DEFVAR GF@$str1                                                                 #     2/67
DEFVAR GF@$str2                                                                 #     3/67
DEFVAR GF@$num1                                                                 #     4/67
DEFVAR GF@$num2                                                                 #     5/67
DEFVAR GF@$num3                                                                 #     6/67
DEFVAR GF@$bool1                                                                #     7/67
DEFVAR GF@$counter                                                              #     8/67
DEFVAR GF@$char                                                                 #     9/67
JUMP $$main                                                                     #    10/67
LABEL $foo                                                                      #    12/67
CREATEFRAME                                                                     #    13/67
PUSHFRAME                                                                       #    14/67
PUSHS int@39                                                                    #    17/67
INT2FLOATS                                                                      #    18/67
FLOAT2R2EINTS                                                                   #    19/67
POPFRAME                                                                        #    20/67
RETURN                                                                          #    21/67
PUSHS int@0                                                                     #    23/67
POPFRAME                                                                        #    24/67
RETURN                                                                          #    25/67
LABEL $$main                                                                    #    27/67
CREATEFRAME                                                                     #    28/67
PUSHFRAME                                                                       #    29/67
DEFVAR LF@a                                                                     #    32/67
MOVE LF@a int@0                                                                 #    33/67
CALL $foo                                                                       #    35/67
INT2FLOATS                                                                      #    36/67
FLOAT2R2EINTS                                                                   #    37/67
POPS LF@a                                                                       #    38/67
PUSHS LF@a                                                                      #    40/67
INT2FLOATS                                                                      #    41/67
PUSHS int@3                                                                     #    42/67
INT2FLOATS                                                                      #    43/67
ADDS                                                                            #    44/67
PUSHS int@6                                                                     #    45/67
INT2FLOATS                                                                      #    46/67
ADDS                                                                            #    47/67
FLOAT2R2EINTS                                                                   #    48/67
POPS LF@a                                                                       #    49/67
PUSHS LF@a                                                                      #    51/67
INT2FLOATS                                                                      #    52/67
PUSHS int@2                                                                     #    53/67
INT2FLOATS                                                                      #    54/67
MULS                                                                            #    55/67
FLOAT2R2EINTS                                                                   #    56/67
POPS LF@a                                                                       #    57/67
PUSHS LF@a                                                                      #    59/67
INT2FLOATS                                                                      #    60/67
FLOAT2R2EINTS                                                                   #    61/67
CREATEFRAME                                                                     #    62/67
DEFVAR TF@write                                                                 #    63/67
POPS TF@write                                                                   #    64/67
WRITE TF@write                                                                  #    65/67

