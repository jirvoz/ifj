# 2017-12-04 23:21:44.661341
# SECTION: 04_expressions
# TEST: 40
# INFO: Double implicit conversion
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@x
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=15.3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=15.3(double)
# Dest: LF@x()
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@y
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: Const@=3.6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 22 with following arguments:
# Arg1: Stack@=3.6(double)
# Dest: LF@y()
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: LF@z
# Executing instruction: IMOVE at line: 25 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@z()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@x=15.3(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@y=3.6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 29 with following arguments:
# Arg1: Stack@=3.6(double)
# Dest: GF@$num1()
# Executing instruction: IFLOAT2R2EINTS at line: 30 with following arguments:
# Arg1: Stack@=15.3(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=15(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: GF@$num1=3.6(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 33 with following arguments:
# Arg1: Stack@=3.6(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 34 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 35 with following arguments:
# Arg1: Stack@=15(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 36 with following arguments:
# Arg1: Stack@=3.75(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=3(double)
# Dest: LF@z=0(double)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@z=3(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 41 with following arguments:
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=3(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 44 with following arguments:
# Arg1: TF@write=3(double)
# Executing instruction: IGROOT at line: 48 with following arguments:
# I am Groot at 48 (192).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 192 (45+147)
# GROOT: 192
# 
#   1: ' Double implicit conversion
#   2: scope
#   3: 	Dim x as double = 15.3
#   4: 	DIM y as double = 3.6
#   5: 	DIM z as double
#   6: 	z = x \ y
#   7: 	print z;
#   8: 
#   9: end scope

########################################

.IFJcode17                                                                      #     1/46
DEFVAR GF@$str1                                                                 #     2/46
DEFVAR GF@$str2                                                                 #     3/46
DEFVAR GF@$num1                                                                 #     4/46
DEFVAR GF@$num2                                                                 #     5/46
DEFVAR GF@$num3                                                                 #     6/46
DEFVAR GF@$bool1                                                                #     7/46
DEFVAR GF@$counter                                                              #     8/46
DEFVAR GF@$char                                                                 #     9/46
JUMP $$main                                                                     #    10/46
LABEL $$main                                                                    #    12/46
CREATEFRAME                                                                     #    13/46
PUSHFRAME                                                                       #    14/46
DEFVAR LF@x                                                                     #    16/46
PUSHS float@15.3                                                                #    17/46
POPS LF@x                                                                       #    18/46
DEFVAR LF@y                                                                     #    20/46
PUSHS float@3.6                                                                 #    21/46
POPS LF@y                                                                       #    22/46
DEFVAR LF@z                                                                     #    24/46
MOVE LF@z float@0                                                               #    25/46
PUSHS LF@x                                                                      #    27/46
PUSHS LF@y                                                                      #    28/46
POPS GF@$num1                                                                   #    29/46
FLOAT2R2EINTS                                                                   #    30/46
INT2FLOATS                                                                      #    31/46
PUSHS GF@$num1                                                                  #    32/46
FLOAT2R2EINTS                                                                   #    33/46
INT2FLOATS                                                                      #    34/46
DIVS                                                                            #    35/46
FLOAT2INTS                                                                      #    36/46
INT2FLOATS                                                                      #    37/46
POPS LF@z                                                                       #    38/46
PUSHS LF@z                                                                      #    40/46
CREATEFRAME                                                                     #    41/46
DEFVAR TF@write                                                                 #    42/46
POPS TF@write                                                                   #    43/46
WRITE TF@write                                                                  #    44/46

