# 2017-12-04 23:21:44.997166
# SECTION: 06_loops
# TEST: 04
# INFO: nested and mutliple while loop
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 17 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=123.789(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 25 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=123.789(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=-123.789(double)
# Dest: LF@a=0(double)
# Executing instruction: ILABEL at line: 28 with following arguments:
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@a=-123.789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: Const@=236.741(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 33 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=236.741(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 34 with following arguments:
# Arg1: Stack@=-123.789(double)
# Arg2: Stack@=-236.741(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 36 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 39 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=9(double)
# Dest: LF@b=0(double)
# Executing instruction: ILABEL at line: 42 with following arguments:
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@b=9(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 45 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 47 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 50 with following arguments:
# Arg1: Stack@=63(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 51 with following arguments:
# Arg1: Stack@=63(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 52 with following arguments:
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 55 with following arguments:
# Arg1: TF@write=63(int)
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@b=9(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 59 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 60 with following arguments:
# Arg1: Stack@=7.877(double)
# Dest: LF@b=9(double)
# Executing instruction: IJUMP at line: 62 with following arguments:
# Executing instruction: ILABEL at line: 42 with following arguments:
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@b=7.877(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 45 with following arguments:
# Arg1: Stack@=7.877(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 47 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 50 with following arguments:
# Arg1: Stack@=63(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 51 with following arguments:
# Arg1: Stack@=63(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 52 with following arguments:
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 55 with following arguments:
# Arg1: TF@write=63(int)
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@b=7.877(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 59 with following arguments:
# Arg1: Stack@=7.877(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 60 with following arguments:
# Arg1: Stack@=6.754(double)
# Dest: LF@b=7.877(double)
# Executing instruction: IJUMP at line: 62 with following arguments:
# Executing instruction: ILABEL at line: 42 with following arguments:
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@b=6.754(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 45 with following arguments:
# Arg1: Stack@=6.754(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 47 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 50 with following arguments:
# Arg1: Stack@=63(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 51 with following arguments:
# Arg1: Stack@=63(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 52 with following arguments:
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 55 with following arguments:
# Arg1: TF@write=63(int)
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@b=6.754(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 59 with following arguments:
# Arg1: Stack@=6.754(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 60 with following arguments:
# Arg1: Stack@=5.630999999999999(double)
# Dest: LF@b=6.754(double)
# Executing instruction: IJUMP at line: 62 with following arguments:
# Executing instruction: ILABEL at line: 42 with following arguments:
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@b=5.630999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 45 with following arguments:
# Arg1: Stack@=5.630999999999999(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 47 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 50 with following arguments:
# Arg1: Stack@=63(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 51 with following arguments:
# Arg1: Stack@=63(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 52 with following arguments:
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 55 with following arguments:
# Arg1: TF@write=63(int)
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@b=5.630999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 59 with following arguments:
# Arg1: Stack@=5.630999999999999(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 60 with following arguments:
# Arg1: Stack@=4.507999999999999(double)
# Dest: LF@b=5.630999999999999(double)
# Executing instruction: IJUMP at line: 62 with following arguments:
# Executing instruction: ILABEL at line: 42 with following arguments:
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@b=4.507999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 45 with following arguments:
# Arg1: Stack@=4.507999999999999(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 47 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 50 with following arguments:
# Arg1: Stack@=63(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 51 with following arguments:
# Arg1: Stack@=63(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 52 with following arguments:
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 55 with following arguments:
# Arg1: TF@write=63(int)
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@b=4.507999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 59 with following arguments:
# Arg1: Stack@=4.507999999999999(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 60 with following arguments:
# Arg1: Stack@=3.384999999999999(double)
# Dest: LF@b=4.507999999999999(double)
# Executing instruction: IJUMP at line: 62 with following arguments:
# Executing instruction: ILABEL at line: 42 with following arguments:
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@b=3.384999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 45 with following arguments:
# Arg1: Stack@=3.384999999999999(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 47 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 50 with following arguments:
# Arg1: Stack@=63(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 51 with following arguments:
# Arg1: Stack@=63(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 52 with following arguments:
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 54 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 55 with following arguments:
# Arg1: TF@write=63(int)
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@b=3.384999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 59 with following arguments:
# Arg1: Stack@=3.384999999999999(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 60 with following arguments:
# Arg1: Stack@=2.261999999999999(double)
# Dest: LF@b=3.384999999999999(double)
# Executing instruction: IJUMP at line: 62 with following arguments:
# Executing instruction: ILABEL at line: 42 with following arguments:
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@b=2.261999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 45 with following arguments:
# Arg1: Stack@=2.261999999999999(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 47 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 63 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@a=-123.789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@a=-123.789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 69 with following arguments:
# Arg1: Stack@=-123.789(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 70 with following arguments:
# Arg1: Stack@=-123.789(double)
# Arg2: Stack@=-247.578(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 71 with following arguments:
# Arg1: Stack@=-371.367(double)
# Dest: LF@a=-123.789(double)
# Executing instruction: IJUMP at line: 73 with following arguments:
# Executing instruction: ILABEL at line: 28 with following arguments:
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@a=-371.367(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: Const@=236.741(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 33 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=236.741(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 34 with following arguments:
# Arg1: Stack@=-371.367(double)
# Arg2: Stack@=-236.741(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 36 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: Const@=78(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=78(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 78 with following arguments:
# Arg1: Stack@=78(double)
# Dest: LF@a=-371.367(double)
# Executing instruction: ILABEL at line: 80 with following arguments:
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: LF@a=78(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: Const@=55(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=55(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 84 with following arguments:
# Arg1: Stack@=78(double)
# Arg2: Stack@=55(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 85 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 86 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: Const@=57(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 89 with following arguments:
# Arg1: Stack@=57(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 90 with following arguments:
# Arg1: Stack@=57(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 91 with following arguments:
# Executing instruction: IDEFVAR at line: 92 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 93 with following arguments:
# Arg1: Stack@=57(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 94 with following arguments:
# Arg1: TF@write=57(int)
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=78(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 97 with following arguments:
# Arg1: Const@=5.38(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 98 with following arguments:
# Arg1: Stack@=78(double)
# Arg2: Stack@=5.38(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 99 with following arguments:
# Arg1: Stack@=72.62(double)
# Dest: LF@a=78(double)
# Executing instruction: IJUMP at line: 101 with following arguments:
# Executing instruction: ILABEL at line: 80 with following arguments:
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: LF@a=72.62(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: Const@=55(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=55(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 84 with following arguments:
# Arg1: Stack@=72.62(double)
# Arg2: Stack@=55(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 85 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 86 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: Const@=57(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 89 with following arguments:
# Arg1: Stack@=57(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 90 with following arguments:
# Arg1: Stack@=57(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 91 with following arguments:
# Executing instruction: IDEFVAR at line: 92 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 93 with following arguments:
# Arg1: Stack@=57(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 94 with following arguments:
# Arg1: TF@write=57(int)
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=72.62(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 97 with following arguments:
# Arg1: Const@=5.38(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 98 with following arguments:
# Arg1: Stack@=72.62(double)
# Arg2: Stack@=5.38(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 99 with following arguments:
# Arg1: Stack@=67.24000000000001(double)
# Dest: LF@a=72.62(double)
# Executing instruction: IJUMP at line: 101 with following arguments:
# Executing instruction: ILABEL at line: 80 with following arguments:
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: LF@a=67.24000000000001(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: Const@=55(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=55(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 84 with following arguments:
# Arg1: Stack@=67.24000000000001(double)
# Arg2: Stack@=55(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 85 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 86 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: Const@=57(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 89 with following arguments:
# Arg1: Stack@=57(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 90 with following arguments:
# Arg1: Stack@=57(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 91 with following arguments:
# Executing instruction: IDEFVAR at line: 92 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 93 with following arguments:
# Arg1: Stack@=57(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 94 with following arguments:
# Arg1: TF@write=57(int)
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=67.24000000000001(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 97 with following arguments:
# Arg1: Const@=5.38(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 98 with following arguments:
# Arg1: Stack@=67.24000000000001(double)
# Arg2: Stack@=5.38(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 99 with following arguments:
# Arg1: Stack@=61.86000000000001(double)
# Dest: LF@a=67.24000000000001(double)
# Executing instruction: IJUMP at line: 101 with following arguments:
# Executing instruction: ILABEL at line: 80 with following arguments:
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: LF@a=61.86000000000001(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: Const@=55(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=55(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 84 with following arguments:
# Arg1: Stack@=61.86000000000001(double)
# Arg2: Stack@=55(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 85 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 86 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: Const@=57(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 89 with following arguments:
# Arg1: Stack@=57(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 90 with following arguments:
# Arg1: Stack@=57(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 91 with following arguments:
# Executing instruction: IDEFVAR at line: 92 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 93 with following arguments:
# Arg1: Stack@=57(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 94 with following arguments:
# Arg1: TF@write=57(int)
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=61.86000000000001(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 97 with following arguments:
# Arg1: Const@=5.38(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 98 with following arguments:
# Arg1: Stack@=61.86000000000001(double)
# Arg2: Stack@=5.38(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 99 with following arguments:
# Arg1: Stack@=56.48(double)
# Dest: LF@a=61.86000000000001(double)
# Executing instruction: IJUMP at line: 101 with following arguments:
# Executing instruction: ILABEL at line: 80 with following arguments:
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: LF@a=56.48(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: Const@=55(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=55(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 84 with following arguments:
# Arg1: Stack@=56.48(double)
# Arg2: Stack@=55(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 85 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 86 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: Const@=57(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 89 with following arguments:
# Arg1: Stack@=57(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 90 with following arguments:
# Arg1: Stack@=57(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 91 with following arguments:
# Executing instruction: IDEFVAR at line: 92 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 93 with following arguments:
# Arg1: Stack@=57(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 94 with following arguments:
# Arg1: TF@write=57(int)
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@a=56.48(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 97 with following arguments:
# Arg1: Const@=5.38(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 98 with following arguments:
# Arg1: Stack@=56.48(double)
# Arg2: Stack@=5.38(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 99 with following arguments:
# Arg1: Stack@=51.1(double)
# Dest: LF@a=56.48(double)
# Executing instruction: IJUMP at line: 101 with following arguments:
# Executing instruction: ILABEL at line: 80 with following arguments:
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: LF@a=51.1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: Const@=55(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=55(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 84 with following arguments:
# Arg1: Stack@=51.1(double)
# Arg2: Stack@=55(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 85 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 86 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 102 with following arguments:
# Executing instruction: IGROOT at line: 105 with following arguments:
# I am Groot at 105 (1395).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1395 (374+1021)
# GROOT: 1395
# 
#   1: ' nested and mutliple while loop
#   2: scope
#   3: 	dim a as double
#   4: 	dim b as double
#   5: 	a = 0 - 123.789
#   6: 	do while a > (0 - 236.741)
#   7: 		b = 9
#   8: 		do while b > 3.02
#   9: 			print 63;
#  10: 			b = b - 1.123
#  11: 		loop
#  12: 		a = a + a * 2
#  13: 	loop
#  14: 	a = 78
#  15: 	do while a > 55
#  16: 		print 57;
#  17: 		a = a - 5.38
#  18: 	loop
#  19: end scope

########################################

.IFJcode17                                                                      #     1/103
DEFVAR GF@$str1                                                                 #     2/103
DEFVAR GF@$str2                                                                 #     3/103
DEFVAR GF@$num1                                                                 #     4/103
DEFVAR GF@$num2                                                                 #     5/103
DEFVAR GF@$num3                                                                 #     6/103
DEFVAR GF@$bool1                                                                #     7/103
DEFVAR GF@$counter                                                              #     8/103
DEFVAR GF@$char                                                                 #     9/103
JUMP $$main                                                                     #    10/103
LABEL $$main                                                                    #    12/103
CREATEFRAME                                                                     #    13/103
PUSHFRAME                                                                       #    14/103
DEFVAR LF@a                                                                     #    16/103
MOVE LF@a float@0                                                               #    17/103
DEFVAR LF@b                                                                     #    19/103
MOVE LF@b float@0                                                               #    20/103
PUSHS int@0                                                                     #    22/103
INT2FLOATS                                                                      #    23/103
PUSHS float@123.789                                                             #    24/103
SUBS                                                                            #    25/103
POPS LF@a                                                                       #    26/103
LABEL &while6                                                                   #    28/103
PUSHS LF@a                                                                      #    29/103
PUSHS int@0                                                                     #    30/103
INT2FLOATS                                                                      #    31/103
PUSHS float@236.741                                                             #    32/103
SUBS                                                                            #    33/103
GTS                                                                             #    34/103
PUSHS bool@true                                                                 #    35/103
JUMPIFNEQS &loop6                                                               #    36/103
PUSHS int@9                                                                     #    38/103
INT2FLOATS                                                                      #    39/103
POPS LF@b                                                                       #    40/103
LABEL &while8                                                                   #    42/103
PUSHS LF@b                                                                      #    43/103
PUSHS float@3.02                                                                #    44/103
GTS                                                                             #    45/103
PUSHS bool@true                                                                 #    46/103
JUMPIFNEQS &loop8                                                               #    47/103
PUSHS int@63                                                                    #    49/103
INT2FLOATS                                                                      #    50/103
FLOAT2R2EINTS                                                                   #    51/103
CREATEFRAME                                                                     #    52/103
DEFVAR TF@write                                                                 #    53/103
POPS TF@write                                                                   #    54/103
WRITE TF@write                                                                  #    55/103
PUSHS LF@b                                                                      #    57/103
PUSHS float@1.123                                                               #    58/103
SUBS                                                                            #    59/103
POPS LF@b                                                                       #    60/103
JUMP &while8                                                                    #    62/103
LABEL &loop8                                                                    #    63/103
PUSHS LF@a                                                                      #    65/103
PUSHS LF@a                                                                      #    66/103
PUSHS int@2                                                                     #    67/103
INT2FLOATS                                                                      #    68/103
MULS                                                                            #    69/103
ADDS                                                                            #    70/103
POPS LF@a                                                                       #    71/103
JUMP &while6                                                                    #    73/103
LABEL &loop6                                                                    #    74/103
PUSHS int@78                                                                    #    76/103
INT2FLOATS                                                                      #    77/103
POPS LF@a                                                                       #    78/103
LABEL &while15                                                                  #    80/103
PUSHS LF@a                                                                      #    81/103
PUSHS int@55                                                                    #    82/103
INT2FLOATS                                                                      #    83/103
GTS                                                                             #    84/103
PUSHS bool@true                                                                 #    85/103
JUMPIFNEQS &loop15                                                              #    86/103
PUSHS int@57                                                                    #    88/103
INT2FLOATS                                                                      #    89/103
FLOAT2R2EINTS                                                                   #    90/103
CREATEFRAME                                                                     #    91/103
DEFVAR TF@write                                                                 #    92/103
POPS TF@write                                                                   #    93/103
WRITE TF@write                                                                  #    94/103
PUSHS LF@a                                                                      #    96/103
PUSHS float@5.38                                                                #    97/103
SUBS                                                                            #    98/103
POPS LF@a                                                                       #    99/103
JUMP &while15                                                                   #   101/103
LABEL &loop15                                                                   #   102/103

