# 2017-12-04 23:21:45.647663
# SECTION: 06_loops
# TEST: 20
# INFO: cyclus with constant propagation
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 22 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 23 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@a=0(int)
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@a=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 31 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 32 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 33 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@a=10(int)
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 37 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 40 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: Const@=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 43 with following arguments:
# Arg1: Stack@=20(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 44 with following arguments:
# Arg1: Stack@=40(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=40(int)
# Dest: LF@b=0(int)
# Executing instruction: IDEFVAR at line: 48 with following arguments:
# Dest: LF@c
# Executing instruction: IMOVE at line: 49 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 55 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 56 with following arguments:
# Arg1: Stack@=20(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@b=40(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 58 with following arguments:
# Arg1: Stack@=40(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 59 with following arguments:
# Arg1: Stack@=30(double)
# Arg2: Stack@=40(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 60 with following arguments:
# Arg1: Stack@=70(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 61 with following arguments:
# Arg1: Stack@=70(int)
# Dest: LF@c=0(int)
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@c=70(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=70(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=70(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 71 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: LF@c=70(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=70(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 76 with following arguments:
# Arg1: Stack@=70(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 77 with following arguments:
# Executing instruction: IDEFVAR at line: 78 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 79 with following arguments:
# Arg1: Stack@=70(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 80 with following arguments:
# Arg1: TF@write=70(int)
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@c=70(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=70(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 86 with following arguments:
# Arg1: Stack@=70(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 87 with following arguments:
# Arg1: Stack@=50(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 88 with following arguments:
# Arg1: Stack@=50(int)
# Dest: LF@c=70(int)
# Executing instruction: IJUMP at line: 90 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@c=50(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=50(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=50(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 71 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: LF@c=50(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=50(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 76 with following arguments:
# Arg1: Stack@=50(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 77 with following arguments:
# Executing instruction: IDEFVAR at line: 78 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 79 with following arguments:
# Arg1: Stack@=50(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 80 with following arguments:
# Arg1: TF@write=50(int)
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@c=50(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=50(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 86 with following arguments:
# Arg1: Stack@=50(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 87 with following arguments:
# Arg1: Stack@=30(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 88 with following arguments:
# Arg1: Stack@=30(int)
# Dest: LF@c=50(int)
# Executing instruction: IJUMP at line: 90 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@c=30(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=30(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=30(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 71 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: LF@c=30(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=30(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 76 with following arguments:
# Arg1: Stack@=30(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 77 with following arguments:
# Executing instruction: IDEFVAR at line: 78 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 79 with following arguments:
# Arg1: Stack@=30(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 80 with following arguments:
# Arg1: TF@write=30(int)
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@c=30(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=30(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 86 with following arguments:
# Arg1: Stack@=30(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 87 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 88 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@c=30(int)
# Executing instruction: IJUMP at line: 90 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@c=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 71 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: LF@c=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 76 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 77 with following arguments:
# Executing instruction: IDEFVAR at line: 78 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 79 with following arguments:
# Arg1: Stack@=10(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 80 with following arguments:
# Arg1: TF@write=10(int)
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@c=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 86 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 87 with following arguments:
# Arg1: Stack@=-10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 88 with following arguments:
# Arg1: Stack@=-10(int)
# Dest: LF@c=10(int)
# Executing instruction: IJUMP at line: 90 with following arguments:
# Executing instruction: ILABEL at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@c=-10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=-10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 68 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 69 with following arguments:
# Arg1: Stack@=-10(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 71 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 91 with following arguments:
# Executing instruction: IGROOT at line: 95 with following arguments:
# I am Groot at 95 (786).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 786 (189+597)
# GROOT: 786
# 
#   1: ' cyclus with constant propagation
#   2: 
#   3: scope
#   4: 
#   5:     dim a as integer
#   6: 
#   7:     a = 10
#   8: 
#   9:     a = a + 10
#  10: 
#  11:     dim b as integer
#  12:     b = a + 20
#  13: 
#  14:     dim c as integer
#  15: 
#  16:     c = a + 10 + b
#  17: 
#  18:     do while c > 0
#  19: 
#  20:         print c;
#  21:         c = c - a
#  22:     loop
#  23: 
#  24: end scope

########################################

.IFJcode17                                                                      #     1/93
DEFVAR GF@$str1                                                                 #     2/93
DEFVAR GF@$str2                                                                 #     3/93
DEFVAR GF@$num1                                                                 #     4/93
DEFVAR GF@$num2                                                                 #     5/93
DEFVAR GF@$num3                                                                 #     6/93
DEFVAR GF@$bool1                                                                #     7/93
DEFVAR GF@$counter                                                              #     8/93
DEFVAR GF@$char                                                                 #     9/93
JUMP $$main                                                                     #    10/93
LABEL $$main                                                                    #    12/93
CREATEFRAME                                                                     #    13/93
PUSHFRAME                                                                       #    14/93
DEFVAR LF@a                                                                     #    17/93
MOVE LF@a int@0                                                                 #    18/93
PUSHS int@10                                                                    #    21/93
INT2FLOATS                                                                      #    22/93
FLOAT2R2EINTS                                                                   #    23/93
POPS LF@a                                                                       #    24/93
PUSHS LF@a                                                                      #    27/93
INT2FLOATS                                                                      #    28/93
PUSHS int@10                                                                    #    29/93
INT2FLOATS                                                                      #    30/93
ADDS                                                                            #    31/93
FLOAT2R2EINTS                                                                   #    32/93
POPS LF@a                                                                       #    33/93
DEFVAR LF@b                                                                     #    36/93
MOVE LF@b int@0                                                                 #    37/93
PUSHS LF@a                                                                      #    39/93
INT2FLOATS                                                                      #    40/93
PUSHS int@20                                                                    #    41/93
INT2FLOATS                                                                      #    42/93
ADDS                                                                            #    43/93
FLOAT2R2EINTS                                                                   #    44/93
POPS LF@b                                                                       #    45/93
DEFVAR LF@c                                                                     #    48/93
MOVE LF@c int@0                                                                 #    49/93
PUSHS LF@a                                                                      #    52/93
INT2FLOATS                                                                      #    53/93
PUSHS int@10                                                                    #    54/93
INT2FLOATS                                                                      #    55/93
ADDS                                                                            #    56/93
PUSHS LF@b                                                                      #    57/93
INT2FLOATS                                                                      #    58/93
ADDS                                                                            #    59/93
FLOAT2R2EINTS                                                                   #    60/93
POPS LF@c                                                                       #    61/93
LABEL &while18                                                                  #    64/93
PUSHS LF@c                                                                      #    65/93
INT2FLOATS                                                                      #    66/93
PUSHS int@0                                                                     #    67/93
INT2FLOATS                                                                      #    68/93
GTS                                                                             #    69/93
PUSHS bool@true                                                                 #    70/93
JUMPIFNEQS &loop18                                                              #    71/93
PUSHS LF@c                                                                      #    74/93
INT2FLOATS                                                                      #    75/93
FLOAT2R2EINTS                                                                   #    76/93
CREATEFRAME                                                                     #    77/93
DEFVAR TF@write                                                                 #    78/93
POPS TF@write                                                                   #    79/93
WRITE TF@write                                                                  #    80/93
PUSHS LF@c                                                                      #    82/93
INT2FLOATS                                                                      #    83/93
PUSHS LF@a                                                                      #    84/93
INT2FLOATS                                                                      #    85/93
SUBS                                                                            #    86/93
FLOAT2R2EINTS                                                                   #    87/93
POPS LF@c                                                                       #    88/93
JUMP &while18                                                                   #    90/93
LABEL &loop18                                                                   #    91/93

