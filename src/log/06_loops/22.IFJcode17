# 2017-12-04 23:21:45.671912
# SECTION: 06_loops
# TEST: 22
# INFO: cyclus with constant propagation & input & if
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IWRITE at line: 21 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 22 with following arguments:
# Dest: LF@a=0(int)
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@a=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 26 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 29 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 30 with following arguments:
# Arg1: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@a=10(int)
# Executing instruction: IDEFVAR at line: 34 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 35 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 38 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: Const@=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 40 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 41 with following arguments:
# Arg1: Stack@=20(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 42 with following arguments:
# Arg1: Stack@=40(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=40(int)
# Dest: LF@b=0(int)
# Executing instruction: IDEFVAR at line: 46 with following arguments:
# Dest: LF@c
# Executing instruction: IMOVE at line: 47 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 53 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 54 with following arguments:
# Arg1: Stack@=20(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@b=40(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 56 with following arguments:
# Arg1: Stack@=40(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 57 with following arguments:
# Arg1: Stack@=30(double)
# Arg2: Stack@=40(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=70(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=70(int)
# Dest: LF@c=0(int)
# Executing instruction: ILABEL at line: 62 with following arguments:
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@c=70(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=70(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 67 with following arguments:
# Arg1: Stack@=70(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 69 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@c=70(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 73 with following arguments:
# Arg1: Stack@=70(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 76 with following arguments:
# Arg1: Stack@=70(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 77 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 78 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 89 with following arguments:
# Executing instruction: IPUSHS at line: 92 with following arguments:
# Arg1: LF@c=70(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 93 with following arguments:
# Arg1: Stack@=70(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 94 with following arguments:
# Arg1: Stack@=70(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 95 with following arguments:
# Executing instruction: IDEFVAR at line: 96 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 97 with following arguments:
# Arg1: Stack@=70(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 98 with following arguments:
# Arg1: TF@write=70(int)
# Executing instruction: IPUSHS at line: 100 with following arguments:
# Arg1: LF@c=70(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 101 with following arguments:
# Arg1: Stack@=70(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 102 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 103 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 104 with following arguments:
# Arg1: Stack@=70(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 105 with following arguments:
# Arg1: Stack@=50(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 106 with following arguments:
# Arg1: Stack@=50(int)
# Dest: LF@c=70(int)
# Executing instruction: IJUMP at line: 108 with following arguments:
# Executing instruction: ILABEL at line: 62 with following arguments:
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@c=50(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=50(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 67 with following arguments:
# Arg1: Stack@=50(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 69 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@c=50(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 73 with following arguments:
# Arg1: Stack@=50(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 76 with following arguments:
# Arg1: Stack@=50(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 77 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 78 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 89 with following arguments:
# Executing instruction: IPUSHS at line: 92 with following arguments:
# Arg1: LF@c=50(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 93 with following arguments:
# Arg1: Stack@=50(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 94 with following arguments:
# Arg1: Stack@=50(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 95 with following arguments:
# Executing instruction: IDEFVAR at line: 96 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 97 with following arguments:
# Arg1: Stack@=50(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 98 with following arguments:
# Arg1: TF@write=50(int)
# Executing instruction: IPUSHS at line: 100 with following arguments:
# Arg1: LF@c=50(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 101 with following arguments:
# Arg1: Stack@=50(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 102 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 103 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 104 with following arguments:
# Arg1: Stack@=50(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 105 with following arguments:
# Arg1: Stack@=30(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 106 with following arguments:
# Arg1: Stack@=30(int)
# Dest: LF@c=50(int)
# Executing instruction: IJUMP at line: 108 with following arguments:
# Executing instruction: ILABEL at line: 62 with following arguments:
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@c=30(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=30(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 67 with following arguments:
# Arg1: Stack@=30(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 69 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@c=30(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 73 with following arguments:
# Arg1: Stack@=30(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 76 with following arguments:
# Arg1: Stack@=30(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 77 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 78 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 89 with following arguments:
# Executing instruction: IPUSHS at line: 92 with following arguments:
# Arg1: LF@c=30(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 93 with following arguments:
# Arg1: Stack@=30(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 94 with following arguments:
# Arg1: Stack@=30(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 95 with following arguments:
# Executing instruction: IDEFVAR at line: 96 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 97 with following arguments:
# Arg1: Stack@=30(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 98 with following arguments:
# Arg1: TF@write=30(int)
# Executing instruction: IPUSHS at line: 100 with following arguments:
# Arg1: LF@c=30(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 101 with following arguments:
# Arg1: Stack@=30(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 102 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 103 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 104 with following arguments:
# Arg1: Stack@=30(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 105 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 106 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@c=30(int)
# Executing instruction: IJUMP at line: 108 with following arguments:
# Executing instruction: ILABEL at line: 62 with following arguments:
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@c=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 67 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 69 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@c=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 73 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 76 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 77 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 78 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=31(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 82 with following arguments:
# Arg1: Stack@=31(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 83 with following arguments:
# Arg1: Stack@=31(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 84 with following arguments:
# Arg1: Stack@=31(int)
# Dest: LF@c=10(int)
# Executing instruction: IJUMP at line: 86 with following arguments:
# Executing instruction: ILABEL at line: 89 with following arguments:
# Executing instruction: IPUSHS at line: 92 with following arguments:
# Arg1: LF@c=31(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 93 with following arguments:
# Arg1: Stack@=31(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 94 with following arguments:
# Arg1: Stack@=31(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 95 with following arguments:
# Executing instruction: IDEFVAR at line: 96 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 97 with following arguments:
# Arg1: Stack@=31(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 98 with following arguments:
# Arg1: TF@write=31(int)
# Executing instruction: IPUSHS at line: 100 with following arguments:
# Arg1: LF@c=31(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 101 with following arguments:
# Arg1: Stack@=31(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 102 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 103 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 104 with following arguments:
# Arg1: Stack@=31(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 105 with following arguments:
# Arg1: Stack@=11(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 106 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@c=31(int)
# Executing instruction: IJUMP at line: 108 with following arguments:
# Executing instruction: ILABEL at line: 62 with following arguments:
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@c=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 67 with following arguments:
# Arg1: Stack@=11(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 69 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@c=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 73 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 76 with following arguments:
# Arg1: Stack@=11(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 77 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 78 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 87 with following arguments:
# Executing instruction: ILABEL at line: 89 with following arguments:
# Executing instruction: IPUSHS at line: 92 with following arguments:
# Arg1: LF@c=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 93 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 94 with following arguments:
# Arg1: Stack@=11(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 95 with following arguments:
# Executing instruction: IDEFVAR at line: 96 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 97 with following arguments:
# Arg1: Stack@=11(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 98 with following arguments:
# Arg1: TF@write=11(int)
# Executing instruction: IPUSHS at line: 100 with following arguments:
# Arg1: LF@c=11(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 101 with following arguments:
# Arg1: Stack@=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 102 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 103 with following arguments:
# Arg1: Stack@=20(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 104 with following arguments:
# Arg1: Stack@=11(double)
# Arg2: Stack@=20(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 105 with following arguments:
# Arg1: Stack@=-9(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 106 with following arguments:
# Arg1: Stack@=-9(int)
# Dest: LF@c=11(int)
# Executing instruction: IJUMP at line: 108 with following arguments:
# Executing instruction: ILABEL at line: 62 with following arguments:
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@c=-9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=-9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 67 with following arguments:
# Arg1: Stack@=-9(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 69 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 109 with following arguments:
# Executing instruction: IGROOT at line: 113 with following arguments:
# I am Groot at 113 (1121).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 10
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1121 (275+846)
# GROOT: 1121
# 
#   1: ' cyclus with constant propagation & input & if
#   2: 
#   3: scope
#   4: 
#   5:     dim a as integer
#   6: 
#   7:     input a
#   8: 
#   9:     a = a + 10
#  10: 
#  11:     dim b as integer
#  12:     b = a + 20
#  13: 
#  14:     dim c as integer
#  15: 
#  16:     c = a + 10 + b
#  17: 
#  18:     do while c > 0
#  19: 
#  20:         if c = 10 then
#  21:             c = 31
#  22:         else
#  23:         end if
#  24: 
#  25:         print c;
#  26:         c = c - a
#  27:     loop
#  28: 
#  29: end scope

########################################

.IFJcode17                                                                      #     1/111
DEFVAR GF@$str1                                                                 #     2/111
DEFVAR GF@$str2                                                                 #     3/111
DEFVAR GF@$num1                                                                 #     4/111
DEFVAR GF@$num2                                                                 #     5/111
DEFVAR GF@$num3                                                                 #     6/111
DEFVAR GF@$bool1                                                                #     7/111
DEFVAR GF@$counter                                                              #     8/111
DEFVAR GF@$char                                                                 #     9/111
JUMP $$main                                                                     #    10/111
LABEL $$main                                                                    #    12/111
CREATEFRAME                                                                     #    13/111
PUSHFRAME                                                                       #    14/111
DEFVAR LF@a                                                                     #    17/111
MOVE LF@a int@0                                                                 #    18/111
WRITE string@?\032                                                              #    21/111
READ LF@a int                                                                   #    22/111
PUSHS LF@a                                                                      #    25/111
INT2FLOATS                                                                      #    26/111
PUSHS int@10                                                                    #    27/111
INT2FLOATS                                                                      #    28/111
ADDS                                                                            #    29/111
FLOAT2R2EINTS                                                                   #    30/111
POPS LF@a                                                                       #    31/111
DEFVAR LF@b                                                                     #    34/111
MOVE LF@b int@0                                                                 #    35/111
PUSHS LF@a                                                                      #    37/111
INT2FLOATS                                                                      #    38/111
PUSHS int@20                                                                    #    39/111
INT2FLOATS                                                                      #    40/111
ADDS                                                                            #    41/111
FLOAT2R2EINTS                                                                   #    42/111
POPS LF@b                                                                       #    43/111
DEFVAR LF@c                                                                     #    46/111
MOVE LF@c int@0                                                                 #    47/111
PUSHS LF@a                                                                      #    50/111
INT2FLOATS                                                                      #    51/111
PUSHS int@10                                                                    #    52/111
INT2FLOATS                                                                      #    53/111
ADDS                                                                            #    54/111
PUSHS LF@b                                                                      #    55/111
INT2FLOATS                                                                      #    56/111
ADDS                                                                            #    57/111
FLOAT2R2EINTS                                                                   #    58/111
POPS LF@c                                                                       #    59/111
LABEL &while18                                                                  #    62/111
PUSHS LF@c                                                                      #    63/111
INT2FLOATS                                                                      #    64/111
PUSHS int@0                                                                     #    65/111
INT2FLOATS                                                                      #    66/111
GTS                                                                             #    67/111
PUSHS bool@true                                                                 #    68/111
JUMPIFNEQS &loop18                                                              #    69/111
PUSHS LF@c                                                                      #    72/111
INT2FLOATS                                                                      #    73/111
PUSHS int@10                                                                    #    74/111
INT2FLOATS                                                                      #    75/111
EQS                                                                             #    76/111
PUSHS bool@true                                                                 #    77/111
JUMPIFNEQS &else20                                                              #    78/111
PUSHS int@31                                                                    #    81/111
INT2FLOATS                                                                      #    82/111
FLOAT2R2EINTS                                                                   #    83/111
POPS LF@c                                                                       #    84/111
JUMP &endif20                                                                   #    86/111
LABEL &else20                                                                   #    87/111
LABEL &endif20                                                                  #    89/111
PUSHS LF@c                                                                      #    92/111
INT2FLOATS                                                                      #    93/111
FLOAT2R2EINTS                                                                   #    94/111
CREATEFRAME                                                                     #    95/111
DEFVAR TF@write                                                                 #    96/111
POPS TF@write                                                                   #    97/111
WRITE TF@write                                                                  #    98/111
PUSHS LF@c                                                                      #   100/111
INT2FLOATS                                                                      #   101/111
PUSHS LF@a                                                                      #   102/111
INT2FLOATS                                                                      #   103/111
SUBS                                                                            #   104/111
FLOAT2R2EINTS                                                                   #   105/111
POPS LF@c                                                                       #   106/111
JUMP &while18                                                                   #   108/111
LABEL &loop18                                                                   #   109/111

