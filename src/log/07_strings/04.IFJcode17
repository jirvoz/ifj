# 2017-12-04 23:21:45.739358
# SECTION: 07_strings
# TEST: 04
# INFO: asc builtin function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@res
# Executing instruction: IMOVE at line: 17 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@res()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@tmp
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@tmp()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 27 with following arguments:
# Arg1: Stack@=-10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 28 with following arguments:
# Arg1: Stack@=-10(int)
# Dest: LF@tmp=0(int)
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: Const@=test(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 33 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 34 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 35 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@$num1()
# Executing instruction: IPOPS at line: 36 with following arguments:
# Arg1: Stack@=0(int)
# Dest: GF@$num2()
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=test(string)
# Dest: GF@$str1()
# Executing instruction: ISTRLEN at line: 38 with following arguments:
# Arg1: GF@$str1=test(string)
# Dest: GF@$num3()
# Executing instruction: IGT at line: 39 with following arguments:
# Arg1: GF@$num2=0(int)
# Arg2: GF@$num3=4(int)
# Dest: GF@$bool1()
# Executing instruction: IJUMPIFEQ at line: 40 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILS at line: 41 with following arguments:
# Arg1: GF@$num2=0(int)
# Arg2: Const@=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 42 with following arguments:
# Arg1: GF@$bool1=true(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILABEL at line: 45 with following arguments:
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: GF@$num1=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 47 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 48 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@res=0(int)
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@res=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 52 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 53 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IDEFVAR at line: 55 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 56 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 57 with following arguments:
# Arg1: TF@write=0(int)
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=test(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 61 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 62 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 63 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@$num1=0(int)
# Executing instruction: IPOPS at line: 64 with following arguments:
# Arg1: Stack@=1(int)
# Dest: GF@$num2=0(int)
# Executing instruction: IPOPS at line: 65 with following arguments:
# Arg1: Stack@=test(string)
# Dest: GF@$str1=test(string)
# Executing instruction: ISTRLEN at line: 66 with following arguments:
# Arg1: GF@$str1=test(string)
# Dest: GF@$num3=4(int)
# Executing instruction: IGT at line: 67 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: GF@$num3=4(int)
# Dest: GF@$bool1=true(bool)
# Executing instruction: IJUMPIFEQ at line: 68 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILS at line: 69 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: Const@=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 70 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ISUB at line: 71 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: Const@=1(int)
# Dest: GF@$num2=1(int)
# Executing instruction: ISTRI2INT at line: 72 with following arguments:
# Arg1: GF@$str1=test(string)
# Arg2: GF@$num2=0(int)
# Dest: GF@$num1=0(int)
# Executing instruction: ILABEL at line: 73 with following arguments:
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: GF@$num1=116(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=116(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 76 with following arguments:
# Arg1: Stack@=116(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=116(int)
# Dest: LF@res=0(int)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@res=116(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=116(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 81 with following arguments:
# Arg1: Stack@=116(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 82 with following arguments:
# Executing instruction: IDEFVAR at line: 83 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 84 with following arguments:
# Arg1: Stack@=116(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 85 with following arguments:
# Arg1: TF@write=116(int)
# Executing instruction: IPUSHS at line: 87 with following arguments:
# Arg1: Const@=(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 89 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 90 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 91 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@$num1=116(int)
# Executing instruction: IPOPS at line: 92 with following arguments:
# Arg1: Stack@=1(int)
# Dest: GF@$num2=0(int)
# Executing instruction: IPOPS at line: 93 with following arguments:
# Arg1: Stack@=(string)
# Dest: GF@$str1=test(string)
# Executing instruction: ISTRLEN at line: 94 with following arguments:
# Arg1: GF@$str1=(string)
# Dest: GF@$num3=4(int)
# Executing instruction: IGT at line: 95 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: GF@$num3=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 96 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILS at line: 97 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: Const@=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 98 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ISUB at line: 99 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: Const@=1(int)
# Dest: GF@$num2=1(int)
# Executing instruction: ISTRI2INT at line: 100 with following arguments:
# Arg1: GF@$str1=(string)
# Arg2: GF@$num2=0(int)
# Dest: GF@$num1=0(int)
# Executing instruction: ILABEL at line: 101 with following arguments:
# Executing instruction: IPUSHS at line: 102 with following arguments:
# Arg1: GF@$num1=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 103 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 104 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 105 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@res=116(int)
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: LF@res=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 109 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 110 with following arguments:
# Executing instruction: IDEFVAR at line: 111 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 112 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 113 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: Const@=ÿ(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 117 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 118 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 119 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@$num1=1(int)
# Executing instruction: IPOPS at line: 120 with following arguments:
# Arg1: Stack@=1(int)
# Dest: GF@$num2=0(int)
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=ÿ(string)
# Dest: GF@$str1=(string)
# Executing instruction: ISTRLEN at line: 122 with following arguments:
# Arg1: GF@$str1=ÿ(string)
# Dest: GF@$num3=1(int)
# Executing instruction: IGT at line: 123 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: GF@$num3=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 124 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILS at line: 125 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: Const@=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 126 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ISUB at line: 127 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: Const@=1(int)
# Dest: GF@$num2=1(int)
# Executing instruction: ISTRI2INT at line: 128 with following arguments:
# Arg1: GF@$str1=ÿ(string)
# Arg2: GF@$num2=0(int)
# Dest: GF@$num1=0(int)
# Executing instruction: ILABEL at line: 129 with following arguments:
# Executing instruction: IPUSHS at line: 130 with following arguments:
# Arg1: GF@$num1=255(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 131 with following arguments:
# Arg1: Stack@=255(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 132 with following arguments:
# Arg1: Stack@=255(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 133 with following arguments:
# Arg1: Stack@=255(int)
# Dest: LF@res=1(int)
# Executing instruction: IPUSHS at line: 135 with following arguments:
# Arg1: LF@res=255(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 136 with following arguments:
# Arg1: Stack@=255(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 137 with following arguments:
# Arg1: Stack@=255(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 138 with following arguments:
# Executing instruction: IDEFVAR at line: 139 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 140 with following arguments:
# Arg1: Stack@=255(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 141 with following arguments:
# Arg1: TF@write=255(int)
# Executing instruction: IPUSHS at line: 143 with following arguments:
# Arg1: Const@=(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 144 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 145 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 146 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 147 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@$num1=255(int)
# Executing instruction: IPOPS at line: 148 with following arguments:
# Arg1: Stack@=1(int)
# Dest: GF@$num2=0(int)
# Executing instruction: IPOPS at line: 149 with following arguments:
# Arg1: Stack@=(string)
# Dest: GF@$str1=ÿ(string)
# Executing instruction: ISTRLEN at line: 150 with following arguments:
# Arg1: GF@$str1=(string)
# Dest: GF@$num3=1(int)
# Executing instruction: IGT at line: 151 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: GF@$num3=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 152 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILS at line: 153 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: Const@=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 154 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ISUB at line: 155 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: Const@=1(int)
# Dest: GF@$num2=1(int)
# Executing instruction: ISTRI2INT at line: 156 with following arguments:
# Arg1: GF@$str1=(string)
# Arg2: GF@$num2=0(int)
# Dest: GF@$num1=0(int)
# Executing instruction: ILABEL at line: 157 with following arguments:
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: GF@$num1=127(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 159 with following arguments:
# Arg1: Stack@=127(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 160 with following arguments:
# Arg1: Stack@=127(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 161 with following arguments:
# Arg1: Stack@=127(int)
# Dest: LF@res=255(int)
# Executing instruction: IPUSHS at line: 163 with following arguments:
# Arg1: LF@res=127(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 164 with following arguments:
# Arg1: Stack@=127(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 165 with following arguments:
# Arg1: Stack@=127(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 166 with following arguments:
# Executing instruction: IDEFVAR at line: 167 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 168 with following arguments:
# Arg1: Stack@=127(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 169 with following arguments:
# Arg1: TF@write=127(int)
# Executing instruction: IPUSHS at line: 171 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 172 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 173 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 174 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 175 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@$num1=127(int)
# Executing instruction: IPOPS at line: 176 with following arguments:
# Arg1: Stack@=1(int)
# Dest: GF@$num2=0(int)
# Executing instruction: IPOPS at line: 177 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: GF@$str1=(string)
# Executing instruction: ISTRLEN at line: 178 with following arguments:
# Arg1: GF@$str1=
# (string)
# Dest: GF@$num3=1(int)
# Executing instruction: IGT at line: 179 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: GF@$num3=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 180 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILS at line: 181 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: Const@=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 182 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ISUB at line: 183 with following arguments:
# Arg1: GF@$num2=1(int)
# Arg2: Const@=1(int)
# Dest: GF@$num2=1(int)
# Executing instruction: ISTRI2INT at line: 184 with following arguments:
# Arg1: GF@$str1=
# (string)
# Arg2: GF@$num2=0(int)
# Dest: GF@$num1=0(int)
# Executing instruction: ILABEL at line: 185 with following arguments:
# Executing instruction: IPUSHS at line: 186 with following arguments:
# Arg1: GF@$num1=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 188 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 189 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@res=127(int)
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@res=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 192 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 193 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 194 with following arguments:
# Executing instruction: IDEFVAR at line: 195 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 196 with following arguments:
# Arg1: Stack@=10(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 197 with following arguments:
# Arg1: TF@write=10(int)
# Executing instruction: IPUSHS at line: 199 with following arguments:
# Arg1: Const@=asdasd(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 200 with following arguments:
# Arg1: LF@tmp=-10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 201 with following arguments:
# Arg1: Stack@=-10(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 202 with following arguments:
# Arg1: Stack@=-10(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 203 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@$num1=10(int)
# Executing instruction: IPOPS at line: 204 with following arguments:
# Arg1: Stack@=-10(int)
# Dest: GF@$num2=0(int)
# Executing instruction: IPOPS at line: 205 with following arguments:
# Arg1: Stack@=asdasd(string)
# Dest: GF@$str1=
# (string)
# Executing instruction: ISTRLEN at line: 206 with following arguments:
# Arg1: GF@$str1=asdasd(string)
# Dest: GF@$num3=1(int)
# Executing instruction: IGT at line: 207 with following arguments:
# Arg1: GF@$num2=-10(int)
# Arg2: GF@$num3=6(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 208 with following arguments:
# Arg1: GF@$bool1=false(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILS at line: 209 with following arguments:
# Arg1: GF@$num2=-10(int)
# Arg2: Const@=1(int)
# Dest: GF@$bool1=false(bool)
# Executing instruction: IJUMPIFEQ at line: 210 with following arguments:
# Arg1: GF@$bool1=true(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILABEL at line: 213 with following arguments:
# Executing instruction: IPUSHS at line: 214 with following arguments:
# Arg1: GF@$num1=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 215 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 216 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 217 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@res=10(int)
# Executing instruction: IPUSHS at line: 219 with following arguments:
# Arg1: LF@res=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 220 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 221 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 222 with following arguments:
# Executing instruction: IDEFVAR at line: 223 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 224 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 225 with following arguments:
# Arg1: TF@write=0(int)
# Executing instruction: IPUSHS at line: 227 with following arguments:
# Arg1: Const@=asdasd(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 228 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 229 with following arguments:
# Arg1: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 230 with following arguments:
# Arg1: Stack@=42(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 231 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@$num1=0(int)
# Executing instruction: IPOPS at line: 232 with following arguments:
# Arg1: Stack@=42(int)
# Dest: GF@$num2=-10(int)
# Executing instruction: IPOPS at line: 233 with following arguments:
# Arg1: Stack@=asdasd(string)
# Dest: GF@$str1=asdasd(string)
# Executing instruction: ISTRLEN at line: 234 with following arguments:
# Arg1: GF@$str1=asdasd(string)
# Dest: GF@$num3=6(int)
# Executing instruction: IGT at line: 235 with following arguments:
# Arg1: GF@$num2=42(int)
# Arg2: GF@$num3=6(int)
# Dest: GF@$bool1=true(bool)
# Executing instruction: IJUMPIFEQ at line: 236 with following arguments:
# Arg1: GF@$bool1=true(bool)
# Arg2: Const@=true(bool)
# Executing instruction: ILABEL at line: 241 with following arguments:
# Executing instruction: IPUSHS at line: 242 with following arguments:
# Arg1: GF@$num1=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 243 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 244 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 245 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@res=0(int)
# Executing instruction: IPUSHS at line: 247 with following arguments:
# Arg1: LF@res=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 248 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 249 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 250 with following arguments:
# Executing instruction: IDEFVAR at line: 251 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 252 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 253 with following arguments:
# Arg1: TF@write=0(int)
# Executing instruction: IGROOT at line: 257 with following arguments:
# I am Groot at 257 (1473).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1473 (355+1118)
# GROOT: 1473
# 
#   1: ' asc builtin function
#   2: scope
#   3: 	dim res as integer
#   4: 	dim tmp as integer
#   5: 	tmp = 0 - 10
#   6: 
#   7: 	res = asc(!"test", 0)
#   8: 	print res;
#   9: 	res = asc(!"test", 1)
#  10: 	print res;
#  11: 	res = asc(!"\001", 1)
#  12: 	print res;
#  13: 	res = asc(!"\255", 1)
#  14: 	print res;
#  15: 	res = asc(!"\127", 1)
#  16: 	print res;
#  17: 	res = asc(!"\n", 1)
#  18: 	print res;
#  19: 	res = asc(!"asdasd", tmp)
#  20: 	print res;
#  21: 	res = asc(!"asdasd", 42)
#  22: 	print res;
#  23: 	
#  24: end scope

########################################

.IFJcode17                                                                      #     1/255
DEFVAR GF@$str1                                                                 #     2/255
DEFVAR GF@$str2                                                                 #     3/255
DEFVAR GF@$num1                                                                 #     4/255
DEFVAR GF@$num2                                                                 #     5/255
DEFVAR GF@$num3                                                                 #     6/255
DEFVAR GF@$bool1                                                                #     7/255
DEFVAR GF@$counter                                                              #     8/255
DEFVAR GF@$char                                                                 #     9/255
JUMP $$main                                                                     #    10/255
LABEL $$main                                                                    #    12/255
CREATEFRAME                                                                     #    13/255
PUSHFRAME                                                                       #    14/255
DEFVAR LF@res                                                                   #    16/255
MOVE LF@res int@0                                                               #    17/255
DEFVAR LF@tmp                                                                   #    19/255
MOVE LF@tmp int@0                                                               #    20/255
PUSHS int@0                                                                     #    22/255
INT2FLOATS                                                                      #    23/255
PUSHS int@10                                                                    #    24/255
INT2FLOATS                                                                      #    25/255
SUBS                                                                            #    26/255
FLOAT2R2EINTS                                                                   #    27/255
POPS LF@tmp                                                                     #    28/255
PUSHS string@test                                                               #    31/255
PUSHS int@0                                                                     #    32/255
INT2FLOATS                                                                      #    33/255
FLOAT2R2EINTS                                                                   #    34/255
MOVE GF@$num1 int@0                                                             #    35/255
POPS GF@$num2                                                                   #    36/255
POPS GF@$str1                                                                   #    37/255
STRLEN GF@$num3 GF@$str1                                                        #    38/255
GT GF@$bool1 GF@$num2 GF@$num3                                                  #    39/255
JUMPIFEQ &asc_end1 GF@$bool1 bool@true                                          #    40/255
LT GF@$bool1 GF@$num2 int@1                                                     #    41/255
JUMPIFEQ &asc_end1 GF@$bool1 bool@true                                          #    42/255
SUB GF@$num2 GF@$num2 int@1                                                     #    43/255
STRI2INT GF@$num1 GF@$str1 GF@$num2                                             #    44/255
LABEL &asc_end1                                                                 #    45/255
PUSHS GF@$num1                                                                  #    46/255
INT2FLOATS                                                                      #    47/255
FLOAT2R2EINTS                                                                   #    48/255
POPS LF@res                                                                     #    49/255
PUSHS LF@res                                                                    #    51/255
INT2FLOATS                                                                      #    52/255
FLOAT2R2EINTS                                                                   #    53/255
CREATEFRAME                                                                     #    54/255
DEFVAR TF@write                                                                 #    55/255
POPS TF@write                                                                   #    56/255
WRITE TF@write                                                                  #    57/255
PUSHS string@test                                                               #    59/255
PUSHS int@1                                                                     #    60/255
INT2FLOATS                                                                      #    61/255
FLOAT2R2EINTS                                                                   #    62/255
MOVE GF@$num1 int@0                                                             #    63/255
POPS GF@$num2                                                                   #    64/255
POPS GF@$str1                                                                   #    65/255
STRLEN GF@$num3 GF@$str1                                                        #    66/255
GT GF@$bool1 GF@$num2 GF@$num3                                                  #    67/255
JUMPIFEQ &asc_end2 GF@$bool1 bool@true                                          #    68/255
LT GF@$bool1 GF@$num2 int@1                                                     #    69/255
JUMPIFEQ &asc_end2 GF@$bool1 bool@true                                          #    70/255
SUB GF@$num2 GF@$num2 int@1                                                     #    71/255
STRI2INT GF@$num1 GF@$str1 GF@$num2                                             #    72/255
LABEL &asc_end2                                                                 #    73/255
PUSHS GF@$num1                                                                  #    74/255
INT2FLOATS                                                                      #    75/255
FLOAT2R2EINTS                                                                   #    76/255
POPS LF@res                                                                     #    77/255
PUSHS LF@res                                                                    #    79/255
INT2FLOATS                                                                      #    80/255
FLOAT2R2EINTS                                                                   #    81/255
CREATEFRAME                                                                     #    82/255
DEFVAR TF@write                                                                 #    83/255
POPS TF@write                                                                   #    84/255
WRITE TF@write                                                                  #    85/255
PUSHS string@\001                                                               #    87/255
PUSHS int@1                                                                     #    88/255
INT2FLOATS                                                                      #    89/255
FLOAT2R2EINTS                                                                   #    90/255
MOVE GF@$num1 int@0                                                             #    91/255
POPS GF@$num2                                                                   #    92/255
POPS GF@$str1                                                                   #    93/255
STRLEN GF@$num3 GF@$str1                                                        #    94/255
GT GF@$bool1 GF@$num2 GF@$num3                                                  #    95/255
JUMPIFEQ &asc_end3 GF@$bool1 bool@true                                          #    96/255
LT GF@$bool1 GF@$num2 int@1                                                     #    97/255
JUMPIFEQ &asc_end3 GF@$bool1 bool@true                                          #    98/255
SUB GF@$num2 GF@$num2 int@1                                                     #    99/255
STRI2INT GF@$num1 GF@$str1 GF@$num2                                             #   100/255
LABEL &asc_end3                                                                 #   101/255
PUSHS GF@$num1                                                                  #   102/255
INT2FLOATS                                                                      #   103/255
FLOAT2R2EINTS                                                                   #   104/255
POPS LF@res                                                                     #   105/255
PUSHS LF@res                                                                    #   107/255
INT2FLOATS                                                                      #   108/255
FLOAT2R2EINTS                                                                   #   109/255
CREATEFRAME                                                                     #   110/255
DEFVAR TF@write                                                                 #   111/255
POPS TF@write                                                                   #   112/255
WRITE TF@write                                                                  #   113/255
PUSHS string@\255                                                               #   115/255
PUSHS int@1                                                                     #   116/255
INT2FLOATS                                                                      #   117/255
FLOAT2R2EINTS                                                                   #   118/255
MOVE GF@$num1 int@0                                                             #   119/255
POPS GF@$num2                                                                   #   120/255
POPS GF@$str1                                                                   #   121/255
STRLEN GF@$num3 GF@$str1                                                        #   122/255
GT GF@$bool1 GF@$num2 GF@$num3                                                  #   123/255
JUMPIFEQ &asc_end4 GF@$bool1 bool@true                                          #   124/255
LT GF@$bool1 GF@$num2 int@1                                                     #   125/255
JUMPIFEQ &asc_end4 GF@$bool1 bool@true                                          #   126/255
SUB GF@$num2 GF@$num2 int@1                                                     #   127/255
STRI2INT GF@$num1 GF@$str1 GF@$num2                                             #   128/255
LABEL &asc_end4                                                                 #   129/255
PUSHS GF@$num1                                                                  #   130/255
INT2FLOATS                                                                      #   131/255
FLOAT2R2EINTS                                                                   #   132/255
POPS LF@res                                                                     #   133/255
PUSHS LF@res                                                                    #   135/255
INT2FLOATS                                                                      #   136/255
FLOAT2R2EINTS                                                                   #   137/255
CREATEFRAME                                                                     #   138/255
DEFVAR TF@write                                                                 #   139/255
POPS TF@write                                                                   #   140/255
WRITE TF@write                                                                  #   141/255
PUSHS string@\127                                                               #   143/255
PUSHS int@1                                                                     #   144/255
INT2FLOATS                                                                      #   145/255
FLOAT2R2EINTS                                                                   #   146/255
MOVE GF@$num1 int@0                                                             #   147/255
POPS GF@$num2                                                                   #   148/255
POPS GF@$str1                                                                   #   149/255
STRLEN GF@$num3 GF@$str1                                                        #   150/255
GT GF@$bool1 GF@$num2 GF@$num3                                                  #   151/255
JUMPIFEQ &asc_end5 GF@$bool1 bool@true                                          #   152/255
LT GF@$bool1 GF@$num2 int@1                                                     #   153/255
JUMPIFEQ &asc_end5 GF@$bool1 bool@true                                          #   154/255
SUB GF@$num2 GF@$num2 int@1                                                     #   155/255
STRI2INT GF@$num1 GF@$str1 GF@$num2                                             #   156/255
LABEL &asc_end5                                                                 #   157/255
PUSHS GF@$num1                                                                  #   158/255
INT2FLOATS                                                                      #   159/255
FLOAT2R2EINTS                                                                   #   160/255
POPS LF@res                                                                     #   161/255
PUSHS LF@res                                                                    #   163/255
INT2FLOATS                                                                      #   164/255
FLOAT2R2EINTS                                                                   #   165/255
CREATEFRAME                                                                     #   166/255
DEFVAR TF@write                                                                 #   167/255
POPS TF@write                                                                   #   168/255
WRITE TF@write                                                                  #   169/255
PUSHS string@\010                                                               #   171/255
PUSHS int@1                                                                     #   172/255
INT2FLOATS                                                                      #   173/255
FLOAT2R2EINTS                                                                   #   174/255
MOVE GF@$num1 int@0                                                             #   175/255
POPS GF@$num2                                                                   #   176/255
POPS GF@$str1                                                                   #   177/255
STRLEN GF@$num3 GF@$str1                                                        #   178/255
GT GF@$bool1 GF@$num2 GF@$num3                                                  #   179/255
JUMPIFEQ &asc_end6 GF@$bool1 bool@true                                          #   180/255
LT GF@$bool1 GF@$num2 int@1                                                     #   181/255
JUMPIFEQ &asc_end6 GF@$bool1 bool@true                                          #   182/255
SUB GF@$num2 GF@$num2 int@1                                                     #   183/255
STRI2INT GF@$num1 GF@$str1 GF@$num2                                             #   184/255
LABEL &asc_end6                                                                 #   185/255
PUSHS GF@$num1                                                                  #   186/255
INT2FLOATS                                                                      #   187/255
FLOAT2R2EINTS                                                                   #   188/255
POPS LF@res                                                                     #   189/255
PUSHS LF@res                                                                    #   191/255
INT2FLOATS                                                                      #   192/255
FLOAT2R2EINTS                                                                   #   193/255
CREATEFRAME                                                                     #   194/255
DEFVAR TF@write                                                                 #   195/255
POPS TF@write                                                                   #   196/255
WRITE TF@write                                                                  #   197/255
PUSHS string@asdasd                                                             #   199/255
PUSHS LF@tmp                                                                    #   200/255
INT2FLOATS                                                                      #   201/255
FLOAT2R2EINTS                                                                   #   202/255
MOVE GF@$num1 int@0                                                             #   203/255
POPS GF@$num2                                                                   #   204/255
POPS GF@$str1                                                                   #   205/255
STRLEN GF@$num3 GF@$str1                                                        #   206/255
GT GF@$bool1 GF@$num2 GF@$num3                                                  #   207/255
JUMPIFEQ &asc_end7 GF@$bool1 bool@true                                          #   208/255
LT GF@$bool1 GF@$num2 int@1                                                     #   209/255
JUMPIFEQ &asc_end7 GF@$bool1 bool@true                                          #   210/255
SUB GF@$num2 GF@$num2 int@1                                                     #   211/255
STRI2INT GF@$num1 GF@$str1 GF@$num2                                             #   212/255
LABEL &asc_end7                                                                 #   213/255
PUSHS GF@$num1                                                                  #   214/255
INT2FLOATS                                                                      #   215/255
FLOAT2R2EINTS                                                                   #   216/255
POPS LF@res                                                                     #   217/255
PUSHS LF@res                                                                    #   219/255
INT2FLOATS                                                                      #   220/255
FLOAT2R2EINTS                                                                   #   221/255
CREATEFRAME                                                                     #   222/255
DEFVAR TF@write                                                                 #   223/255
POPS TF@write                                                                   #   224/255
WRITE TF@write                                                                  #   225/255
PUSHS string@asdasd                                                             #   227/255
PUSHS int@42                                                                    #   228/255
INT2FLOATS                                                                      #   229/255
FLOAT2R2EINTS                                                                   #   230/255
MOVE GF@$num1 int@0                                                             #   231/255
POPS GF@$num2                                                                   #   232/255
POPS GF@$str1                                                                   #   233/255
STRLEN GF@$num3 GF@$str1                                                        #   234/255
GT GF@$bool1 GF@$num2 GF@$num3                                                  #   235/255
JUMPIFEQ &asc_end8 GF@$bool1 bool@true                                          #   236/255
LT GF@$bool1 GF@$num2 int@1                                                     #   237/255
JUMPIFEQ &asc_end8 GF@$bool1 bool@true                                          #   238/255
SUB GF@$num2 GF@$num2 int@1                                                     #   239/255
STRI2INT GF@$num1 GF@$str1 GF@$num2                                             #   240/255
LABEL &asc_end8                                                                 #   241/255
PUSHS GF@$num1                                                                  #   242/255
INT2FLOATS                                                                      #   243/255
FLOAT2R2EINTS                                                                   #   244/255
POPS LF@res                                                                     #   245/255
PUSHS LF@res                                                                    #   247/255
INT2FLOATS                                                                      #   248/255
FLOAT2R2EINTS                                                                   #   249/255
CREATEFRAME                                                                     #   250/255
DEFVAR TF@write                                                                 #   251/255
POPS TF@write                                                                   #   252/255
WRITE TF@write                                                                  #   253/255

