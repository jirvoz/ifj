# 2017-12-04 23:21:44.752973
# SECTION: 05_conditions
# TEST: 08
# INFO: Smaller or same
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 17 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 19 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 20 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 21 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 23 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 27 with following arguments:
# Arg1: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 28 with following arguments:
# Arg1: Stack@=42(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IDEFVAR at line: 30 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=42(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 32 with following arguments:
# Arg1: TF@write=42(int)
# Executing instruction: IJUMP at line: 34 with following arguments:
# Executing instruction: ILABEL at line: 45 with following arguments:
# Executing instruction: IGROOT at line: 48 with following arguments:
# I am Groot at 48 (127).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 127 (39+88)
# GROOT: 127
# 
#   1: ' Smaller or same
#   2: 
#   3: scope
#   4: 	if (8 <= 8)  then
#   5: 		print 42;
#   6: 	else
#   7: 		print 58;
#   8: 	end if
#   9: end scope

########################################

.IFJcode17                                                                      #     1/46
DEFVAR GF@$str1                                                                 #     2/46
DEFVAR GF@$str2                                                                 #     3/46
DEFVAR GF@$num1                                                                 #     4/46
DEFVAR GF@$num2                                                                 #     5/46
DEFVAR GF@$num3                                                                 #     6/46
DEFVAR GF@$bool1                                                                #     7/46
DEFVAR GF@$counter                                                              #     8/46
DEFVAR GF@$char                                                                 #     9/46
JUMP $$main                                                                     #    10/46
LABEL $$main                                                                    #    12/46
CREATEFRAME                                                                     #    13/46
PUSHFRAME                                                                       #    14/46
PUSHS int@8                                                                     #    16/46
INT2FLOATS                                                                      #    17/46
PUSHS int@8                                                                     #    18/46
INT2FLOATS                                                                      #    19/46
GTS                                                                             #    20/46
NOTS                                                                            #    21/46
PUSHS bool@true                                                                 #    22/46
JUMPIFNEQS &else4                                                               #    23/46
PUSHS int@42                                                                    #    26/46
INT2FLOATS                                                                      #    27/46
FLOAT2R2EINTS                                                                   #    28/46
CREATEFRAME                                                                     #    29/46
DEFVAR TF@write                                                                 #    30/46
POPS TF@write                                                                   #    31/46
WRITE TF@write                                                                  #    32/46
JUMP &endif4                                                                    #    34/46
LABEL &else4                                                                    #    35/46
PUSHS int@58                                                                    #    37/46
INT2FLOATS                                                                      #    38/46
FLOAT2R2EINTS                                                                   #    39/46
CREATEFRAME                                                                     #    40/46
DEFVAR TF@write                                                                 #    41/46
POPS TF@write                                                                   #    42/46
WRITE TF@write                                                                  #    43/46
LABEL &endif4                                                                   #    45/46

