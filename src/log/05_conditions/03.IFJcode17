# 2017-12-04 23:21:44.709829
# SECTION: 05_conditions
# TEST: 03
# INFO: implicit conversions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=200(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 17 with following arguments:
# Arg1: Stack@=200(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=200(double)
# Dest: Stack@()
# Executing instruction: IEQS at line: 19 with following arguments:
# Arg1: Stack@=200(double)
# Arg2: Stack@=200(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=789(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=789(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 26 with following arguments:
# Arg1: Stack@=789(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 27 with following arguments:
# Executing instruction: IDEFVAR at line: 28 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 29 with following arguments:
# Arg1: Stack@=789(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 30 with following arguments:
# Arg1: TF@write=789(int)
# Executing instruction: IJUMP at line: 32 with following arguments:
# Executing instruction: ILABEL at line: 43 with following arguments:
# Executing instruction: IGROOT at line: 46 with following arguments:
# I am Groot at 46 (115).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 115 (35+80)
# GROOT: 115
# 
#   1: ' implicit conversions
#   2: scope
#   3: 	if 200 = 200.0 then
#   4: 		print 789;
#   5: 	else
#   6: 		print 0;
#   7: 	end if
#   8: end scope

########################################

.IFJcode17                                                                      #     1/44
DEFVAR GF@$str1                                                                 #     2/44
DEFVAR GF@$str2                                                                 #     3/44
DEFVAR GF@$num1                                                                 #     4/44
DEFVAR GF@$num2                                                                 #     5/44
DEFVAR GF@$num3                                                                 #     6/44
DEFVAR GF@$bool1                                                                #     7/44
DEFVAR GF@$counter                                                              #     8/44
DEFVAR GF@$char                                                                 #     9/44
JUMP $$main                                                                     #    10/44
LABEL $$main                                                                    #    12/44
CREATEFRAME                                                                     #    13/44
PUSHFRAME                                                                       #    14/44
PUSHS int@200                                                                   #    16/44
INT2FLOATS                                                                      #    17/44
PUSHS float@200                                                                 #    18/44
EQS                                                                             #    19/44
PUSHS bool@true                                                                 #    20/44
JUMPIFNEQS &else3                                                               #    21/44
PUSHS int@789                                                                   #    24/44
INT2FLOATS                                                                      #    25/44
FLOAT2R2EINTS                                                                   #    26/44
CREATEFRAME                                                                     #    27/44
DEFVAR TF@write                                                                 #    28/44
POPS TF@write                                                                   #    29/44
WRITE TF@write                                                                  #    30/44
JUMP &endif3                                                                    #    32/44
LABEL &else3                                                                    #    33/44
PUSHS int@0                                                                     #    35/44
INT2FLOATS                                                                      #    36/44
FLOAT2R2EINTS                                                                   #    37/44
CREATEFRAME                                                                     #    38/44
DEFVAR TF@write                                                                 #    39/44
POPS TF@write                                                                   #    40/44
WRITE TF@write                                                                  #    41/44
LABEL &endif3                                                                   #    43/44

