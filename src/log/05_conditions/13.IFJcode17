# 2017-12-04 23:21:44.791315
# SECTION: 05_conditions
# TEST: 13
# INFO: Compare equal input strings
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 21 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@b()
# Executing instruction: IWRITE at line: 23 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 24 with following arguments:
# Dest: LF@a=(string)
# Executing instruction: IWRITE at line: 26 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 27 with following arguments:
# Dest: LF@b=(string)
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@a=Ahojky(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=Ahojky(string)
# Dest: Stack@()
# Executing instruction: IEQS at line: 31 with following arguments:
# Arg1: Stack@=Ahojky(string)
# Arg2: Stack@=Ahojky(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 33 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 38 with following arguments:
# Arg1: Stack@=42(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 39 with following arguments:
# Executing instruction: IDEFVAR at line: 40 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=42(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 42 with following arguments:
# Arg1: TF@write=42(int)
# Executing instruction: IJUMP at line: 44 with following arguments:
# Executing instruction: ILABEL at line: 55 with following arguments:
# Executing instruction: IGROOT at line: 58 with following arguments:
# I am Groot at 58 (164).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# Ahojky
# Ahojky
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 164 (54+110)
# GROOT: 164
# 
#   1: ' Compare equal input strings
#   2: scope
#   3: 
#   4: 	dim a as string
#   5: 	dim b as string
#   6: 	input a
#   7: 	input b
#   8: 	if a = b then
#   9: 		print 42;
#  10: 	else
#  11: 		print 43;	
#  12: 	end if
#  13: end scope

########################################

.IFJcode17                                                                      #     1/56
DEFVAR GF@$str1                                                                 #     2/56
DEFVAR GF@$str2                                                                 #     3/56
DEFVAR GF@$num1                                                                 #     4/56
DEFVAR GF@$num2                                                                 #     5/56
DEFVAR GF@$num3                                                                 #     6/56
DEFVAR GF@$bool1                                                                #     7/56
DEFVAR GF@$counter                                                              #     8/56
DEFVAR GF@$char                                                                 #     9/56
JUMP $$main                                                                     #    10/56
LABEL $$main                                                                    #    12/56
CREATEFRAME                                                                     #    13/56
PUSHFRAME                                                                       #    14/56
DEFVAR LF@a                                                                     #    17/56
MOVE LF@a string@                                                               #    18/56
DEFVAR LF@b                                                                     #    20/56
MOVE LF@b string@                                                               #    21/56
WRITE string@?\032                                                              #    23/56
READ LF@a string                                                                #    24/56
WRITE string@?\032                                                              #    26/56
READ LF@b string                                                                #    27/56
PUSHS LF@a                                                                      #    29/56
PUSHS LF@b                                                                      #    30/56
EQS                                                                             #    31/56
PUSHS bool@true                                                                 #    32/56
JUMPIFNEQS &else8                                                               #    33/56
PUSHS int@42                                                                    #    36/56
INT2FLOATS                                                                      #    37/56
FLOAT2R2EINTS                                                                   #    38/56
CREATEFRAME                                                                     #    39/56
DEFVAR TF@write                                                                 #    40/56
POPS TF@write                                                                   #    41/56
WRITE TF@write                                                                  #    42/56
JUMP &endif8                                                                    #    44/56
LABEL &else8                                                                    #    45/56
PUSHS int@43                                                                    #    47/56
INT2FLOATS                                                                      #    48/56
FLOAT2R2EINTS                                                                   #    49/56
CREATEFRAME                                                                     #    50/56
DEFVAR TF@write                                                                 #    51/56
POPS TF@write                                                                   #    52/56
WRITE TF@write                                                                  #    53/56
LABEL &endif8                                                                   #    55/56

