# 2017-12-04 23:21:44.813016
# SECTION: 05_conditions
# TEST: 15
# INFO: Many conditions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 22 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 24 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 25 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 27 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=OK(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 31 with following arguments:
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 33 with following arguments:
# Arg1: Stack@=OK(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 34 with following arguments:
# Arg1: TF@write=OK(string)
# Executing instruction: IJUMP at line: 36 with following arguments:
# Executing instruction: ILABEL at line: 45 with following arguments:
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 52 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 53 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 55 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: Const@=OK(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 59 with following arguments:
# Executing instruction: IDEFVAR at line: 60 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 61 with following arguments:
# Arg1: Stack@=OK(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 62 with following arguments:
# Arg1: TF@write=OK(string)
# Executing instruction: IJUMP at line: 64 with following arguments:
# Executing instruction: ILABEL at line: 73 with following arguments:
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 79 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 80 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 81 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 83 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: Const@=OK(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 87 with following arguments:
# Executing instruction: IDEFVAR at line: 88 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 89 with following arguments:
# Arg1: Stack@=OK(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 90 with following arguments:
# Arg1: TF@write=OK(string)
# Executing instruction: IJUMP at line: 92 with following arguments:
# Executing instruction: ILABEL at line: 101 with following arguments:
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 105 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 106 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 107 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 108 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 109 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 110 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ILSS at line: 111 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=-1(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 112 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 113 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 114 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: Const@=OK(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 118 with following arguments:
# Executing instruction: IDEFVAR at line: 119 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 120 with following arguments:
# Arg1: Stack@=OK(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 121 with following arguments:
# Arg1: TF@write=OK(string)
# Executing instruction: IJUMP at line: 123 with following arguments:
# Executing instruction: ILABEL at line: 132 with following arguments:
# Executing instruction: IPUSHS at line: 135 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 136 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 137 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 138 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 139 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 140 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 141 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 151 with following arguments:
# Executing instruction: IPUSHS at line: 153 with following arguments:
# Arg1: Const@=NOTOK(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 154 with following arguments:
# Executing instruction: IDEFVAR at line: 155 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=NOTOK(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 157 with following arguments:
# Arg1: TF@write=NOTOK(string)
# Executing instruction: ILABEL at line: 159 with following arguments:
# Executing instruction: IPUSHS at line: 162 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 163 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 165 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 166 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 167 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 168 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 169 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 179 with following arguments:
# Executing instruction: IPUSHS at line: 181 with following arguments:
# Arg1: Const@=NOTOK(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 182 with following arguments:
# Executing instruction: IDEFVAR at line: 183 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 184 with following arguments:
# Arg1: Stack@=NOTOK(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 185 with following arguments:
# Arg1: TF@write=NOTOK(string)
# Executing instruction: ILABEL at line: 187 with following arguments:
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 191 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 193 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 194 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: INOTS at line: 195 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 197 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 200 with following arguments:
# Arg1: Const@=OK(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 201 with following arguments:
# Executing instruction: IDEFVAR at line: 202 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 203 with following arguments:
# Arg1: Stack@=OK(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 204 with following arguments:
# Arg1: TF@write=OK(string)
# Executing instruction: IJUMP at line: 206 with following arguments:
# Executing instruction: ILABEL at line: 215 with following arguments:
# Executing instruction: IPUSHS at line: 218 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 219 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 220 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 221 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 222 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 223 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 224 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 234 with following arguments:
# Executing instruction: IPUSHS at line: 236 with following arguments:
# Arg1: Const@=NOTOK(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 237 with following arguments:
# Executing instruction: IDEFVAR at line: 238 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 239 with following arguments:
# Arg1: Stack@=NOTOK(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 240 with following arguments:
# Arg1: TF@write=NOTOK(string)
# Executing instruction: ILABEL at line: 242 with following arguments:
# Executing instruction: IPUSHS at line: 245 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 246 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 247 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 248 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 249 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 250 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 251 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 254 with following arguments:
# Arg1: Const@=OK(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 255 with following arguments:
# Executing instruction: IDEFVAR at line: 256 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 257 with following arguments:
# Arg1: Stack@=OK(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 258 with following arguments:
# Arg1: TF@write=OK(string)
# Executing instruction: IJUMP at line: 260 with following arguments:
# Executing instruction: ILABEL at line: 269 with following arguments:
# Executing instruction: IGROOT at line: 273 with following arguments:
# I am Groot at 273 (707).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 707 (210+497)
# GROOT: 707
# 
#   1: ' Many conditions
#   2: 
#   3: scope
#   4: 
#   5: dim a as integer
#   6: 
#   7: if a < 1 then
#   8:     print !"OK";
#   9: else
#  10:     print !"NOTOK";
#  11: end if
#  12: 
#  13: if a <= 0 then
#  14:     print !"OK";
#  15: else
#  16:     print !"NOTOK";
#  17: end if
#  18: 
#  19: if a >= 0 then
#  20:     print !"OK";
#  21: else
#  22:     print !"NOTOK";
#  23: end if
#  24: 
#  25: if a >= 0-1 then
#  26:     print !"OK";
#  27: else
#  28:     print !"NOTOK";
#  29: end if
#  30: 
#  31: if a > 0 then
#  32:     print !"OK";
#  33: else
#  34:     print !"NOTOK";
#  35: end if
#  36: 
#  37: if a <> 0 then
#  38:     print !"OK";
#  39: else
#  40:     print !"NOTOK";
#  41: end if
#  42: 
#  43: if a <> 1 then
#  44:     print !"OK";
#  45: else
#  46:     print !"NOTOK";
#  47: end if
#  48: 
#  49: if a = 1 then
#  50:     print !"OK";
#  51: else
#  52:     print !"NOTOK";
#  53: end if
#  54: 
#  55: if a = 0 then
#  56:     print !"OK";
#  57: else
#  58:     print !"NOTOK";
#  59: end if
#  60: 
#  61: end scope

########################################

.IFJcode17                                                                      #     1/271
DEFVAR GF@$str1                                                                 #     2/271
DEFVAR GF@$str2                                                                 #     3/271
DEFVAR GF@$num1                                                                 #     4/271
DEFVAR GF@$num2                                                                 #     5/271
DEFVAR GF@$num3                                                                 #     6/271
DEFVAR GF@$bool1                                                                #     7/271
DEFVAR GF@$counter                                                              #     8/271
DEFVAR GF@$char                                                                 #     9/271
JUMP $$main                                                                     #    10/271
LABEL $$main                                                                    #    12/271
CREATEFRAME                                                                     #    13/271
PUSHFRAME                                                                       #    14/271
DEFVAR LF@a                                                                     #    17/271
MOVE LF@a int@0                                                                 #    18/271
PUSHS LF@a                                                                      #    21/271
INT2FLOATS                                                                      #    22/271
PUSHS int@1                                                                     #    23/271
INT2FLOATS                                                                      #    24/271
LTS                                                                             #    25/271
PUSHS bool@true                                                                 #    26/271
JUMPIFNEQS &else7                                                               #    27/271
PUSHS string@OK                                                                 #    30/271
CREATEFRAME                                                                     #    31/271
DEFVAR TF@write                                                                 #    32/271
POPS TF@write                                                                   #    33/271
WRITE TF@write                                                                  #    34/271
JUMP &endif7                                                                    #    36/271
LABEL &else7                                                                    #    37/271
PUSHS string@NOTOK                                                              #    39/271
CREATEFRAME                                                                     #    40/271
DEFVAR TF@write                                                                 #    41/271
POPS TF@write                                                                   #    42/271
WRITE TF@write                                                                  #    43/271
LABEL &endif7                                                                   #    45/271
PUSHS LF@a                                                                      #    48/271
INT2FLOATS                                                                      #    49/271
PUSHS int@0                                                                     #    50/271
INT2FLOATS                                                                      #    51/271
GTS                                                                             #    52/271
NOTS                                                                            #    53/271
PUSHS bool@true                                                                 #    54/271
JUMPIFNEQS &else13                                                              #    55/271
PUSHS string@OK                                                                 #    58/271
CREATEFRAME                                                                     #    59/271
DEFVAR TF@write                                                                 #    60/271
POPS TF@write                                                                   #    61/271
WRITE TF@write                                                                  #    62/271
JUMP &endif13                                                                   #    64/271
LABEL &else13                                                                   #    65/271
PUSHS string@NOTOK                                                              #    67/271
CREATEFRAME                                                                     #    68/271
DEFVAR TF@write                                                                 #    69/271
POPS TF@write                                                                   #    70/271
WRITE TF@write                                                                  #    71/271
LABEL &endif13                                                                  #    73/271
PUSHS LF@a                                                                      #    76/271
INT2FLOATS                                                                      #    77/271
PUSHS int@0                                                                     #    78/271
INT2FLOATS                                                                      #    79/271
LTS                                                                             #    80/271
NOTS                                                                            #    81/271
PUSHS bool@true                                                                 #    82/271
JUMPIFNEQS &else19                                                              #    83/271
PUSHS string@OK                                                                 #    86/271
CREATEFRAME                                                                     #    87/271
DEFVAR TF@write                                                                 #    88/271
POPS TF@write                                                                   #    89/271
WRITE TF@write                                                                  #    90/271
JUMP &endif19                                                                   #    92/271
LABEL &else19                                                                   #    93/271
PUSHS string@NOTOK                                                              #    95/271
CREATEFRAME                                                                     #    96/271
DEFVAR TF@write                                                                 #    97/271
POPS TF@write                                                                   #    98/271
WRITE TF@write                                                                  #    99/271
LABEL &endif19                                                                  #   101/271
PUSHS LF@a                                                                      #   104/271
INT2FLOATS                                                                      #   105/271
PUSHS int@0                                                                     #   106/271
INT2FLOATS                                                                      #   107/271
PUSHS int@1                                                                     #   108/271
INT2FLOATS                                                                      #   109/271
SUBS                                                                            #   110/271
LTS                                                                             #   111/271
NOTS                                                                            #   112/271
PUSHS bool@true                                                                 #   113/271
JUMPIFNEQS &else25                                                              #   114/271
PUSHS string@OK                                                                 #   117/271
CREATEFRAME                                                                     #   118/271
DEFVAR TF@write                                                                 #   119/271
POPS TF@write                                                                   #   120/271
WRITE TF@write                                                                  #   121/271
JUMP &endif25                                                                   #   123/271
LABEL &else25                                                                   #   124/271
PUSHS string@NOTOK                                                              #   126/271
CREATEFRAME                                                                     #   127/271
DEFVAR TF@write                                                                 #   128/271
POPS TF@write                                                                   #   129/271
WRITE TF@write                                                                  #   130/271
LABEL &endif25                                                                  #   132/271
PUSHS LF@a                                                                      #   135/271
INT2FLOATS                                                                      #   136/271
PUSHS int@0                                                                     #   137/271
INT2FLOATS                                                                      #   138/271
GTS                                                                             #   139/271
PUSHS bool@true                                                                 #   140/271
JUMPIFNEQS &else31                                                              #   141/271
PUSHS string@OK                                                                 #   144/271
CREATEFRAME                                                                     #   145/271
DEFVAR TF@write                                                                 #   146/271
POPS TF@write                                                                   #   147/271
WRITE TF@write                                                                  #   148/271
JUMP &endif31                                                                   #   150/271
LABEL &else31                                                                   #   151/271
PUSHS string@NOTOK                                                              #   153/271
CREATEFRAME                                                                     #   154/271
DEFVAR TF@write                                                                 #   155/271
POPS TF@write                                                                   #   156/271
WRITE TF@write                                                                  #   157/271
LABEL &endif31                                                                  #   159/271
PUSHS LF@a                                                                      #   162/271
INT2FLOATS                                                                      #   163/271
PUSHS int@0                                                                     #   164/271
INT2FLOATS                                                                      #   165/271
EQS                                                                             #   166/271
NOTS                                                                            #   167/271
PUSHS bool@true                                                                 #   168/271
JUMPIFNEQS &else37                                                              #   169/271
PUSHS string@OK                                                                 #   172/271
CREATEFRAME                                                                     #   173/271
DEFVAR TF@write                                                                 #   174/271
POPS TF@write                                                                   #   175/271
WRITE TF@write                                                                  #   176/271
JUMP &endif37                                                                   #   178/271
LABEL &else37                                                                   #   179/271
PUSHS string@NOTOK                                                              #   181/271
CREATEFRAME                                                                     #   182/271
DEFVAR TF@write                                                                 #   183/271
POPS TF@write                                                                   #   184/271
WRITE TF@write                                                                  #   185/271
LABEL &endif37                                                                  #   187/271
PUSHS LF@a                                                                      #   190/271
INT2FLOATS                                                                      #   191/271
PUSHS int@1                                                                     #   192/271
INT2FLOATS                                                                      #   193/271
EQS                                                                             #   194/271
NOTS                                                                            #   195/271
PUSHS bool@true                                                                 #   196/271
JUMPIFNEQS &else43                                                              #   197/271
PUSHS string@OK                                                                 #   200/271
CREATEFRAME                                                                     #   201/271
DEFVAR TF@write                                                                 #   202/271
POPS TF@write                                                                   #   203/271
WRITE TF@write                                                                  #   204/271
JUMP &endif43                                                                   #   206/271
LABEL &else43                                                                   #   207/271
PUSHS string@NOTOK                                                              #   209/271
CREATEFRAME                                                                     #   210/271
DEFVAR TF@write                                                                 #   211/271
POPS TF@write                                                                   #   212/271
WRITE TF@write                                                                  #   213/271
LABEL &endif43                                                                  #   215/271
PUSHS LF@a                                                                      #   218/271
INT2FLOATS                                                                      #   219/271
PUSHS int@1                                                                     #   220/271
INT2FLOATS                                                                      #   221/271
EQS                                                                             #   222/271
PUSHS bool@true                                                                 #   223/271
JUMPIFNEQS &else49                                                              #   224/271
PUSHS string@OK                                                                 #   227/271
CREATEFRAME                                                                     #   228/271
DEFVAR TF@write                                                                 #   229/271
POPS TF@write                                                                   #   230/271
WRITE TF@write                                                                  #   231/271
JUMP &endif49                                                                   #   233/271
LABEL &else49                                                                   #   234/271
PUSHS string@NOTOK                                                              #   236/271
CREATEFRAME                                                                     #   237/271
DEFVAR TF@write                                                                 #   238/271
POPS TF@write                                                                   #   239/271
WRITE TF@write                                                                  #   240/271
LABEL &endif49                                                                  #   242/271
PUSHS LF@a                                                                      #   245/271
INT2FLOATS                                                                      #   246/271
PUSHS int@0                                                                     #   247/271
INT2FLOATS                                                                      #   248/271
EQS                                                                             #   249/271
PUSHS bool@true                                                                 #   250/271
JUMPIFNEQS &else55                                                              #   251/271
PUSHS string@OK                                                                 #   254/271
CREATEFRAME                                                                     #   255/271
DEFVAR TF@write                                                                 #   256/271
POPS TF@write                                                                   #   257/271
WRITE TF@write                                                                  #   258/271
JUMP &endif55                                                                   #   260/271
LABEL &else55                                                                   #   261/271
PUSHS string@NOTOK                                                              #   263/271
CREATEFRAME                                                                     #   264/271
DEFVAR TF@write                                                                 #   265/271
POPS TF@write                                                                   #   266/271
WRITE TF@write                                                                  #   267/271
LABEL &endif55                                                                  #   269/271

