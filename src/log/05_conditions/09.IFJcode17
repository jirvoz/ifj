# 2017-12-04 23:21:44.761197
# SECTION: 05_conditions
# TEST: 09
# INFO: Condition with implicit conversion
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 17 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: Const@=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 20 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 21 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 22 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=0.2222222222222222(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=112.3(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 24 with following arguments:
# Arg1: Stack@=1.777777777777778(double)
# Arg2: Stack@=112.3(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=13.8(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=114.0777777777778(double)
# Arg2: Stack@=13.8(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 32 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 33 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=0.2222222222222222(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: Const@=112.3(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 35 with following arguments:
# Arg1: Stack@=1.777777777777778(double)
# Arg2: Stack@=112.3(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=13.8(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 37 with following arguments:
# Arg1: Stack@=114.0777777777778(double)
# Arg2: Stack@=13.8(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 38 with following arguments:
# Arg1: Stack@=100.2777777777778(double)
# Arg2: Stack@=127.8777777777778(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 40 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 52 with following arguments:
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=58(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 55 with following arguments:
# Arg1: Stack@=58(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 56 with following arguments:
# Arg1: Stack@=58(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 57 with following arguments:
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=58(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 60 with following arguments:
# Arg1: TF@write=58(int)
# Executing instruction: ILABEL at line: 62 with following arguments:
# Executing instruction: IGROOT at line: 65 with following arguments:
# I am Groot at 65 (232).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 232 (68+164)
# GROOT: 232
# 
#   1: ' Condition with implicit conversion
#   2: scope
#   3: 	if ((8*(2.0/9)+112.3 - 13.8) > (8*(2.0/9)+112.3 + 13.8)) then
#   4: 		print 42;
#   5: 	else
#   6: 		print 58;
#   7: 	end if
#   8: end scope

########################################

.IFJcode17                                                                      #     1/63
DEFVAR GF@$str1                                                                 #     2/63
DEFVAR GF@$str2                                                                 #     3/63
DEFVAR GF@$num1                                                                 #     4/63
DEFVAR GF@$num2                                                                 #     5/63
DEFVAR GF@$num3                                                                 #     6/63
DEFVAR GF@$bool1                                                                #     7/63
DEFVAR GF@$counter                                                              #     8/63
DEFVAR GF@$char                                                                 #     9/63
JUMP $$main                                                                     #    10/63
LABEL $$main                                                                    #    12/63
CREATEFRAME                                                                     #    13/63
PUSHFRAME                                                                       #    14/63
PUSHS int@8                                                                     #    16/63
INT2FLOATS                                                                      #    17/63
PUSHS float@2                                                                   #    18/63
PUSHS int@9                                                                     #    19/63
INT2FLOATS                                                                      #    20/63
DIVS                                                                            #    21/63
MULS                                                                            #    22/63
PUSHS float@112.3                                                               #    23/63
ADDS                                                                            #    24/63
PUSHS float@13.8                                                                #    25/63
SUBS                                                                            #    26/63
PUSHS int@8                                                                     #    27/63
INT2FLOATS                                                                      #    28/63
PUSHS float@2                                                                   #    29/63
PUSHS int@9                                                                     #    30/63
INT2FLOATS                                                                      #    31/63
DIVS                                                                            #    32/63
MULS                                                                            #    33/63
PUSHS float@112.3                                                               #    34/63
ADDS                                                                            #    35/63
PUSHS float@13.8                                                                #    36/63
ADDS                                                                            #    37/63
GTS                                                                             #    38/63
PUSHS bool@true                                                                 #    39/63
JUMPIFNEQS &else3                                                               #    40/63
PUSHS int@42                                                                    #    43/63
INT2FLOATS                                                                      #    44/63
FLOAT2R2EINTS                                                                   #    45/63
CREATEFRAME                                                                     #    46/63
DEFVAR TF@write                                                                 #    47/63
POPS TF@write                                                                   #    48/63
WRITE TF@write                                                                  #    49/63
JUMP &endif3                                                                    #    51/63
LABEL &else3                                                                    #    52/63
PUSHS int@58                                                                    #    54/63
INT2FLOATS                                                                      #    55/63
FLOAT2R2EINTS                                                                   #    56/63
CREATEFRAME                                                                     #    57/63
DEFVAR TF@write                                                                 #    58/63
POPS TF@write                                                                   #    59/63
WRITE TF@write                                                                  #    60/63
LABEL &endif3                                                                   #    62/63

