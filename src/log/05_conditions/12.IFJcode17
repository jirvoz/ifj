# 2017-12-04 23:21:44.783345
# SECTION: 05_conditions
# TEST: 12
# INFO: string compare
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@str1
# Executing instruction: IMOVE at line: 17 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@str1()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@str2
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@str2()
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: LF@str1=(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@str2=(string)
# Dest: Stack@()
# Executing instruction: IGTS at line: 25 with following arguments:
# Arg1: Stack@=(string)
# Arg2: Stack@=(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 27 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 39 with following arguments:
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 43 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 44 with following arguments:
# Executing instruction: IDEFVAR at line: 45 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 47 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@str1=(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@str2=(string)
# Dest: Stack@()
# Executing instruction: ILSS at line: 54 with following arguments:
# Arg1: Stack@=(string)
# Arg2: Stack@=(string)
# Dest: Stack@()
# Executing instruction: INOTS at line: 55 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 57 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 61 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 62 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 63 with following arguments:
# Executing instruction: IDEFVAR at line: 64 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 65 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 66 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IJUMP at line: 68 with following arguments:
# Executing instruction: ILABEL at line: 79 with following arguments:
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: Const@=a(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 83 with following arguments:
# Arg1: Stack@=a(string)
# Dest: LF@str1=(string)
# Executing instruction: IPUSHS at line: 85 with following arguments:
# Arg1: Const@=b(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 86 with following arguments:
# Arg1: Stack@=b(string)
# Dest: LF@str2=(string)
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: LF@str1=a(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 89 with following arguments:
# Arg1: LF@str2=b(string)
# Dest: Stack@()
# Executing instruction: ILSS at line: 90 with following arguments:
# Arg1: Stack@=a(string)
# Arg2: Stack@=b(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 91 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 92 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 96 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 97 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 98 with following arguments:
# Executing instruction: IDEFVAR at line: 99 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 100 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 101 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IJUMP at line: 103 with following arguments:
# Executing instruction: ILABEL at line: 114 with following arguments:
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: Const@=aa(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 118 with following arguments:
# Arg1: Stack@=aa(string)
# Dest: LF@str1=a(string)
# Executing instruction: IPUSHS at line: 120 with following arguments:
# Arg1: Const@=aac(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 121 with following arguments:
# Arg1: Stack@=aac(string)
# Dest: LF@str2=b(string)
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@str2=aac(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 124 with following arguments:
# Arg1: LF@str1=aa(string)
# Dest: Stack@()
# Executing instruction: IGTS at line: 125 with following arguments:
# Arg1: Stack@=aac(string)
# Arg2: Stack@=aa(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 126 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 127 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 130 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 131 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 132 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 133 with following arguments:
# Executing instruction: IDEFVAR at line: 134 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 135 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 136 with following arguments:
# Arg1: TF@write=1(int)
# Executing instruction: IJUMP at line: 138 with following arguments:
# Executing instruction: ILABEL at line: 149 with following arguments:
# Executing instruction: IGROOT at line: 153 with following arguments:
# I am Groot at 153 (397).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 397 (107+290)
# GROOT: 397
# 
#   1: ' string compare
#   2: scope
#   3: 	dim str1 as string
#   4: 	dim str2 as string
#   5: 
#   6: 	if str1 > str2 then
#   7: 		print 0;
#   8: 	else
#   9: 		print 1;
#  10: 	end if
#  11: 
#  12: 	if str1 >= str2 then
#  13: 		print 1;
#  14: 	else
#  15: 		print 0;
#  16: 	end if
#  17: 
#  18: 	str1 = !"a"
#  19: 	str2 = !"b"
#  20: 	if str1 < str2 then
#  21: 		print 1;
#  22: 	else
#  23: 		print 0;
#  24: 	end if
#  25: 
#  26: 	str1 = !"aa"
#  27: 	str2 = !"aac"
#  28: 	if str2 > str1 then
#  29: 		print 1;
#  30: 	else
#  31: 		print 0;
#  32: 	end if
#  33: 
#  34: end scope

########################################

.IFJcode17                                                                      #     1/151
DEFVAR GF@$str1                                                                 #     2/151
DEFVAR GF@$str2                                                                 #     3/151
DEFVAR GF@$num1                                                                 #     4/151
DEFVAR GF@$num2                                                                 #     5/151
DEFVAR GF@$num3                                                                 #     6/151
DEFVAR GF@$bool1                                                                #     7/151
DEFVAR GF@$counter                                                              #     8/151
DEFVAR GF@$char                                                                 #     9/151
JUMP $$main                                                                     #    10/151
LABEL $$main                                                                    #    12/151
CREATEFRAME                                                                     #    13/151
PUSHFRAME                                                                       #    14/151
DEFVAR LF@str1                                                                  #    16/151
MOVE LF@str1 string@                                                            #    17/151
DEFVAR LF@str2                                                                  #    19/151
MOVE LF@str2 string@                                                            #    20/151
PUSHS LF@str1                                                                   #    23/151
PUSHS LF@str2                                                                   #    24/151
GTS                                                                             #    25/151
PUSHS bool@true                                                                 #    26/151
JUMPIFNEQS &else6                                                               #    27/151
PUSHS int@0                                                                     #    30/151
INT2FLOATS                                                                      #    31/151
FLOAT2R2EINTS                                                                   #    32/151
CREATEFRAME                                                                     #    33/151
DEFVAR TF@write                                                                 #    34/151
POPS TF@write                                                                   #    35/151
WRITE TF@write                                                                  #    36/151
JUMP &endif6                                                                    #    38/151
LABEL &else6                                                                    #    39/151
PUSHS int@1                                                                     #    41/151
INT2FLOATS                                                                      #    42/151
FLOAT2R2EINTS                                                                   #    43/151
CREATEFRAME                                                                     #    44/151
DEFVAR TF@write                                                                 #    45/151
POPS TF@write                                                                   #    46/151
WRITE TF@write                                                                  #    47/151
LABEL &endif6                                                                   #    49/151
PUSHS LF@str1                                                                   #    52/151
PUSHS LF@str2                                                                   #    53/151
LTS                                                                             #    54/151
NOTS                                                                            #    55/151
PUSHS bool@true                                                                 #    56/151
JUMPIFNEQS &else12                                                              #    57/151
PUSHS int@1                                                                     #    60/151
INT2FLOATS                                                                      #    61/151
FLOAT2R2EINTS                                                                   #    62/151
CREATEFRAME                                                                     #    63/151
DEFVAR TF@write                                                                 #    64/151
POPS TF@write                                                                   #    65/151
WRITE TF@write                                                                  #    66/151
JUMP &endif12                                                                   #    68/151
LABEL &else12                                                                   #    69/151
PUSHS int@0                                                                     #    71/151
INT2FLOATS                                                                      #    72/151
FLOAT2R2EINTS                                                                   #    73/151
CREATEFRAME                                                                     #    74/151
DEFVAR TF@write                                                                 #    75/151
POPS TF@write                                                                   #    76/151
WRITE TF@write                                                                  #    77/151
LABEL &endif12                                                                  #    79/151
PUSHS string@a                                                                  #    82/151
POPS LF@str1                                                                    #    83/151
PUSHS string@b                                                                  #    85/151
POPS LF@str2                                                                    #    86/151
PUSHS LF@str1                                                                   #    88/151
PUSHS LF@str2                                                                   #    89/151
LTS                                                                             #    90/151
PUSHS bool@true                                                                 #    91/151
JUMPIFNEQS &else20                                                              #    92/151
PUSHS int@1                                                                     #    95/151
INT2FLOATS                                                                      #    96/151
FLOAT2R2EINTS                                                                   #    97/151
CREATEFRAME                                                                     #    98/151
DEFVAR TF@write                                                                 #    99/151
POPS TF@write                                                                   #   100/151
WRITE TF@write                                                                  #   101/151
JUMP &endif20                                                                   #   103/151
LABEL &else20                                                                   #   104/151
PUSHS int@0                                                                     #   106/151
INT2FLOATS                                                                      #   107/151
FLOAT2R2EINTS                                                                   #   108/151
CREATEFRAME                                                                     #   109/151
DEFVAR TF@write                                                                 #   110/151
POPS TF@write                                                                   #   111/151
WRITE TF@write                                                                  #   112/151
LABEL &endif20                                                                  #   114/151
PUSHS string@aa                                                                 #   117/151
POPS LF@str1                                                                    #   118/151
PUSHS string@aac                                                                #   120/151
POPS LF@str2                                                                    #   121/151
PUSHS LF@str2                                                                   #   123/151
PUSHS LF@str1                                                                   #   124/151
GTS                                                                             #   125/151
PUSHS bool@true                                                                 #   126/151
JUMPIFNEQS &else28                                                              #   127/151
PUSHS int@1                                                                     #   130/151
INT2FLOATS                                                                      #   131/151
FLOAT2R2EINTS                                                                   #   132/151
CREATEFRAME                                                                     #   133/151
DEFVAR TF@write                                                                 #   134/151
POPS TF@write                                                                   #   135/151
WRITE TF@write                                                                  #   136/151
JUMP &endif28                                                                   #   138/151
LABEL &else28                                                                   #   139/151
PUSHS int@0                                                                     #   141/151
INT2FLOATS                                                                      #   142/151
FLOAT2R2EINTS                                                                   #   143/151
CREATEFRAME                                                                     #   144/151
DEFVAR TF@write                                                                 #   145/151
POPS TF@write                                                                   #   146/151
WRITE TF@write                                                                  #   147/151
LABEL &endif28                                                                  #   149/151

