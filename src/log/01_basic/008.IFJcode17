# 2017-12-04 23:21:43.571920
# SECTION: 01_basic
# TEST: 008
# INFO: Add two inputs
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 17 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IWRITE at line: 22 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 23 with following arguments:
# Dest: LF@a=0(int)
# Executing instruction: IWRITE at line: 25 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 26 with following arguments:
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=24(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=24(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 32 with following arguments:
# Arg1: Stack@=42(double)
# Arg2: Stack@=24(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 33 with following arguments:
# Arg1: Stack@=66(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IDEFVAR at line: 35 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 36 with following arguments:
# Arg1: Stack@=66(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 37 with following arguments:
# Arg1: TF@write=66(int)
# Executing instruction: IGROOT at line: 40 with following arguments:
# I am Groot at 40 (154).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 42
# 24
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 154 (50+104)
# GROOT: 154
# 
#   1: scope 
#   2:  dim a as integer 
#   3:  dim b as integer 
#   4:  input a 
#   5:  input b 
#   6:  print a + b; 
#   7: end scope

########################################

.IFJcode17                                                                      #     1/38
DEFVAR GF@$str1                                                                 #     2/38
DEFVAR GF@$str2                                                                 #     3/38
DEFVAR GF@$num1                                                                 #     4/38
DEFVAR GF@$num2                                                                 #     5/38
DEFVAR GF@$num3                                                                 #     6/38
DEFVAR GF@$bool1                                                                #     7/38
DEFVAR GF@$counter                                                              #     8/38
DEFVAR GF@$char                                                                 #     9/38
JUMP $$main                                                                     #    10/38
LABEL $$main                                                                    #    12/38
CREATEFRAME                                                                     #    13/38
PUSHFRAME                                                                       #    14/38
DEFVAR LF@a                                                                     #    16/38
MOVE LF@a int@0                                                                 #    17/38
DEFVAR LF@b                                                                     #    19/38
MOVE LF@b int@0                                                                 #    20/38
WRITE string@?\032                                                              #    22/38
READ LF@a int                                                                   #    23/38
WRITE string@?\032                                                              #    25/38
READ LF@b int                                                                   #    26/38
PUSHS LF@a                                                                      #    28/38
INT2FLOATS                                                                      #    29/38
PUSHS LF@b                                                                      #    30/38
INT2FLOATS                                                                      #    31/38
ADDS                                                                            #    32/38
FLOAT2R2EINTS                                                                   #    33/38
CREATEFRAME                                                                     #    34/38
DEFVAR TF@write                                                                 #    35/38
POPS TF@write                                                                   #    36/38
WRITE TF@write                                                                  #    37/38

