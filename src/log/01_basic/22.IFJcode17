# 2017-12-04 23:21:42.551343
# SECTION: 01_basic
# TEST: 22
# INFO: Calculator
# REQUIRED EXTENSIONS: IFTHEN
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@operace
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@operace()
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 21 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IWRITE at line: 27 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 28 with following arguments:
# Dest: LF@operace=(string)
# Executing instruction: IWRITE at line: 30 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 31 with following arguments:
# Dest: LF@a=0(int)
# Executing instruction: IWRITE at line: 33 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 34 with following arguments:
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: LF@operace=rozdil(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: Const@=soucet(string)
# Dest: Stack@()
# Executing instruction: IEQS at line: 40 with following arguments:
# Arg1: Stack@=rozdil(string)
# Arg2: Stack@=soucet(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 42 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 63 with following arguments:
# Executing instruction: IPUSHS at line: 64 with following arguments:
# Arg1: LF@operace=rozdil(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: Const@=rozdil(string)
# Dest: Stack@()
# Executing instruction: IEQS at line: 66 with following arguments:
# Arg1: Stack@=rozdil(string)
# Arg2: Stack@=rozdil(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 68 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@a=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@b=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 75 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 76 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@a=10(int)
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@a=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 81 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 82 with following arguments:
# Executing instruction: IDEFVAR at line: 83 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 84 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 85 with following arguments:
# Arg1: TF@write=5(int)
# Executing instruction: IJUMP at line: 88 with following arguments:
# Executing instruction: ILABEL at line: 176 with following arguments:
# Executing instruction: IGROOT at line: 180 with following arguments:
# I am Groot at 180 (262).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# rozdil
# 10
# 5
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 262 (80+182)
# GROOT: 262
# 
#   1: ' Calculator
#   2: SCOPE
#   3: 
#   4: 	dim operace as string
#   5: 	dim a as integer
#   6: 	dim b as integer
#   7: 
#   8: 	input operace
#   9: 	input a
#  10: 	input b
#  11: 
#  12: 
#  13: 	if operace = !"soucet" then
#  14: 		a = a + b
#  15: 		print a;
#  16: 
#  17: 	elseif operace = !"rozdil" then	
#  18: 		a = a - b	
#  19: 		print a;
#  20: 
#  21: 	elseif operace = !"soucin" then	
#  22: 		a = a * b
#  23: 		print a;	
#  24: 
#  25: 	elseif operace = !"mocnina" then	
#  26: 		a = a * a
#  27: 		print a;	
#  28: 
#  29: 	elseif operace = !"dvojnasobek" then	
#  30: 		a = a * 2
#  31: 		print a;	
#  32: 
#  33: 	else
#  34: 		print !"Neplatna operace";
#  35: 
#  36: 	end if
#  37: 
#  38: END SCOPE

########################################

.IFJcode17                                                                      #     1/178
DEFVAR GF@$str1                                                                 #     2/178
DEFVAR GF@$str2                                                                 #     3/178
DEFVAR GF@$num1                                                                 #     4/178
DEFVAR GF@$num2                                                                 #     5/178
DEFVAR GF@$num3                                                                 #     6/178
DEFVAR GF@$bool1                                                                #     7/178
DEFVAR GF@$counter                                                              #     8/178
DEFVAR GF@$char                                                                 #     9/178
JUMP $$main                                                                     #    10/178
LABEL $$main                                                                    #    12/178
CREATEFRAME                                                                     #    13/178
PUSHFRAME                                                                       #    14/178
DEFVAR LF@operace                                                               #    17/178
MOVE LF@operace string@                                                         #    18/178
DEFVAR LF@a                                                                     #    20/178
MOVE LF@a int@0                                                                 #    21/178
DEFVAR LF@b                                                                     #    23/178
MOVE LF@b int@0                                                                 #    24/178
WRITE string@?\032                                                              #    27/178
READ LF@operace string                                                          #    28/178
WRITE string@?\032                                                              #    30/178
READ LF@a int                                                                   #    31/178
WRITE string@?\032                                                              #    33/178
READ LF@b int                                                                   #    34/178
PUSHS LF@operace                                                                #    38/178
PUSHS string@soucet                                                             #    39/178
EQS                                                                             #    40/178
PUSHS bool@true                                                                 #    41/178
JUMPIFNEQS &else13                                                              #    42/178
PUSHS LF@a                                                                      #    45/178
INT2FLOATS                                                                      #    46/178
PUSHS LF@b                                                                      #    47/178
INT2FLOATS                                                                      #    48/178
ADDS                                                                            #    49/178
FLOAT2R2EINTS                                                                   #    50/178
POPS LF@a                                                                       #    51/178
PUSHS LF@a                                                                      #    53/178
INT2FLOATS                                                                      #    54/178
FLOAT2R2EINTS                                                                   #    55/178
CREATEFRAME                                                                     #    56/178
DEFVAR TF@write                                                                 #    57/178
POPS TF@write                                                                   #    58/178
WRITE TF@write                                                                  #    59/178
JUMP &endif13                                                                   #    62/178
LABEL &else13                                                                   #    63/178
PUSHS LF@operace                                                                #    64/178
PUSHS string@rozdil                                                             #    65/178
EQS                                                                             #    66/178
PUSHS bool@true                                                                 #    67/178
JUMPIFNEQS &else17                                                              #    68/178
PUSHS LF@a                                                                      #    71/178
INT2FLOATS                                                                      #    72/178
PUSHS LF@b                                                                      #    73/178
INT2FLOATS                                                                      #    74/178
SUBS                                                                            #    75/178
FLOAT2R2EINTS                                                                   #    76/178
POPS LF@a                                                                       #    77/178
PUSHS LF@a                                                                      #    79/178
INT2FLOATS                                                                      #    80/178
FLOAT2R2EINTS                                                                   #    81/178
CREATEFRAME                                                                     #    82/178
DEFVAR TF@write                                                                 #    83/178
POPS TF@write                                                                   #    84/178
WRITE TF@write                                                                  #    85/178
JUMP &endif13                                                                   #    88/178
LABEL &else17                                                                   #    89/178
PUSHS LF@operace                                                                #    90/178
PUSHS string@soucin                                                             #    91/178
EQS                                                                             #    92/178
PUSHS bool@true                                                                 #    93/178
JUMPIFNEQS &else21                                                              #    94/178
PUSHS LF@a                                                                      #    97/178
INT2FLOATS                                                                      #    98/178
PUSHS LF@b                                                                      #    99/178
INT2FLOATS                                                                      #   100/178
MULS                                                                            #   101/178
FLOAT2R2EINTS                                                                   #   102/178
POPS LF@a                                                                       #   103/178
PUSHS LF@a                                                                      #   105/178
INT2FLOATS                                                                      #   106/178
FLOAT2R2EINTS                                                                   #   107/178
CREATEFRAME                                                                     #   108/178
DEFVAR TF@write                                                                 #   109/178
POPS TF@write                                                                   #   110/178
WRITE TF@write                                                                  #   111/178
JUMP &endif13                                                                   #   114/178
LABEL &else21                                                                   #   115/178
PUSHS LF@operace                                                                #   116/178
PUSHS string@mocnina                                                            #   117/178
EQS                                                                             #   118/178
PUSHS bool@true                                                                 #   119/178
JUMPIFNEQS &else25                                                              #   120/178
PUSHS LF@a                                                                      #   123/178
INT2FLOATS                                                                      #   124/178
PUSHS LF@a                                                                      #   125/178
INT2FLOATS                                                                      #   126/178
MULS                                                                            #   127/178
FLOAT2R2EINTS                                                                   #   128/178
POPS LF@a                                                                       #   129/178
PUSHS LF@a                                                                      #   131/178
INT2FLOATS                                                                      #   132/178
FLOAT2R2EINTS                                                                   #   133/178
CREATEFRAME                                                                     #   134/178
DEFVAR TF@write                                                                 #   135/178
POPS TF@write                                                                   #   136/178
WRITE TF@write                                                                  #   137/178
JUMP &endif13                                                                   #   140/178
LABEL &else25                                                                   #   141/178
PUSHS LF@operace                                                                #   142/178
PUSHS string@dvojnasobek                                                        #   143/178
EQS                                                                             #   144/178
PUSHS bool@true                                                                 #   145/178
JUMPIFNEQS &else29                                                              #   146/178
PUSHS LF@a                                                                      #   149/178
INT2FLOATS                                                                      #   150/178
PUSHS int@2                                                                     #   151/178
INT2FLOATS                                                                      #   152/178
MULS                                                                            #   153/178
FLOAT2R2EINTS                                                                   #   154/178
POPS LF@a                                                                       #   155/178
PUSHS LF@a                                                                      #   157/178
INT2FLOATS                                                                      #   158/178
FLOAT2R2EINTS                                                                   #   159/178
CREATEFRAME                                                                     #   160/178
DEFVAR TF@write                                                                 #   161/178
POPS TF@write                                                                   #   162/178
WRITE TF@write                                                                  #   163/178
JUMP &endif13                                                                   #   166/178
LABEL &else29                                                                   #   167/178
PUSHS string@Neplatna\032operace                                                #   169/178
CREATEFRAME                                                                     #   170/178
DEFVAR TF@write                                                                 #   171/178
POPS TF@write                                                                   #   172/178
WRITE TF@write                                                                  #   173/178
LABEL &endif13                                                                  #   176/178

