# 2017-12-04 23:21:43.531038
# SECTION: 01_basic
# TEST: 34
# INFO: _ as variable name
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@_
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=6.5(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 18 with following arguments:
# Arg1: Stack@=6.5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 19 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@_()
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@__
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 23 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=5(double)
# Dest: LF@__()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: LF@_=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 27 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 28 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IDEFVAR at line: 30 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=6(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 32 with following arguments:
# Arg1: TF@write=6(int)
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@__=5(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IDEFVAR at line: 35 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 36 with following arguments:
# Arg1: Stack@=5(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 37 with following arguments:
# Arg1: TF@write=5(double)
# Executing instruction: IGROOT at line: 40 with following arguments:
# I am Groot at 40 (156).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 156 (42+114)
# GROOT: 156
# 
#   1: ' _ as variable name
#   2: 
#   3: scope
#   4: dim _ as integer = 6.5
#   5: dim __ as double = 5
#   6: print _;__;
#   7: end scope

########################################

.IFJcode17                                                                      #     1/38
DEFVAR GF@$str1                                                                 #     2/38
DEFVAR GF@$str2                                                                 #     3/38
DEFVAR GF@$num1                                                                 #     4/38
DEFVAR GF@$num2                                                                 #     5/38
DEFVAR GF@$num3                                                                 #     6/38
DEFVAR GF@$bool1                                                                #     7/38
DEFVAR GF@$counter                                                              #     8/38
DEFVAR GF@$char                                                                 #     9/38
JUMP $$main                                                                     #    10/38
LABEL $$main                                                                    #    12/38
CREATEFRAME                                                                     #    13/38
PUSHFRAME                                                                       #    14/38
DEFVAR LF@_                                                                     #    16/38
PUSHS float@6.5                                                                 #    17/38
FLOAT2R2EINTS                                                                   #    18/38
POPS LF@_                                                                       #    19/38
DEFVAR LF@__                                                                    #    21/38
PUSHS int@5                                                                     #    22/38
INT2FLOATS                                                                      #    23/38
POPS LF@__                                                                      #    24/38
PUSHS LF@_                                                                      #    26/38
INT2FLOATS                                                                      #    27/38
FLOAT2R2EINTS                                                                   #    28/38
CREATEFRAME                                                                     #    29/38
DEFVAR TF@write                                                                 #    30/38
POPS TF@write                                                                   #    31/38
WRITE TF@write                                                                  #    32/38
PUSHS LF@__                                                                     #    33/38
CREATEFRAME                                                                     #    34/38
DEFVAR TF@write                                                                 #    35/38
POPS TF@write                                                                   #    36/38
WRITE TF@write                                                                  #    37/38

