# 2017-12-04 23:21:43.501059
# SECTION: 01_basic
# TEST: 30
# INFO: All formats of double
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=11.43(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=11.43(double)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: Const@=3100(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 22 with following arguments:
# Arg1: Stack@=3100(double)
# Dest: LF@b()
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: LF@c
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=0.031(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=0.031(double)
# Dest: LF@c()
# Executing instruction: IDEFVAR at line: 28 with following arguments:
# Dest: LF@d
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=3142(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 30 with following arguments:
# Arg1: Stack@=3142(double)
# Dest: LF@d()
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: LF@e
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=0.3142(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 34 with following arguments:
# Arg1: Stack@=0.3142(double)
# Dest: LF@e()
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: LF@f
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: Const@=3100(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=3100(double)
# Dest: LF@f()
# Executing instruction: IDEFVAR at line: 40 with following arguments:
# Dest: LF@g
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: Const@=0.0341(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 42 with following arguments:
# Arg1: Stack@=0.0341(double)
# Dest: LF@g()
# Executing instruction: IDEFVAR at line: 44 with following arguments:
# Dest: LF@h
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=3142(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=3142(double)
# Dest: LF@h()
# Executing instruction: IDEFVAR at line: 48 with following arguments:
# Dest: LF@i
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=0.3142(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=0.3142(double)
# Dest: LF@i()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@a=11.43(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: LF@b=3100(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 55 with following arguments:
# Arg1: Stack@=11.43(double)
# Arg2: Stack@=3100(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@c=0.031(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 57 with following arguments:
# Arg1: Stack@=3111.43(double)
# Arg2: Stack@=0.031(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@d=3142(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 59 with following arguments:
# Arg1: Stack@=3111.461(double)
# Arg2: Stack@=3142(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: LF@e=0.3142(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 61 with following arguments:
# Arg1: Stack@=6253.460999999999(double)
# Arg2: Stack@=0.3142(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: LF@f=3100(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=6253.775199999999(double)
# Arg2: Stack@=3100(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 64 with following arguments:
# Arg1: LF@g=0.0341(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 65 with following arguments:
# Arg1: Stack@=9353.7752(double)
# Arg2: Stack@=0.0341(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: LF@h=3142(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 67 with following arguments:
# Arg1: Stack@=9353.809300000001(double)
# Arg2: Stack@=3142(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: LF@i=0.3142(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 69 with following arguments:
# Arg1: Stack@=12495.8093(double)
# Arg2: Stack@=0.3142(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 70 with following arguments:
# Executing instruction: IDEFVAR at line: 71 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=12496.1235(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 73 with following arguments:
# Arg1: TF@write=12496.1235(double)
# Executing instruction: IGROOT at line: 77 with following arguments:
# I am Groot at 77 (347).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 347 (82+265)
# GROOT: 347
# 
#   1: 'All formats of double
#   2: scope
#   3:     dim a as double = 11.43
#   4:     dim b as double = 31e2
#   5:     dim c as double = 31e-3
#   6:     dim d as double = 31.42e2
#   7:     dim e as double = 31.42e-2
#   8:     dim f as double = 31E2
#   9:     dim g as double = 341E-4
#  10:     dim h as double = 31.42E2
#  11:     dim i as double = 31.42E-2
#  12:     
#  13:     print a + b + c + d + e + f+ g + h + i;
#  14:     
#  15: end scope

########################################

.IFJcode17                                                                      #     1/75
DEFVAR GF@$str1                                                                 #     2/75
DEFVAR GF@$str2                                                                 #     3/75
DEFVAR GF@$num1                                                                 #     4/75
DEFVAR GF@$num2                                                                 #     5/75
DEFVAR GF@$num3                                                                 #     6/75
DEFVAR GF@$bool1                                                                #     7/75
DEFVAR GF@$counter                                                              #     8/75
DEFVAR GF@$char                                                                 #     9/75
JUMP $$main                                                                     #    10/75
LABEL $$main                                                                    #    12/75
CREATEFRAME                                                                     #    13/75
PUSHFRAME                                                                       #    14/75
DEFVAR LF@a                                                                     #    16/75
PUSHS float@11.43                                                               #    17/75
POPS LF@a                                                                       #    18/75
DEFVAR LF@b                                                                     #    20/75
PUSHS float@3100                                                                #    21/75
POPS LF@b                                                                       #    22/75
DEFVAR LF@c                                                                     #    24/75
PUSHS float@0.031                                                               #    25/75
POPS LF@c                                                                       #    26/75
DEFVAR LF@d                                                                     #    28/75
PUSHS float@3142                                                                #    29/75
POPS LF@d                                                                       #    30/75
DEFVAR LF@e                                                                     #    32/75
PUSHS float@0.3142                                                              #    33/75
POPS LF@e                                                                       #    34/75
DEFVAR LF@f                                                                     #    36/75
PUSHS float@3100                                                                #    37/75
POPS LF@f                                                                       #    38/75
DEFVAR LF@g                                                                     #    40/75
PUSHS float@0.0341                                                              #    41/75
POPS LF@g                                                                       #    42/75
DEFVAR LF@h                                                                     #    44/75
PUSHS float@3142                                                                #    45/75
POPS LF@h                                                                       #    46/75
DEFVAR LF@i                                                                     #    48/75
PUSHS float@0.3142                                                              #    49/75
POPS LF@i                                                                       #    50/75
PUSHS LF@a                                                                      #    53/75
PUSHS LF@b                                                                      #    54/75
ADDS                                                                            #    55/75
PUSHS LF@c                                                                      #    56/75
ADDS                                                                            #    57/75
PUSHS LF@d                                                                      #    58/75
ADDS                                                                            #    59/75
PUSHS LF@e                                                                      #    60/75
ADDS                                                                            #    61/75
PUSHS LF@f                                                                      #    62/75
ADDS                                                                            #    63/75
PUSHS LF@g                                                                      #    64/75
ADDS                                                                            #    65/75
PUSHS LF@h                                                                      #    66/75
ADDS                                                                            #    67/75
PUSHS LF@i                                                                      #    68/75
ADDS                                                                            #    69/75
CREATEFRAME                                                                     #    70/75
DEFVAR TF@write                                                                 #    71/75
POPS TF@write                                                                   #    72/75
WRITE TF@write                                                                  #    73/75

