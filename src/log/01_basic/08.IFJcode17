# 2017-12-04 23:21:42.502818
# SECTION: 01_basic
# TEST: 08
# INFO: variable declaration with implicit value
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@int
# Executing instruction: IMOVE at line: 17 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@int()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@float
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@float()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@str
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@str()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: LF@int=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 27 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 28 with following arguments:
# Arg1: Stack@=0(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IDEFVAR at line: 30 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 32 with following arguments:
# Arg1: TF@write=0(int)
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@float=0(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IDEFVAR at line: 35 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 36 with following arguments:
# Arg1: Stack@=0(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 37 with following arguments:
# Arg1: TF@write=0(double)
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: LF@str=(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 39 with following arguments:
# Executing instruction: IDEFVAR at line: 40 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=(string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 42 with following arguments:
# Arg1: TF@write=(string)
# Executing instruction: IGROOT at line: 45 with following arguments:
# I am Groot at 45 (176).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 176 (49+127)
# GROOT: 176
# 
#   1: ' variable declaration with implicit value
#   2: scope
#   3: 	dim int as integer
#   4: 	dim float as double
#   5: 	dim str as string
#   6: 
#   7: 	print int; float; str;
#   8: end scope

########################################

.IFJcode17                                                                      #     1/43
DEFVAR GF@$str1                                                                 #     2/43
DEFVAR GF@$str2                                                                 #     3/43
DEFVAR GF@$num1                                                                 #     4/43
DEFVAR GF@$num2                                                                 #     5/43
DEFVAR GF@$num3                                                                 #     6/43
DEFVAR GF@$bool1                                                                #     7/43
DEFVAR GF@$counter                                                              #     8/43
DEFVAR GF@$char                                                                 #     9/43
JUMP $$main                                                                     #    10/43
LABEL $$main                                                                    #    12/43
CREATEFRAME                                                                     #    13/43
PUSHFRAME                                                                       #    14/43
DEFVAR LF@int                                                                   #    16/43
MOVE LF@int int@0                                                               #    17/43
DEFVAR LF@float                                                                 #    19/43
MOVE LF@float float@0                                                           #    20/43
DEFVAR LF@str                                                                   #    22/43
MOVE LF@str string@                                                             #    23/43
PUSHS LF@int                                                                    #    26/43
INT2FLOATS                                                                      #    27/43
FLOAT2R2EINTS                                                                   #    28/43
CREATEFRAME                                                                     #    29/43
DEFVAR TF@write                                                                 #    30/43
POPS TF@write                                                                   #    31/43
WRITE TF@write                                                                  #    32/43
PUSHS LF@float                                                                  #    33/43
CREATEFRAME                                                                     #    34/43
DEFVAR TF@write                                                                 #    35/43
POPS TF@write                                                                   #    36/43
WRITE TF@write                                                                  #    37/43
PUSHS LF@str                                                                    #    38/43
CREATEFRAME                                                                     #    39/43
DEFVAR TF@write                                                                 #    40/43
POPS TF@write                                                                   #    41/43
WRITE TF@write                                                                  #    42/43

