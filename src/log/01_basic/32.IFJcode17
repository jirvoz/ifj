# 2017-12-04 23:21:43.515813
# SECTION: 01_basic
# TEST: 32
# INFO: Case sensitive
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 29 with following arguments:
# Executing instruction: ICREATEFRAME at line: 30 with following arguments:
# Executing instruction: IPUSHFRAME at line: 31 with following arguments:
# Executing instruction: IDEFVAR at line: 33 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 34 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 38 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 39 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@a=0(int)
# Executing instruction: IDEFVAR at line: 41 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 42 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 45 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 46 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 47 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@a
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 20 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 21 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 22 with following arguments:
# Executing instruction: IRETURN at line: 23 with following arguments:
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 49 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@a=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 55 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IDEFVAR at line: 57 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 59 with following arguments:
# Arg1: TF@write=5(int)
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: LF@b=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 61 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 62 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 63 with following arguments:
# Executing instruction: IDEFVAR at line: 64 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 65 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 66 with following arguments:
# Arg1: TF@write=5(int)
# Executing instruction: IGROOT at line: 70 with following arguments:
# I am Groot at 70 (240).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 240 (71+169)
# GROOT: 240
# 
#   1: ' Case sensitive
#   2: 
#   3: function fun(a as integer) as integer
#   4: 	return 5
#   5: end function
#   6: 
#   7: scope
#   8:     dim a as integer
#   9:     A = 5
#  10:     dim b as integer
#  11:     b = FuN(5)
#  12:     
#  13:     print a; b;
#  14: 
#  15: end scope

########################################

.IFJcode17                                                                      #     1/68
DEFVAR GF@$str1                                                                 #     2/68
DEFVAR GF@$str2                                                                 #     3/68
DEFVAR GF@$num1                                                                 #     4/68
DEFVAR GF@$num2                                                                 #     5/68
DEFVAR GF@$num3                                                                 #     6/68
DEFVAR GF@$bool1                                                                #     7/68
DEFVAR GF@$counter                                                              #     8/68
DEFVAR GF@$char                                                                 #     9/68
JUMP $$main                                                                     #    10/68
LABEL $fun                                                                      #    12/68
CREATEFRAME                                                                     #    13/68
PUSHFRAME                                                                       #    14/68
DEFVAR LF@a                                                                     #    15/68
POPS LF@a                                                                       #    16/68
PUSHS int@5                                                                     #    19/68
INT2FLOATS                                                                      #    20/68
FLOAT2R2EINTS                                                                   #    21/68
POPFRAME                                                                        #    22/68
RETURN                                                                          #    23/68
PUSHS int@0                                                                     #    25/68
POPFRAME                                                                        #    26/68
RETURN                                                                          #    27/68
LABEL $$main                                                                    #    29/68
CREATEFRAME                                                                     #    30/68
PUSHFRAME                                                                       #    31/68
DEFVAR LF@a                                                                     #    33/68
MOVE LF@a int@0                                                                 #    34/68
PUSHS int@5                                                                     #    36/68
INT2FLOATS                                                                      #    37/68
FLOAT2R2EINTS                                                                   #    38/68
POPS LF@a                                                                       #    39/68
DEFVAR LF@b                                                                     #    41/68
MOVE LF@b int@0                                                                 #    42/68
PUSHS int@5                                                                     #    44/68
INT2FLOATS                                                                      #    45/68
FLOAT2R2EINTS                                                                   #    46/68
CALL $fun                                                                       #    47/68
INT2FLOATS                                                                      #    48/68
FLOAT2R2EINTS                                                                   #    49/68
POPS LF@b                                                                       #    50/68
PUSHS LF@a                                                                      #    53/68
INT2FLOATS                                                                      #    54/68
FLOAT2R2EINTS                                                                   #    55/68
CREATEFRAME                                                                     #    56/68
DEFVAR TF@write                                                                 #    57/68
POPS TF@write                                                                   #    58/68
WRITE TF@write                                                                  #    59/68
PUSHS LF@b                                                                      #    60/68
INT2FLOATS                                                                      #    61/68
FLOAT2R2EINTS                                                                   #    62/68
CREATEFRAME                                                                     #    63/68
DEFVAR TF@write                                                                 #    64/68
POPS TF@write                                                                   #    65/68
WRITE TF@write                                                                  #    66/68

