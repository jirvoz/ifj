# 2017-12-04 23:21:47.397400
# SECTION: 99_benchmarks
# TEST: 04
# INFO: complex expression
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 18 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 19 with following arguments:
# Arg1: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 20 with following arguments:
# Arg1: Stack@=74(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=745.745(double)
# Dest: LF@b()
# Executing instruction: IDEFVAR at line: 26 with following arguments:
# Dest: LF@c
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=123456789(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=123456789(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 31 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=123456789(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=-123456789(double)
# Dest: LF@c()
# Executing instruction: IDEFVAR at line: 35 with following arguments:
# Dest: LF@d
# Executing instruction: IMOVE at line: 36 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@d()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 40 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 43 with following arguments:
# Arg1: Stack@=74(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 46 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 47 with following arguments:
# Arg1: Stack@=5476(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 50 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 51 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 52 with following arguments:
# Arg1: Stack@=5477(double)
# Arg2: Stack@=55185.13(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 55 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 58 with following arguments:
# Arg1: Stack@=74(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 61 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 62 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=5476(double)
# Arg2: Stack@=55185.13(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 64 with following arguments:
# Arg1: LF@c=-123456789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 66 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 67 with following arguments:
# Arg1: Stack@=-123456789(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 68 with following arguments:
# Arg1: Stack@=60661.13(double)
# Arg2: Stack@=-864197523(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 70 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 73 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 75 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=-864136861.87(double)
# Arg2: Stack@=7457.45(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 77 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=-864129404.42(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: Const@=78(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 80 with following arguments:
# Arg1: Stack@=78(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 81 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=78(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: Const@=96(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 83 with following arguments:
# Arg1: Stack@=96(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 84 with following arguments:
# Arg1: Stack@=58168.11(double)
# Arg2: Stack@=96(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 85 with following arguments:
# Arg1: Stack@=-644420182699.1929(double)
# Arg2: Stack@=5584138.560000001(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 87 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 88 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 89 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 90 with following arguments:
# Arg1: Stack@=-644425766837.7529(double)
# Arg2: Stack@=55185.13(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 91 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 92 with following arguments:
# Arg1: LF@c=-123456789(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 93 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=-123456789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 94 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 95 with following arguments:
# Arg1: Stack@=-123456043.255(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@c=-123456789(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 97 with following arguments:
# Arg1: Stack@=-123455297.51(double)
# Arg2: Stack@=-123456789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 99 with following arguments:
# Arg1: Stack@=-246912086.51(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 100 with following arguments:
# Arg1: LF@c=-123456789(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 101 with following arguments:
# Arg1: Stack@=-246911340.765(double)
# Arg2: Stack@=-123456789(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 102 with following arguments:
# Arg1: Stack@=-644425822022.8829(double)
# Arg2: Stack@=-370368129.765(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@c=-123456789(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 104 with following arguments:
# Arg1: Stack@=-644796190152.6479(double)
# Arg2: Stack@=-123456789(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 105 with following arguments:
# Arg1: Stack@=-49708.13(double)
# Arg2: Stack@=5222.849187764376(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 106 with following arguments:
# Arg1: Stack@=-44485.28081223562(double)
# Dest: LF@c=-123456789(double)
# Executing instruction: IPUSHS at line: 108 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 109 with following arguments:
# Executing instruction: IDEFVAR at line: 110 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 111 with following arguments:
# Arg1: Stack@=-44485.28081223562(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 112 with following arguments:
# Arg1: TF@write=-44485.28081223562(double)
# Executing instruction: IPUSHS at line: 114 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 115 with following arguments:
# Executing instruction: IDEFVAR at line: 116 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 117 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 118 with following arguments:
# Arg1: TF@write=
# (string)
# Executing instruction: IPUSHS at line: 120 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 121 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 122 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 124 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 125 with following arguments:
# Arg1: Stack@=74(double)
# Arg2: Stack@=-0.01676385955947217(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 126 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 127 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 128 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 129 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 130 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 131 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 132 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 133 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 134 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 135 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 136 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 137 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 138 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 139 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 140 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 141 with following arguments:
# Arg1: Const@=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 142 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 143 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 144 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 145 with following arguments:
# Arg1: Const@=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 146 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 147 with following arguments:
# Arg1: Stack@=-44485.28081223562(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 148 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 149 with following arguments:
# Arg1: Stack@=-3291910.780105436(double)
# Arg2: Stack@=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 151 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 153 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 154 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 155 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 156 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 157 with following arguments:
# Arg1: Stack@=5965.96(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 158 with following arguments:
# Arg1: Stack@=-44485.28081223562(double)
# Arg2: Stack@=5969.96(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 159 with following arguments:
# Arg1: Stack@=-3247425.499293201(double)
# Arg2: Stack@=-265575347.0378142(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 161 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 162 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 163 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 165 with following arguments:
# Arg1: Stack@=55185.13(double)
# Arg2: Stack@=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 166 with following arguments:
# Arg1: Stack@=-268822772.5371073(double)
# Arg2: Stack@=-1.240525607400941(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 167 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 168 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 169 with following arguments:
# Arg1: Stack@=-268822773.777633(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 170 with following arguments:
# Arg1: Stack@=72(double)
# Arg2: Stack@=-268822766.777633(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 171 with following arguments:
# Arg1: Stack@=-70(double)
# Arg2: Stack@=-2.678344578588374e-07(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 172 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 173 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 174 with following arguments:
# Arg1: Stack@=-70.00000026783445(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 175 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 176 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 177 with following arguments:
# Arg1: Stack@=-144.0000002678345(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 178 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=-137.0000002678345(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 179 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 180 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 181 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 182 with following arguments:
# Arg1: Stack@=74(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 183 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 184 with following arguments:
# Arg1: Stack@=55185.13(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 185 with following arguments:
# Arg1: Stack@=-274.0000005356689(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 186 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=-348.0000005356689(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 187 with following arguments:
# Arg1: Stack@=752.745(double)
# Arg2: Stack@=-0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 188 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 189 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 190 with following arguments:
# Arg1: Stack@=752.745(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 192 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 193 with following arguments:
# Arg1: Stack@=753.745(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 194 with following arguments:
# Arg1: Stack@=73.98323614044052(double)
# Arg2: Stack@=188.43625(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 195 with following arguments:
# Arg1: Stack@=-114.4530138595595(double)
# Dest: LF@d=0(double)
# Executing instruction: IPUSHS at line: 197 with following arguments:
# Arg1: LF@d=-114.4530138595595(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 198 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 199 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 200 with following arguments:
# Arg1: LF@d=-114.4530138595595(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 201 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=-114.4530138595595(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 202 with following arguments:
# Arg1: Stack@=-114.4530138595595(double)
# Arg2: Stack@=-228.906027719119(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 203 with following arguments:
# Arg1: Stack@=114.4530138595595(double)
# Dest: LF@d=-114.4530138595595(double)
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@d=114.4530138595595(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 206 with following arguments:
# Executing instruction: IDEFVAR at line: 207 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 208 with following arguments:
# Arg1: Stack@=114.4530138595595(double)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 209 with following arguments:
# Arg1: TF@write=114.4530138595595(double)
# Executing instruction: IGROOT at line: 212 with following arguments:
# I am Groot at 212 (1274).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1274 (325+949)
# GROOT: 1274
# 
#   1: ' complex expression
#   2: 
#   3: scope
#   4: 	dim a as integer = 74
#   5: 	dim b as double = 745.745
#   6: 	dim c as double = 0-123456789
#   7: 	
#   8: 	dim d as double
#   9: 
#  10: 	c = (a * a) + b / b - b * a + (b * (a * a + b * a + c * 7 + 2 * 5 * b) - b * 78 * 96 - b * a + (b + c + b + c + b + c)) / c
#  11: 	print c;
#  12: 	print !"\n";
#  13: 	d = a + (b / c) - (7 + b - 0 / (2 * (4 - a + 8 * 9 / (c * 74 - c + c * (b * 8 + 4) + b * a / c + 7) - a + 7) - a * b / b) + 1)/4
#  14: 	d = d - 2 * d
#  15: 	print d;
#  16: end scope

########################################

.IFJcode17                                                                      #     1/210
DEFVAR GF@$str1                                                                 #     2/210
DEFVAR GF@$str2                                                                 #     3/210
DEFVAR GF@$num1                                                                 #     4/210
DEFVAR GF@$num2                                                                 #     5/210
DEFVAR GF@$num3                                                                 #     6/210
DEFVAR GF@$bool1                                                                #     7/210
DEFVAR GF@$counter                                                              #     8/210
DEFVAR GF@$char                                                                 #     9/210
JUMP $$main                                                                     #    10/210
LABEL $$main                                                                    #    12/210
CREATEFRAME                                                                     #    13/210
PUSHFRAME                                                                       #    14/210
DEFVAR LF@a                                                                     #    16/210
PUSHS int@74                                                                    #    17/210
INT2FLOATS                                                                      #    18/210
FLOAT2R2EINTS                                                                   #    19/210
POPS LF@a                                                                       #    20/210
DEFVAR LF@b                                                                     #    22/210
PUSHS float@745.745                                                             #    23/210
POPS LF@b                                                                       #    24/210
DEFVAR LF@c                                                                     #    26/210
PUSHS int@0                                                                     #    27/210
INT2FLOATS                                                                      #    28/210
PUSHS int@123456789                                                             #    29/210
INT2FLOATS                                                                      #    30/210
SUBS                                                                            #    31/210
POPS LF@c                                                                       #    32/210
DEFVAR LF@d                                                                     #    35/210
MOVE LF@d float@0                                                               #    36/210
PUSHS LF@a                                                                      #    39/210
INT2FLOATS                                                                      #    40/210
PUSHS LF@a                                                                      #    41/210
INT2FLOATS                                                                      #    42/210
MULS                                                                            #    43/210
PUSHS LF@b                                                                      #    44/210
PUSHS LF@b                                                                      #    45/210
DIVS                                                                            #    46/210
ADDS                                                                            #    47/210
PUSHS LF@b                                                                      #    48/210
PUSHS LF@a                                                                      #    49/210
INT2FLOATS                                                                      #    50/210
MULS                                                                            #    51/210
SUBS                                                                            #    52/210
PUSHS LF@b                                                                      #    53/210
PUSHS LF@a                                                                      #    54/210
INT2FLOATS                                                                      #    55/210
PUSHS LF@a                                                                      #    56/210
INT2FLOATS                                                                      #    57/210
MULS                                                                            #    58/210
PUSHS LF@b                                                                      #    59/210
PUSHS LF@a                                                                      #    60/210
INT2FLOATS                                                                      #    61/210
MULS                                                                            #    62/210
ADDS                                                                            #    63/210
PUSHS LF@c                                                                      #    64/210
PUSHS int@7                                                                     #    65/210
INT2FLOATS                                                                      #    66/210
MULS                                                                            #    67/210
ADDS                                                                            #    68/210
PUSHS int@2                                                                     #    69/210
INT2FLOATS                                                                      #    70/210
PUSHS int@5                                                                     #    71/210
INT2FLOATS                                                                      #    72/210
MULS                                                                            #    73/210
PUSHS LF@b                                                                      #    74/210
MULS                                                                            #    75/210
ADDS                                                                            #    76/210
MULS                                                                            #    77/210
PUSHS LF@b                                                                      #    78/210
PUSHS int@78                                                                    #    79/210
INT2FLOATS                                                                      #    80/210
MULS                                                                            #    81/210
PUSHS int@96                                                                    #    82/210
INT2FLOATS                                                                      #    83/210
MULS                                                                            #    84/210
SUBS                                                                            #    85/210
PUSHS LF@b                                                                      #    86/210
PUSHS LF@a                                                                      #    87/210
INT2FLOATS                                                                      #    88/210
MULS                                                                            #    89/210
SUBS                                                                            #    90/210
PUSHS LF@b                                                                      #    91/210
PUSHS LF@c                                                                      #    92/210
ADDS                                                                            #    93/210
PUSHS LF@b                                                                      #    94/210
ADDS                                                                            #    95/210
PUSHS LF@c                                                                      #    96/210
ADDS                                                                            #    97/210
PUSHS LF@b                                                                      #    98/210
ADDS                                                                            #    99/210
PUSHS LF@c                                                                      #   100/210
ADDS                                                                            #   101/210
ADDS                                                                            #   102/210
PUSHS LF@c                                                                      #   103/210
DIVS                                                                            #   104/210
ADDS                                                                            #   105/210
POPS LF@c                                                                       #   106/210
PUSHS LF@c                                                                      #   108/210
CREATEFRAME                                                                     #   109/210
DEFVAR TF@write                                                                 #   110/210
POPS TF@write                                                                   #   111/210
WRITE TF@write                                                                  #   112/210
PUSHS string@\010                                                               #   114/210
CREATEFRAME                                                                     #   115/210
DEFVAR TF@write                                                                 #   116/210
POPS TF@write                                                                   #   117/210
WRITE TF@write                                                                  #   118/210
PUSHS LF@a                                                                      #   120/210
INT2FLOATS                                                                      #   121/210
PUSHS LF@b                                                                      #   122/210
PUSHS LF@c                                                                      #   123/210
DIVS                                                                            #   124/210
ADDS                                                                            #   125/210
PUSHS int@7                                                                     #   126/210
INT2FLOATS                                                                      #   127/210
PUSHS LF@b                                                                      #   128/210
ADDS                                                                            #   129/210
PUSHS int@0                                                                     #   130/210
INT2FLOATS                                                                      #   131/210
PUSHS int@2                                                                     #   132/210
INT2FLOATS                                                                      #   133/210
PUSHS int@4                                                                     #   134/210
INT2FLOATS                                                                      #   135/210
PUSHS LF@a                                                                      #   136/210
INT2FLOATS                                                                      #   137/210
SUBS                                                                            #   138/210
PUSHS int@8                                                                     #   139/210
INT2FLOATS                                                                      #   140/210
PUSHS int@9                                                                     #   141/210
INT2FLOATS                                                                      #   142/210
MULS                                                                            #   143/210
PUSHS LF@c                                                                      #   144/210
PUSHS int@74                                                                    #   145/210
INT2FLOATS                                                                      #   146/210
MULS                                                                            #   147/210
PUSHS LF@c                                                                      #   148/210
SUBS                                                                            #   149/210
PUSHS LF@c                                                                      #   150/210
PUSHS LF@b                                                                      #   151/210
PUSHS int@8                                                                     #   152/210
INT2FLOATS                                                                      #   153/210
MULS                                                                            #   154/210
PUSHS int@4                                                                     #   155/210
INT2FLOATS                                                                      #   156/210
ADDS                                                                            #   157/210
MULS                                                                            #   158/210
ADDS                                                                            #   159/210
PUSHS LF@b                                                                      #   160/210
PUSHS LF@a                                                                      #   161/210
INT2FLOATS                                                                      #   162/210
MULS                                                                            #   163/210
PUSHS LF@c                                                                      #   164/210
DIVS                                                                            #   165/210
ADDS                                                                            #   166/210
PUSHS int@7                                                                     #   167/210
INT2FLOATS                                                                      #   168/210
ADDS                                                                            #   169/210
DIVS                                                                            #   170/210
ADDS                                                                            #   171/210
PUSHS LF@a                                                                      #   172/210
INT2FLOATS                                                                      #   173/210
SUBS                                                                            #   174/210
PUSHS int@7                                                                     #   175/210
INT2FLOATS                                                                      #   176/210
ADDS                                                                            #   177/210
MULS                                                                            #   178/210
PUSHS LF@a                                                                      #   179/210
INT2FLOATS                                                                      #   180/210
PUSHS LF@b                                                                      #   181/210
MULS                                                                            #   182/210
PUSHS LF@b                                                                      #   183/210
DIVS                                                                            #   184/210
SUBS                                                                            #   185/210
DIVS                                                                            #   186/210
SUBS                                                                            #   187/210
PUSHS int@1                                                                     #   188/210
INT2FLOATS                                                                      #   189/210
ADDS                                                                            #   190/210
PUSHS int@4                                                                     #   191/210
INT2FLOATS                                                                      #   192/210
DIVS                                                                            #   193/210
SUBS                                                                            #   194/210
POPS LF@d                                                                       #   195/210
PUSHS LF@d                                                                      #   197/210
PUSHS int@2                                                                     #   198/210
INT2FLOATS                                                                      #   199/210
PUSHS LF@d                                                                      #   200/210
MULS                                                                            #   201/210
SUBS                                                                            #   202/210
POPS LF@d                                                                       #   203/210
PUSHS LF@d                                                                      #   205/210
CREATEFRAME                                                                     #   206/210
DEFVAR TF@write                                                                 #   207/210
POPS TF@write                                                                   #   208/210
WRITE TF@write                                                                  #   209/210

