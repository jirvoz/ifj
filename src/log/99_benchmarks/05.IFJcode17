# 2017-12-04 23:21:47.414161
# SECTION: 99_benchmarks
# TEST: 05
# INFO: factorial by recursion
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, BASE, IFTHEN
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IDEFVAR at line: 2 with following arguments:
# Dest: GF@$str1
# Executing instruction: IDEFVAR at line: 3 with following arguments:
# Dest: GF@$str2
# Executing instruction: IDEFVAR at line: 4 with following arguments:
# Dest: GF@$num1
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@$num2
# Executing instruction: IDEFVAR at line: 6 with following arguments:
# Dest: GF@$num3
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@$bool1
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: GF@$counter
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@$char
# Executing instruction: IJUMP at line: 10 with following arguments:
# Executing instruction: ILABEL at line: 81 with following arguments:
# Executing instruction: ICREATEFRAME at line: 82 with following arguments:
# Executing instruction: IPUSHFRAME at line: 83 with following arguments:
# Executing instruction: IDEFVAR at line: 85 with following arguments:
# Dest: LF@res
# Executing instruction: IMOVE at line: 86 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@res()
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 89 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 90 with following arguments:
# Arg1: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 91 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 32 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 43 with following arguments:
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 49 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@decremented_n=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 55 with following arguments:
# Arg1: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@n=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 32 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 43 with following arguments:
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@n=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 49 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@decremented_n=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 55 with following arguments:
# Arg1: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@n=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 32 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 43 with following arguments:
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@n=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 49 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@decremented_n=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 55 with following arguments:
# Arg1: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@n=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 32 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 43 with following arguments:
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@n=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 49 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@decremented_n=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 55 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@n=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 32 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 43 with following arguments:
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@n=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 49 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@decremented_n=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 55 with following arguments:
# Arg1: Stack@=5(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@n=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 32 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 43 with following arguments:
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@n=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 49 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@decremented_n=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 55 with following arguments:
# Arg1: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 32 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 43 with following arguments:
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 49 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@decremented_n=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 55 with following arguments:
# Arg1: Stack@=3(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@n=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 32 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 43 with following arguments:
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@n=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 49 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@decremented_n=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 55 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@n=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 32 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 43 with following arguments:
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@n=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 49 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 50 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@decremented_n=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 55 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 12 with following arguments:
# Executing instruction: ICREATEFRAME at line: 13 with following arguments:
# Executing instruction: IPUSHFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@n
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@n()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 32 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 38 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 39 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@result=0(int)
# Executing instruction: IJUMP at line: 42 with following arguments:
# Executing instruction: ILABEL at line: 69 with following arguments:
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 73 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IRETURN at line: 75 with following arguments:
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@n=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@temp_result=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 65 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 66 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@result=0(int)
# Executing instruction: ILABEL at line: 69 with following arguments:
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 73 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IRETURN at line: 75 with following arguments:
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@n=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@temp_result=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 65 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 66 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@result=0(int)
# Executing instruction: ILABEL at line: 69 with following arguments:
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 73 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IRETURN at line: 75 with following arguments:
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@temp_result=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 65 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 66 with following arguments:
# Arg1: Stack@=24(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=24(int)
# Dest: LF@result=0(int)
# Executing instruction: ILABEL at line: 69 with following arguments:
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=24(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=24(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 73 with following arguments:
# Arg1: Stack@=24(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IRETURN at line: 75 with following arguments:
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=24(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=24(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=24(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@n=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@temp_result=24(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=24(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 65 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=24(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 66 with following arguments:
# Arg1: Stack@=120(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=120(int)
# Dest: LF@result=0(int)
# Executing instruction: ILABEL at line: 69 with following arguments:
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=120(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=120(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 73 with following arguments:
# Arg1: Stack@=120(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IRETURN at line: 75 with following arguments:
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=120(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=120(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=120(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@n=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@temp_result=120(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=120(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 65 with following arguments:
# Arg1: Stack@=6(double)
# Arg2: Stack@=120(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 66 with following arguments:
# Arg1: Stack@=720(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=720(int)
# Dest: LF@result=0(int)
# Executing instruction: ILABEL at line: 69 with following arguments:
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=720(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=720(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 73 with following arguments:
# Arg1: Stack@=720(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IRETURN at line: 75 with following arguments:
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=720(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=720(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=720(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@n=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@temp_result=720(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=720(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 65 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=720(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 66 with following arguments:
# Arg1: Stack@=5040(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=5040(int)
# Dest: LF@result=0(int)
# Executing instruction: ILABEL at line: 69 with following arguments:
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=5040(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=5040(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 73 with following arguments:
# Arg1: Stack@=5040(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IRETURN at line: 75 with following arguments:
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=5040(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=5040(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=5040(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@n=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@temp_result=5040(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=5040(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 65 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=5040(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 66 with following arguments:
# Arg1: Stack@=40320(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=40320(int)
# Dest: LF@result=0(int)
# Executing instruction: ILABEL at line: 69 with following arguments:
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=40320(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=40320(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 73 with following arguments:
# Arg1: Stack@=40320(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IRETURN at line: 75 with following arguments:
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=40320(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=40320(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=40320(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@n=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@temp_result=40320(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=40320(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 65 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=40320(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 66 with following arguments:
# Arg1: Stack@=362880(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=362880(int)
# Dest: LF@result=0(int)
# Executing instruction: ILABEL at line: 69 with following arguments:
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=362880(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=362880(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 73 with following arguments:
# Arg1: Stack@=362880(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IRETURN at line: 75 with following arguments:
# Executing instruction: IINT2FLOATS at line: 57 with following arguments:
# Arg1: Stack@=362880(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 58 with following arguments:
# Arg1: Stack@=362880(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=362880(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@temp_result=362880(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 64 with following arguments:
# Arg1: Stack@=362880(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 65 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=362880(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 66 with following arguments:
# Arg1: Stack@=3628800(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=3628800(int)
# Dest: LF@result=0(int)
# Executing instruction: ILABEL at line: 69 with following arguments:
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: LF@result=3628800(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=3628800(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 73 with following arguments:
# Arg1: Stack@=3628800(double)
# Dest: Stack@()
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IRETURN at line: 75 with following arguments:
# Executing instruction: IINT2FLOATS at line: 92 with following arguments:
# Arg1: Stack@=3628800(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 93 with following arguments:
# Arg1: Stack@=3628800(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 94 with following arguments:
# Arg1: Stack@=3628800(int)
# Dest: LF@res=0(int)
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@res=3628800(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 97 with following arguments:
# Arg1: Stack@=3628800(int)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 98 with following arguments:
# Arg1: Stack@=3628800(double)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 99 with following arguments:
# Executing instruction: IDEFVAR at line: 100 with following arguments:
# Dest: TF@write
# Executing instruction: IPOPS at line: 101 with following arguments:
# Arg1: Stack@=3628800(int)
# Dest: TF@write()
# Executing instruction: IWRITE at line: 102 with following arguments:
# Arg1: TF@write=3628800(int)
# Executing instruction: IGROOT at line: 105 with following arguments:
# I am Groot at 105 (2409).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 2409 (615+1794)
# GROOT: 2409
# 
#   1: ' factorial by recursion
#   2: declare function factorial (n As integer) As integer
#   3: function factorial (n As integer) As integer
#   4: 	dim temp_result As integer
#   5: 	dim decremented_n As integer
#   6: 	dim result As integer
#   7: 	if n < 2 Then
#   8: 		result = 1
#   9: 	Else
#  10: 		decremented_n = n - 1
#  11: 		temp_result = factorial(decremented_n)
#  12: 		result = n * temp_result
#  13: 	end if
#  14: 	Return result
#  15: end function
#  16: 
#  17: scope
#  18: 	dim res as integer
#  19: 	res = factorial(10)
#  20: 	print res;
#  21: end scope

########################################

.IFJcode17                                                                      #     1/103
DEFVAR GF@$str1                                                                 #     2/103
DEFVAR GF@$str2                                                                 #     3/103
DEFVAR GF@$num1                                                                 #     4/103
DEFVAR GF@$num2                                                                 #     5/103
DEFVAR GF@$num3                                                                 #     6/103
DEFVAR GF@$bool1                                                                #     7/103
DEFVAR GF@$counter                                                              #     8/103
DEFVAR GF@$char                                                                 #     9/103
JUMP $$main                                                                     #    10/103
LABEL $factorial                                                                #    12/103
CREATEFRAME                                                                     #    13/103
PUSHFRAME                                                                       #    14/103
DEFVAR LF@n                                                                     #    15/103
POPS LF@n                                                                       #    16/103
DEFVAR LF@temp_result                                                           #    19/103
MOVE LF@temp_result int@0                                                       #    20/103
DEFVAR LF@decremented_n                                                         #    22/103
MOVE LF@decremented_n int@0                                                     #    23/103
DEFVAR LF@result                                                                #    25/103
MOVE LF@result int@0                                                            #    26/103
PUSHS LF@n                                                                      #    28/103
INT2FLOATS                                                                      #    29/103
PUSHS int@2                                                                     #    30/103
INT2FLOATS                                                                      #    31/103
LTS                                                                             #    32/103
PUSHS bool@true                                                                 #    33/103
JUMPIFNEQS &else7                                                               #    34/103
PUSHS int@1                                                                     #    37/103
INT2FLOATS                                                                      #    38/103
FLOAT2R2EINTS                                                                   #    39/103
POPS LF@result                                                                  #    40/103
JUMP &endif7                                                                    #    42/103
LABEL &else7                                                                    #    43/103
PUSHS LF@n                                                                      #    45/103
INT2FLOATS                                                                      #    46/103
PUSHS int@1                                                                     #    47/103
INT2FLOATS                                                                      #    48/103
SUBS                                                                            #    49/103
FLOAT2R2EINTS                                                                   #    50/103
POPS LF@decremented_n                                                           #    51/103
PUSHS LF@decremented_n                                                          #    53/103
INT2FLOATS                                                                      #    54/103
FLOAT2R2EINTS                                                                   #    55/103
CALL $factorial                                                                 #    56/103
INT2FLOATS                                                                      #    57/103
FLOAT2R2EINTS                                                                   #    58/103
POPS LF@temp_result                                                             #    59/103
PUSHS LF@n                                                                      #    61/103
INT2FLOATS                                                                      #    62/103
PUSHS LF@temp_result                                                            #    63/103
INT2FLOATS                                                                      #    64/103
MULS                                                                            #    65/103
FLOAT2R2EINTS                                                                   #    66/103
POPS LF@result                                                                  #    67/103
LABEL &endif7                                                                   #    69/103
PUSHS LF@result                                                                 #    71/103
INT2FLOATS                                                                      #    72/103
FLOAT2R2EINTS                                                                   #    73/103
POPFRAME                                                                        #    74/103
RETURN                                                                          #    75/103
PUSHS int@0                                                                     #    77/103
POPFRAME                                                                        #    78/103
RETURN                                                                          #    79/103
LABEL $$main                                                                    #    81/103
CREATEFRAME                                                                     #    82/103
PUSHFRAME                                                                       #    83/103
DEFVAR LF@res                                                                   #    85/103
MOVE LF@res int@0                                                               #    86/103
PUSHS int@10                                                                    #    88/103
INT2FLOATS                                                                      #    89/103
FLOAT2R2EINTS                                                                   #    90/103
CALL $factorial                                                                 #    91/103
INT2FLOATS                                                                      #    92/103
FLOAT2R2EINTS                                                                   #    93/103
POPS LF@res                                                                     #    94/103
PUSHS LF@res                                                                    #    96/103
INT2FLOATS                                                                      #    97/103
FLOAT2R2EINTS                                                                   #    98/103
CREATEFRAME                                                                     #    99/103
DEFVAR TF@write                                                                 #   100/103
POPS TF@write                                                                   #   101/103
WRITE TF@write                                                                  #   102/103

